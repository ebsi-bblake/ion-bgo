import{W as t,C as e,r as n,S as a}from"./DocumentViewerPage-DAe2UyhE.js";import"./index-bkwOO0SP.js";function s(t,e){for(var n=0;n<e.length;n++){const a=e[n];if("string"!=typeof a&&!Array.isArray(a))for(const e in a)if("default"!==e&&!(e in t)){const n=Object.getOwnPropertyDescriptor(a,e);n&&Object.defineProperty(t,e,n.get?n:{enumerable:!0,get:()=>a[e]})}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}var o,r,i,c,l,u,h="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function d(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function p(t){if(t.__esModule)return t;var e=t.default;if("function"==typeof e){var n=function t(){return this instanceof t?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach((function(e){var a=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(n,e,a.get?a:{enumerable:!0,get:function(){return t[e]}})})),n}(r=o||(o={})).Prompt="PROMPT",r.Camera="CAMERA",r.Photos="PHOTOS",(c=i||(i={})).Rear="REAR",c.Front="FRONT",(u=l||(l={})).Uri="uri",u.Base64="base64",u.DataUrl="dataUrl";class f extends t{async getPhoto(t){return new Promise((async(e,n)=>{if(t.webUseInput||t.source===o.Photos)this.fileInputExperience(t,e,n);else if(t.source===o.Prompt){let a=document.querySelector("pwa-action-sheet");a||(a=document.createElement("pwa-action-sheet"),document.body.appendChild(a)),a.header=t.promptLabelHeader||"Photo",a.cancelable=!1,a.options=[{title:t.promptLabelPhoto||"From Photos"},{title:t.promptLabelPicture||"Take Picture"}],a.addEventListener("onSelection",(async a=>{0===a.detail?this.fileInputExperience(t,e,n):this.cameraExperience(t,e,n)}))}else this.cameraExperience(t,e,n)}))}async pickImages(t){return new Promise((async(t,e)=>{this.multipleFileInputExperience(t,e)}))}async cameraExperience(t,n,a){if(customElements.get("pwa-camera-modal")){const o=document.createElement("pwa-camera-modal");o.facingMode=t.direction===i.Front?"user":"environment",document.body.appendChild(o);try{await o.componentOnReady(),o.addEventListener("onPhoto",(async s=>{const r=s.detail;null===r?a(new e("User cancelled photos app")):r instanceof Error?a(r):n(await this._getCameraPhoto(r,t)),o.dismiss(),document.body.removeChild(o)})),o.present()}catch(s){this.fileInputExperience(t,n,a)}}else console.error("Unable to load PWA Element 'pwa-camera-modal'. See the docs: https://capacitorjs.com/docs/web/pwa-elements."),this.fileInputExperience(t,n,a)}fileInputExperience(t,n,a){let s=document.querySelector("#_capacitor-camera-input");const r=()=>{var t;null===(t=s.parentNode)||void 0===t||t.removeChild(s)};s||(s=document.createElement("input"),s.id="_capacitor-camera-input",s.type="file",s.hidden=!0,document.body.appendChild(s),s.addEventListener("change",(e=>{const a=s.files[0];let o="jpeg";if("image/png"===a.type?o="png":"image/gif"===a.type&&(o="gif"),"dataUrl"===t.resultType||"base64"===t.resultType){const e=new FileReader;e.addEventListener("load",(()=>{if("dataUrl"===t.resultType)n({dataUrl:e.result,format:o});else if("base64"===t.resultType){const t=e.result.split(",")[1];n({base64String:t,format:o})}r()})),e.readAsDataURL(a)}else n({webPath:URL.createObjectURL(a),format:o}),r()})),s.addEventListener("cancel",(t=>{a(new e("User cancelled photos app")),r()}))),s.accept="image/*",s.capture=!0,t.source===o.Photos||t.source===o.Prompt?s.removeAttribute("capture"):t.direction===i.Front?s.capture="user":t.direction===i.Rear&&(s.capture="environment"),s.click()}multipleFileInputExperience(t,n){let a=document.querySelector("#_capacitor-camera-input-multiple");const s=()=>{var t;null===(t=a.parentNode)||void 0===t||t.removeChild(a)};a||(a=document.createElement("input"),a.id="_capacitor-camera-input-multiple",a.type="file",a.hidden=!0,a.multiple=!0,document.body.appendChild(a),a.addEventListener("change",(e=>{const n=[];for(let t=0;t<a.files.length;t++){const e=a.files[t];let s="jpeg";"image/png"===e.type?s="png":"image/gif"===e.type&&(s="gif"),n.push({webPath:URL.createObjectURL(e),format:s})}t({photos:n}),s()})),a.addEventListener("cancel",(t=>{n(new e("User cancelled photos app")),s()}))),a.accept="image/*",a.click()}_getCameraPhoto(t,e){return new Promise(((n,a)=>{const s=new FileReader,o=t.type.split("/")[1];"uri"===e.resultType?n({webPath:URL.createObjectURL(t),format:o,saved:!1}):(s.readAsDataURL(t),s.onloadend=()=>{const t=s.result;"dataUrl"===e.resultType?n({dataUrl:t,format:o,saved:!1}):n({base64String:t.split(",")[1],format:o,saved:!1})},s.onerror=t=>{a(t)})}))}async checkPermissions(){if("undefined"==typeof navigator||!navigator.permissions)throw this.unavailable("Permissions API not available in this browser");try{return{camera:(await window.navigator.permissions.query({name:"camera"})).state,photos:"granted"}}catch(t){throw this.unavailable("Camera permissions are not available in this browser")}}async requestPermissions(){throw this.unimplemented("Not implemented on web.")}async pickLimitedLibraryPhotos(){throw this.unavailable("Not implemented on web.")}async getLimitedLibraryPhotos(){throw this.unavailable("Not implemented on web.")}}new f;const g=n("Camera",{web:()=>new f});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class b{refCount(t){return x("refCount")}incRef(t){return x("incRef")}timerAvailable(){return!0}time(t){return x("time")}read(t){return x("read")}readSync(t){return x("readSync")}readToGPU(t,e){return x("readToGPU")}numDataIds(){return x("numDataIds")}disposeData(t,e){return x("disposeData")}write(t,e,n){return x("write")}move(t,e,n,a,s){return x("move")}createTensorFromGPUData(t,e,n){return x("createTensorFromGPUData")}memory(){return x("memory")}floatPrecision(){return x("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return x("dispose")}}function x(t){throw new Error("'".concat(t,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,v(t,e,n)}function k(t,e,n){return Math.max(t,Math.min(e,n))}function w(t){return t%2==0?t:t+1}function v(t,e,n){const a=t[e];t[e]=t[n],t[n]=a}function I(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function C(t,e,n=""){I(T(t,e),(()=>n+" Shapes ".concat(t," and ").concat(e," must match")))}function S(t){I(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function N(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function T(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function E(t){return t%1==0}function R(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function A(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function F(t,e=t=>0,n,a){return new Promise(((s,o)=>{let r=0;const i=()=>{if(t())return void s();r++;const c=e(r);null!=n&&r>=n?o():null!=a?a(i,c):setTimeout(i,c)};i()}))}function D(t,e){let n=1,a=-1;for(let o=0;o<t.length;++o)if(t[o]>=0)n*=t[o];else if(-1===t[o]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(o));a=o}else if(t[o]<0)throw Error("Shapes can not be < 0. Found ".concat(t[o]," at dim ").concat(o));if(-1===a){if(e>0&&e!==n)throw Error("Size(".concat(e,") must match the product of shape ").concat(t));return t}if(0===n)throw Error("Cannot infer the missing size in [".concat(t,"] when ")+"there are 0 elements");if(e%n!=0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(e," / ").concat(n));const s=t.slice();return s[a]=e/n,s}function _(t,e){const n=e.length;return I((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(t))),I(t.every((t=>E(t))),(()=>"All values in axis param must be integers but "+"got axis ".concat(t))),t.map((t=>t<0?n+t:t))}function O(t,e){const n=[],a=[],s=null!=e&&Array.isArray(e)&&0===e.length,o=null==e||s?null:_(e,t).sort();let r=0;for(let i=0;i<t.length;++i){if(null!=o){if(o[r]===i&&1!==t[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(t[i],"' is not 1"));(null==o[r]||o[r]>i)&&1===t[i]&&(n.push(t[i]),a.push(i)),o[r]<=i&&r++}1!==t[i]&&(n.push(t[i]),a.push(i))}return{newShape:n,keptDims:a}}function L(t,e){return M(t,e)}function M(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type ".concat(t));n=new Array(e)}return n}function z(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function P(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype ".concat(t))}function B(t){return"string"==typeof t||t instanceof String}function W(t){return"number"==typeof t}function U(t){return Array.isArray(t)?U(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":W(t)?"float32":B(t)?"string":"boolean"==typeof t?"bool":"float32"}function V(t){return!!(t&&t.constructor&&t.call&&t.apply)}function G(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function H(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let a=e-3;a>=0;--a)n[a]=n[a+1]*t[a+1];return n}function j(t,e,n,a=!1){const s=new Array;if(1===e.length){const o=e[0]*(a?2:1);for(let e=0;e<o;e++)s[e]=n[t+e]}else{const o=e[0],r=e.slice(1),i=r.reduce(((t,e)=>t*e))*(a?2:1);for(let e=0;e<o;e++)s[e]=j(t+e*i,r,n,a)}return s}function K(t,e,n=!1){if(0===t.length)return e[0];const a=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===a)return[];if(a!==e.length)throw new Error("[".concat(t,"] does not match the input size ").concat(e.length).concat(n?" for a complex tensor":"","."));return j(0,t,e,n)}function q(t,e){const n=X(t,e);for(let a=0;a<n.length;a++)n[a]=1;return n}function X(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type ".concat(e))}function Y(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return K(t,new Float32Array(n));if("int32"===e)return K(t,new Int32Array(n));if("bool"===e)return K(t,new Uint8Array(n));throw new Error("Unknown data type ".concat(e))}function Z(t){t.forEach((e=>{I(Number.isInteger(e)&&e>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(t,"].")))}))}function J(t,e,n){if(0===e)return 0;if(1===e)return t[0];let a=t[t.length-1];for(let s=0;s<t.length-1;++s)a+=n[s]*t[s];return a}function Q(t,e,n){if(0===e)return[];if(1===e)return[t];const a=new Array(e);for(let s=0;s<a.length-1;++s)a[s]=Math.floor(t/n[s]),t-=a[s]*n[s];return a[a.length-1]=t,a}function $(t){return t&&t.then&&"function"==typeof t.then}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tt="tfjsflags";class et{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=nt,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(at().getBool("IS_TEST")||at().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(t,"."))),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];at().getBool("IS_TEST")||at().getBool("PROD")||console.warn("Setting feature override from URL ".concat(t,": ").concat(e,".")),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if($(e))throw new Error("Flag ".concat(t," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error("Cannot set flag ".concat(t," as it has not been registered."));this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error("Cannot evaluate flag '".concat(t,"': no evaluation function found."));return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);if(tt in t){t[tt].split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){const n=e.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:e}(0,n)}))}}}function nt(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}function at(){return ot}let st,ot=null;function rt(){if(null==st){let t;if("undefined"!=typeof window)t=window;else if("undefined"!=typeof global)t=global;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}st=t}return st}function it(t,e){const n=function(){const t=rt();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const a=e();return n.set(t,a),n.get(t)}}const ct="Abs",lt="Acos",ut="Acosh",ht="Add",dt="AddN",pt="All",ft="Any",gt="ArgMax",mt="ArgMin",bt="Asin",xt="Asinh",yt="Atan",kt="Atanh",wt="Atan2",vt="AvgPool",It="AvgPoolGrad",Ct="AvgPool3D",St="AvgPool3DGrad",Nt="BatchMatMul",Tt="BatchToSpaceND",Et="Bincount",Rt="BitwiseAnd",At="BroadcastArgs",Ft="Cast",Dt="Ceil",_t="ClipByValue",Ot="Complex",Lt="ComplexAbs",Mt="Concat",zt="Conv2D",Pt="Conv2DBackpropFilter",Bt="Conv2DBackpropInput",Wt="Conv3D",Ut="Conv3DBackpropFilterV2",Vt="Conv3DBackpropInputV2",Gt="Cos",Ht="Cosh",jt="Cumprod",Kt="Cumsum",qt="CropAndResize",Xt="DenseBincount",Yt="DepthToSpace",Zt="DepthwiseConv2dNative",Jt="DepthwiseConv2dNativeBackpropFilter",Qt="DepthwiseConv2dNativeBackpropInput",$t="Diag",te="Dilation2D",ee="Dilation2DBackpropInput",ne="Dilation2DBackpropFilter",ae="Draw",se="RealDiv",oe="Einsum",re="Elu",ie="EluGrad",ce="Erf",le="Equal",ue="Exp",he="ExpandDims",de="Expm1",pe="FFT",fe="Fill",ge="FlipLeftRight",me="Floor",be="FloorDiv",xe="FusedBatchNorm",ye="GatherV2",ke="GatherNd",we="Greater",ve="GreaterEqual",Ie="Identity",Ce="IFFT",Se="Imag",Ne="IsFinite",Te="IsInf",Ee="IsNan",Re="LeakyRelu",Ae="Less",Fe="LessEqual",De="LinSpace",_e="Log",Oe="Log1p",Le="LogicalAnd",Me="LogicalNot",ze="LogicalOr",Pe="LRN",Be="LRNGrad",We="Max",Ue="Maximum",Ve="MaxPool",Ge="MaxPoolGrad",He="MaxPool3D",je="MaxPool3DGrad",Ke="MaxPoolWithArgmax",qe="Mean",Xe="Min",Ye="Minimum",Ze="MirrorPad",Je="Mod",Qe="Multinomial",$e="Multiply",tn="Neg",en="NotEqual",nn="NonMaxSuppressionV3",an="NonMaxSuppressionV4",sn="NonMaxSuppressionV5",on="OnesLike",rn="OneHot",cn="Pack",ln="PadV2",un="Pow",hn="Prelu",dn="Prod",pn="RaggedGather",fn="RaggedRange",gn="RaggedTensorToTensor",mn="Range",bn="Real",xn="Reciprocal",yn="Relu",kn="Reshape",wn="ResizeNearestNeighbor",vn="ResizeNearestNeighborGrad",In="ResizeBilinear",Cn="ResizeBilinearGrad",Sn="Relu6",Nn="Reverse",Tn="Round",En="Rsqrt",Rn="ScatterNd",An="TensorScatterUpdate",Fn="SearchSorted",Dn="Select",_n="Selu",On="Slice",Ln="Sin",Mn="Sinh",zn="Sign",Pn="Sigmoid",Bn="Softplus",Wn="Sqrt",Un="Sum",Vn="SpaceToBatchND",Gn="SplitV",Hn="Softmax",jn="SparseFillEmptyRows",Kn="SparseReshape",qn="SparseSegmentMean",Xn="SparseSegmentSum",Yn="SparseToDense",Zn="SquaredDifference",Jn="Square",Qn="StaticRegexReplace",$n="StridedSlice",ta="StringNGrams",ea="StringSplit",na="StringToHashBucketFast",aa="Sub",sa="Tan",oa="Tanh",ra="Tile",ia="TopK",ca="Transform",la="Transpose",ua="Unique",ha="Unpack",da="UnsortedSegmentSum",pa="ZerosLike",fa="Step",ga="FromPixels",ma="RotateWithOffset",ba="_FusedMatMul",xa="FusedConv2D",ya="FusedDepthwiseConv2D";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ka(...t){at().getBool("IS_TEST")||at().getBool("PROD")||console.warn(...t)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const wa=it("kernelRegistry",(()=>new Map)),va=it("gradRegistry",(()=>new Map));function Ia(t,e){const n=Ea(t,e);return wa.get(n)}function Ca(t){return va.get(t)}function Sa(t){const e=wa.entries(),n=[];for(;;){const{done:a,value:s}=e.next();if(a)break;const[o,r]=s,[i]=o.split("_");i===t&&n.push(r)}return n}function Na(t){const{kernelName:e,backendName:n}=t,a=Ea(e,n);wa.has(a)&&ka("The kernel '".concat(e,"' for backend ")+"'".concat(n,"' is already registered")),wa.set(a,t)}function Ta(t){const{kernelName:e}=t;va.has(e)&&at().getBool("DEBUG")&&ka("Overriding the gradient for '".concat(e,"'")),va.set(e,t)}function Ea(t,e){return"".concat(e,"_").concat(t)}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ra(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}var Aa=Da,Fa=null;try{Fa=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(nM){}function Da(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function _a(t){return!0===(t&&t.__isLong__)}Da.prototype.__isLong__,Object.defineProperty(Da.prototype,"__isLong__",{value:!0}),Da.isLong=_a;var Oa={},La={};function Ma(t,e){var n,a,s;return e?(s=0<=(t>>>=0)&&t<256)&&(a=La[t])?a:(n=Pa(t,(0|t)<0?-1:0,!0),s&&(La[t]=n),n):(s=-128<=(t|=0)&&t<128)&&(a=Oa[t])?a:(n=Pa(t,t<0?-1:0,!1),s&&(Oa[t]=n),n)}function za(t,e){if(isNaN(t))return e?qa:Ka;if(e){if(t<0)return qa;if(t>=Ga)return Qa}else{if(t<=-Ha)return $a;if(t+1>=Ha)return Ja}return t<0?za(-t,e).neg():Pa(t%Va|0,t/Va|0,e)}function Pa(t,e,n){return new Da(t,e,n)}Da.fromInt=Ma,Da.fromNumber=za,Da.fromBits=Pa;var Ba=Math.pow;function Wa(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return Ka;if("number"==typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return Wa(t.substring(1),e,n).neg();for(var s=za(Ba(n,8)),o=Ka,r=0;r<t.length;r+=8){var i=Math.min(8,t.length-r),c=parseInt(t.substring(r,r+i),n);if(i<8){var l=za(Ba(n,i));o=o.mul(l).add(za(c))}else o=(o=o.mul(s)).add(za(c))}return o.unsigned=e,o}function Ua(t,e){return"number"==typeof t?za(t,e):"string"==typeof t?Wa(t,e):Pa(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}Da.fromString=Wa,Da.fromValue=Ua;var Va=4294967296,Ga=Va*Va,Ha=Ga/2,ja=Ma(1<<24),Ka=Ma(0);Da.ZERO=Ka;var qa=Ma(0,!0);Da.UZERO=qa;var Xa=Ma(1);Da.ONE=Xa;var Ya=Ma(1,!0);Da.UONE=Ya;var Za=Ma(-1);Da.NEG_ONE=Za;var Ja=Pa(-1,2147483647,!1);Da.MAX_VALUE=Ja;var Qa=Pa(-1,-1,!0);Da.MAX_UNSIGNED_VALUE=Qa;var $a=Pa(0,-2147483648,!1);Da.MIN_VALUE=$a;var ts=Da.prototype;ts.toInt=function(){return this.unsigned?this.low>>>0:this.low},ts.toNumber=function(){return this.unsigned?(this.high>>>0)*Va+(this.low>>>0):this.high*Va+(this.low>>>0)},ts.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq($a)){var e=za(t),n=this.div(e),a=n.mul(e).sub(this);return n.toString(t)+a.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var s=za(Ba(t,6),this.unsigned),o=this,r="";;){var i=o.div(s),c=(o.sub(i.mul(s)).toInt()>>>0).toString(t);if((o=i).isZero())return c+r;for(;c.length<6;)c="0"+c;r=""+c+r}},ts.getHighBits=function(){return this.high},ts.getHighBitsUnsigned=function(){return this.high>>>0},ts.getLowBits=function(){return this.low},ts.getLowBitsUnsigned=function(){return this.low>>>0},ts.getNumBitsAbs=function(){if(this.isNegative())return this.eq($a)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&!(t&1<<e);e--);return 0!=this.high?e+33:e+1},ts.isZero=function(){return 0===this.high&&0===this.low},ts.eqz=ts.isZero,ts.isNegative=function(){return!this.unsigned&&this.high<0},ts.isPositive=function(){return this.unsigned||this.high>=0},ts.isOdd=function(){return!(1&~this.low)},ts.isEven=function(){return!(1&this.low)},ts.equals=function(t){return _a(t)||(t=Ua(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&(this.high===t.high&&this.low===t.low)},ts.eq=ts.equals,ts.notEquals=function(t){return!this.eq(t)},ts.neq=ts.notEquals,ts.ne=ts.notEquals,ts.lessThan=function(t){return this.comp(t)<0},ts.lt=ts.lessThan,ts.lessThanOrEqual=function(t){return this.comp(t)<=0},ts.lte=ts.lessThanOrEqual,ts.le=ts.lessThanOrEqual,ts.greaterThan=function(t){return this.comp(t)>0},ts.gt=ts.greaterThan,ts.greaterThanOrEqual=function(t){return this.comp(t)>=0},ts.gte=ts.greaterThanOrEqual,ts.ge=ts.greaterThanOrEqual,ts.compare=function(t){if(_a(t)||(t=Ua(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},ts.comp=ts.compare,ts.negate=function(){return!this.unsigned&&this.eq($a)?$a:this.not().add(Xa)},ts.neg=ts.negate,ts.add=function(t){_a(t)||(t=Ua(t));var e=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,o=t.high>>>16,r=65535&t.high,i=t.low>>>16,c=0,l=0,u=0,h=0;return u+=(h+=s+(65535&t.low))>>>16,l+=(u+=a+i)>>>16,c+=(l+=n+r)>>>16,c+=e+o,Pa((u&=65535)<<16|(h&=65535),(c&=65535)<<16|(l&=65535),this.unsigned)},ts.subtract=function(t){return _a(t)||(t=Ua(t)),this.add(t.neg())},ts.sub=ts.subtract,ts.multiply=function(t){if(this.isZero())return Ka;if(_a(t)||(t=Ua(t)),Fa)return Pa(Fa.mul(this.low,this.high,t.low,t.high),Fa.get_high(),this.unsigned);if(t.isZero())return Ka;if(this.eq($a))return t.isOdd()?$a:Ka;if(t.eq($a))return this.isOdd()?$a:Ka;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(ja)&&t.lt(ja))return za(this.toNumber()*t.toNumber(),this.unsigned);var e=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,o=t.high>>>16,r=65535&t.high,i=t.low>>>16,c=65535&t.low,l=0,u=0,h=0,d=0;return h+=(d+=s*c)>>>16,u+=(h+=a*c)>>>16,h&=65535,u+=(h+=s*i)>>>16,l+=(u+=n*c)>>>16,u&=65535,l+=(u+=a*i)>>>16,u&=65535,l+=(u+=s*r)>>>16,l+=e*c+n*i+a*r+s*o,Pa((h&=65535)<<16|(d&=65535),(l&=65535)<<16|(u&=65535),this.unsigned)},ts.mul=ts.multiply,ts.divide=function(t){if(_a(t)||(t=Ua(t)),t.isZero())throw Error("division by zero");var e,n,a;if(Fa)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?Pa((this.unsigned?Fa.div_u:Fa.div_s)(this.low,this.high,t.low,t.high),Fa.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?qa:Ka;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return qa;if(t.gt(this.shru(1)))return Ya;a=qa}else{if(this.eq($a))return t.eq(Xa)||t.eq(Za)?$a:t.eq($a)?Xa:(e=this.shr(1).div(t).shl(1)).eq(Ka)?t.isNegative()?Xa:Za:(n=this.sub(t.mul(e)),a=e.add(n.div(t)));if(t.eq($a))return this.unsigned?qa:Ka;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();a=Ka}for(n=this;n.gte(t);){e=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var s=Math.ceil(Math.log(e)/Math.LN2),o=s<=48?1:Ba(2,s-48),r=za(e),i=r.mul(t);i.isNegative()||i.gt(n);)i=(r=za(e-=o,this.unsigned)).mul(t);r.isZero()&&(r=Xa),a=a.add(r),n=n.sub(i)}return a},ts.div=ts.divide,ts.modulo=function(t){return _a(t)||(t=Ua(t)),Fa?Pa((this.unsigned?Fa.rem_u:Fa.rem_s)(this.low,this.high,t.low,t.high),Fa.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},ts.mod=ts.modulo,ts.rem=ts.modulo,ts.not=function(){return Pa(~this.low,~this.high,this.unsigned)},ts.and=function(t){return _a(t)||(t=Ua(t)),Pa(this.low&t.low,this.high&t.high,this.unsigned)},ts.or=function(t){return _a(t)||(t=Ua(t)),Pa(this.low|t.low,this.high|t.high,this.unsigned)},ts.xor=function(t){return _a(t)||(t=Ua(t)),Pa(this.low^t.low,this.high^t.high,this.unsigned)},ts.shiftLeft=function(t){return _a(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?Pa(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Pa(0,this.low<<t-32,this.unsigned)},ts.shl=ts.shiftLeft,ts.shiftRight=function(t){return _a(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?Pa(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Pa(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},ts.shr=ts.shiftRight,ts.shiftRightUnsigned=function(t){if(_a(t)&&(t=t.toInt()),0===(t&=63))return this;var e=this.high;return t<32?Pa(this.low>>>t|e<<32-t,e>>>t,this.unsigned):Pa(32===t?e:e>>>t-32,0,this.unsigned)},ts.shru=ts.shiftRightUnsigned,ts.shr_u=ts.shiftRightUnsigned,ts.toSigned=function(){return this.unsigned?Pa(this.low,this.high,!1):this},ts.toUnsigned=function(){return this.unsigned?this:Pa(this.low,this.high,!0)},ts.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},ts.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},ts.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},Da.fromBytes=function(t,e,n){return n?Da.fromBytesLE(t,e):Da.fromBytesBE(t,e)},Da.fromBytesLE=function(t,e){return new Da(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},Da.fromBytesBE=function(t,e){return new Da(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};const es=d(Aa),ns=es||s({__proto__:null,default:es},[Aa]);function as(t){return ns.fromString(t,!0,16)}const ss=as("c3a5c85c97cb3127"),os=as("b492b66fbe98f273"),rs=as("9ae16a3b2f90404f");function is(t){return t.xor(t.shru(47))}function cs(t,e,n){const a=t.slice(e,e+n);return ns.fromBytes(Array.from(a),!0,!0)}function ls(t,e){return cs(t,e,8)}function us(t,e){return cs(t,e,4)}function hs(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function ds(t,e,n=as("9ddfea08eb382d69")){let a=t.xor(e).mul(n);a=a.xor(a.shru(47));let s=e.xor(a).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function ps(t,e,n,a){return function(t,e,n,a,s,o){s=s.add(t),o=hs(o.add(s).add(a),21);const r=s;return s=(s=s.add(e)).add(n),o=o.add(hs(s,44)),[s.add(a),o.add(r)]}(ls(t,e),ls(t,e+8),ls(t,e+16),ls(t,e+24),n,a)}function fs(t,e=t.length){const n=ns.fromNumber(81,!0);if(e<=32)return e<=16?function(t,e=t.length){if(e>=8){const n=rs.add(2*e),a=ls(t,0).add(rs),s=ls(t,e-8);return ds(hs(s,37).mul(n).add(a),hs(a,25).add(s).mul(n),n)}if(e>=4){const n=rs.add(2*e);return ds(us(t,0).shl(3).add(e),us(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),a=e+(t[e-1]<<2);return is(rs.mul(n).xor(ss.mul(a))).mul(rs)}return rs}(t,e):function(t,e=t.length){const n=rs.add(2*e),a=ls(t,0).mul(os),s=ls(t,8),o=ls(t,e-8).mul(n),r=ls(t,e-16).mul(rs);return ds(hs(a.add(s),43).add(hs(o,30)).add(r),a.add(hs(s.add(rs),18)).add(o),n)}(t,e);if(e<=64)return function(t,e=t.length){const n=rs.add(2*e),a=ls(t,0).mul(rs),s=ls(t,8),o=ls(t,e-8).mul(n),r=ls(t,e-16).mul(rs),i=hs(a.add(s),43).add(hs(o,30)).add(r),c=ds(i,a.add(hs(s.add(rs),18)).add(o),n),l=ls(t,16).mul(n),u=ls(t,24),h=i.add(ls(t,e-32)).mul(n),d=c.add(ls(t,e-24)).mul(n);return ds(hs(l.add(u),43).add(hs(h,30)).add(d),l.add(hs(u.add(a),18)).add(h),n)}(t,e);let a=n,s=n.mul(os).add(113),o=is(s.mul(rs).add(113)).mul(rs),r=[ns.UZERO,ns.UZERO],i=[ns.UZERO,ns.UZERO];a=a.mul(rs).add(ls(t,0));let c=0;const l=64*(e-1>>6),u=l+(e-1&63)-63;do{a=hs(a.add(s).add(r[0]).add(ls(t,c+8)),37).mul(os),s=hs(s.add(r[1]).add(ls(t,c+48)),42).mul(os),a=a.xor(i[1]),s=s.add(r[0]).add(ls(t,c+40)),o=hs(o.add(i[0]),33).mul(os),r=ps(t,c,r[1].mul(os),a.add(i[0])),i=ps(t,c+32,o.add(i[1]),s.add(ls(t,c+16))),[o,a]=[a,o],c+=64}while(c!==l);const h=os.add(o.and(255).shl(1));return c=u,i[0]=i[0].add(e-1&63),r[0]=r[0].add(i[0]),i[0]=i[0].add(r[0]),a=hs(a.add(s).add(r[0]).add(ls(t,c+8)),37).mul(h),s=hs(s.add(r[1]).add(ls(t,c+48)),42).mul(h),a=a.xor(i[1].mul(9)),s=s.add(r[0].mul(9).add(ls(t,c+40))),o=hs(o.add(i[0]),33).mul(h),r=ps(t,c,r[1].mul(h),a.add(i[0])),i=ps(t,c+32,o.add(i[1]),s.add(ls(t,c+16))),[o,a]=[a,o],ds(ds(r[0],i[0],h).add(is(s).mul(ss)).add(o),ds(r[1],i[1],h).add(a),h)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gs(t,e){return"string"===e?xs(t):ms([t],e)}function ms(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=ws(t)),at().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const a=t[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(e," being uploaded contains ").concat(a,"."))}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type ".concat(e))}function bs(){return at().platform.now()}function xs(t,e="utf-8"){return e=e||"utf-8",at().platform.encode(t,e)}function ys(t,e="utf-8"){return e=e||"utf-8",at().platform.decode(t,e)}function ks(t){return null!=at().platform.isTypedArray?at().platform.isTypedArray(t):Ra(t)}function ws(t,e=[],n=!1){if(null==e&&(e=[]),"boolean"==typeof t||"number"==typeof t||"string"==typeof t||$(t)||null==t||ks(t)&&n)e.push(t);else if(Array.isArray(t)||ks(t))for(let a=0;a<t.length;++a)ws(t[a],e,n);else{let a=-1;for(const e of Object.keys(t))/^([1-9]+[0-9]*|0)$/.test(e)&&(a=Math.max(a,Number(e)));for(let s=0;s<=a;s++)ws(t[s],e,n)}return e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vs{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Cs)}profileKernel(t,e,n){let a;const s=()=>{a=n()};let o;const r=bs();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const t of a)t.dataSync();o=Promise.resolve({kernelMs:bs()-r})}if(at().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<a.length;i++){const e=a[i];e.data().then((n=>{Is(n,e.dtype,t)}))}return{kernelName:t,outputs:a,inputs:e,timeMs:o.then((t=>t.kernelMs)),extraInfo:o.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:a,inputs:s,extraInfo:o}=t;n.forEach((t=>{Promise.all([t.data(),a,o]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function Is(t,e,n){if("float32"!==e)return!1;for(let a=0;a<t.length;a++){const e=t[a];if(isNaN(e)||!isFinite(e))return console.warn("Found ".concat(e," in the result of '").concat(n,"'")),!0}return!1}class Cs{logKernelProfile(t,e,n,a,s,o){const r="number"==typeof a?A("".concat(a,"ms"),9):a.error,i=A(t,25),c=e.rank,l=e.size,u=A(e.shape.toString(),14);let h="";for(const d in s){const t=s[d];if(null!=t){const n=t.shape||e.shape,a=n.length;h+="".concat(d,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(r,"\t%c").concat(c,"D ").concat(u,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(o),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ss=20,Ns=3,Ts=7;function Es(t,e,n,a){const s=H(e),o=function(t,e,n,a){const s=N(e),o=a[a.length-1],r=new Array(o).fill(0),i=e.length,c="complex64"===n?Ds(t):t;if(i>1)for(let l=0;l<s/o;l++){const t=l*o;for(let e=0;e<o;e++)r[e]=Math.max(r[e],Rs(c[t+e],0,n).length)}return r}(t,e,n,s),r=e.length,i=Fs(t,e,n,s,o),c=["Tensor"];return a&&(c.push("  dtype: ".concat(n)),c.push("  rank: ".concat(r)),c.push("  shape: [".concat(e,"]")),c.push("  values:")),c.push(i.map((t=>"    "+t)).join("\n")),c.join("\n")}function Rs(t,e,n){let a;return a=Array.isArray(t)?"".concat(parseFloat(t[0].toFixed(Ts))," + ")+"".concat(parseFloat(t[1].toFixed(Ts)),"j"):B(t)?"'".concat(t,"'"):"bool"===n?As(t):parseFloat(t.toFixed(Ts)).toString(),A(a,e)}function As(t){return 0===t?"false":"true"}function Fs(t,e,n,a,s,o=!0){const r="complex64"===n?2:1,i=e[0],c=e.length;if(0===c){if("complex64"===n){return[Rs(Ds(t)[0],0,n)]}return"bool"===n?[As(t[0])]:[t[0].toString()]}if(1===c){if(i>Ss){const e=Ns*r;let a=Array.from(t.slice(0,e)),o=Array.from(t.slice((i-Ns)*r,i*r));return"complex64"===n&&(a=Ds(a),o=Ds(o)),["["+a.map(((t,e)=>Rs(t,s[e],n))).join(", ")+", ..., "+o.map(((t,e)=>Rs(t,s[i-Ns+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Ds(t):Array.from(t)).map(((t,e)=>Rs(t,s[e],n))).join(", ")+"]"]}const l=e.slice(1),u=a.slice(1),h=a[0]*r,d=[];if(i>Ss){for(let e=0;e<Ns;e++){const a=e*h,o=a+h;d.push(...Fs(t.slice(a,o),l,n,u,s,!1))}d.push("...");for(let e=i-Ns;e<i;e++){const a=e*h,o=a+h;d.push(...Fs(t.slice(a,o),l,n,u,s,e===i-1))}}else for(let g=0;g<i;g++){const e=g*h,a=e+h;d.push(...Fs(t.slice(e,a),l,n,u,s,g===i-1))}const p=2===c?",":"";d[0]="["+(i>0?d[0]+p:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+p;let f=",\n";for(let g=2;g<c;g++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function Ds(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _s{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=N(t),null!=n){const t=n.length;I(t===this.size,(()=>"Length of values '".concat(t,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||M(e,this.size),this.strides=H(t)}set(t,...e){0===e.length&&(e=[0]),I(e.length===this.rank,(()=>"The number of provided coordinates (".concat(e.length,") must ")+"match the rank (".concat(this.rank,")")));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const a of t){if(a<0||a>=this.shape[e]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}e++}let n=t[t.length-1];for(let a=0;a<t.length-1;++a)n+=this.strides[a]*t[a];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Os().makeTensor(this.values,this.shape,this.dtype)}}let Os=null,Ls=null;class Ms{constructor(t,e,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=N(t),this.strides=H(t),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Ls.buffer(this.shape,this.dtype,t)}bufferSync(){return Ls.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return K(this.shape,t,"complex64"===this.dtype)}arraySync(){return K(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=Os().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map((t=>ys(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Os().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Os().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>ys(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Os().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Os().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Ls.print(this,t)}clone(){return this.throwIfDisposed(),Ls.clone(this)}toString(t=!1){return Es(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Ls.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Os().makeVariable(this,t,e,n)}}function zs(){return it("Tensor",(()=>Ms))}Object.defineProperty(Ms,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),zs();class Ps extends Ms{constructor(t,e,n,a){super(t.shape,t.dtype,t.dataId,a),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(t.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!T(t.shape,this.shape))throw new Error("shape of the new value (".concat(t.shape,") and ")+"previous value (".concat(this.shape,") must match"));Os().disposeTensor(this),this.dataId=t.dataId,Os().incRef(this,null)}dispose(){Os().disposeVariable(this),this.isDisposedInternal=!0}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Bs,Ws,Us,Vs,Gs,Hs,js,Ks,qs,Xs;Object.defineProperty(Ps,Symbol.hasInstance,{value:t=>t instanceof Ms&&null!=t.assign&&t.assign instanceof Function}),(Ws=Bs||(Bs={})).R0="R0",Ws.R1="R1",Ws.R2="R2",Ws.R3="R3",Ws.R4="R4",Ws.R5="R5",Ws.R6="R6",(Vs=Us||(Us={})).float32="float32",Vs.int32="int32",Vs.bool="int32",Vs.complex64="complex64",(Hs=Gs||(Gs={})).float32="float32",Hs.int32="int32",Hs.bool="bool",Hs.complex64="complex64",(Ks=js||(js={})).float32="float32",Ks.int32="float32",Ks.bool="float32",Ks.complex64="complex64",(Xs=qs||(qs={})).float32="complex64",Xs.int32="complex64",Xs.bool="complex64",Xs.complex64="complex64";const Ys={float32:js,int32:Us,bool:Gs,complex64:qs};function Zs(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error("Can not upcast ".concat(t," with ").concat(e))}return Ys[t][e]}function Js(t){return Zs(t,"int32")}function Qs(t){return null!=t&&"object"==typeof t&&"texture"in t&&t.texture instanceof WebGLTexture}function $s(t){return"undefined"!=typeof GPUBuffer&&null!=t&&"object"==typeof t&&"buffer"in t&&t.buffer instanceof GPUBuffer}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function to(t,e){if(t.dtype===e.dtype)return[t,e];const n=Zs(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function eo(t){const e=[];return no(t,e,new Set),e}function no(t,e,n){if(null==t)return;if(t instanceof Ms)return void e.push(t);if(a=t,!Array.isArray(a)&&"object"!=typeof a)return;var a;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s=t;for(const o in s){const t=s[o];n.has(t)||(n.add(t),no(t,e,n))}}function ao(t){return null!=t.kernelName}class so{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class oo{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new so}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error("The highest priority backend '".concat(t,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(ka("".concat(t," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error("Backend name '".concat(t,"' not found in registry"));if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new vs(this.backendInstance),!0}setupRegisteredKernels(){Sa(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){Sa(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error("Cannot initialize backend ".concat(t,", no registration found."));try{const n=e.factory();if(!n||n instanceof b||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,a=n.then((n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,ka("Initialization of backend ".concat(t," failed")),ka(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return ka("Initialization of backend ".concat(t," failed")),ka(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error("".concat(t," backend not found in registry"));this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:a,asyncInit:s}=this.initializeBackend(n);if(s||a)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),a=n.backend,s=this.readSync(e),o=a.refCount(e);a.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,a=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=t}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(a){throw e(),a}}nextTensorId(){return oo.nextTensorId++}nextVariableId(){return oo.nextVariableId++}clone(t){const e=io.runKernel(Ie,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t},n={dtype:"float32"};return io.runKernel(Ft,e,n)}})),[],{}),e}runKernel(t,e,n){null==this.backendName&&this.backend;if(!(null!=Ia(t,this.backendName)))throw new Error("Kernel '".concat(t,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const a=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],r=a-e-s-o;if(r>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(r," data ids) after running '").concat(t,"'"))}runKernelFunc(t){let e,n=[];const a=this.isTapeOn(),s=this.state.numBytes,o=this.state.numTensors;let r,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=ao(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ao(t)){const{kernelName:e,inputs:s,attrs:o}=t;null==this.backendName&&this.backend;const c=Ia(e,this.backendName);I(null!=c,(()=>"Cannot find registered kernel '".concat(e,"' for backend '").concat(this.backendName,"'"))),r=()=>{const t=this.backend.numDataIds();i=c.kernelFunc({inputs:s,attrs:o,backend:this.backend});const r=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,r);const l=r.map((t=>null!=t.rank?t:this.makeTensorFromTensorInfo(t)));if(a){const t=this.getTensorsForGradient(e,s,l);n=this.saveTensorsForBackwardMode(t)}return l}}else{const{forwardFunc:e}=t,s=t=>{a&&(n=t.map((t=>this.keep(this.clone(t)))))};r=()=>{const t=this.backend.numDataIds();i=this.tidy((()=>e(this.backend,s)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,t,n),n}}const{inputs:l,attrs:u}=t,h=ao(t)?null:t.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(c,l,(()=>r())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs):e=r()})),a&&this.addTapeNode(c,l,e,h,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((t=>null!=l[t]?l[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const a=Ca(t);if(null!=a){const t=a.inputsToSave||[],s=a.outputsToSave||[];let o;a.saveAllInputs?(I(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),o=Object.keys(e).map((t=>e[t]))):o=t.map((t=>e[t]));const r=n.filter(((t,e)=>s[e]));return o.concat(r)}return[]}makeTensor(t,e,n,a){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let s=t;"string"===n&&B(t[0])&&(s=t.map((t=>xs(t))));const o=a.write(s,e,n),r=new Ms(e,n,o,this.nextTensorId());if(this.trackTensor(r,a),"string"===n){const t=this.state.tensorInfo.get(o),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return r}makeTensorFromDataId(t,e,n,a){const s={dataId:t,shape:e,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,a)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:a,dtype:s}=t,o=new Ms(a,s,n,this.nextTensorId());return this.trackTensor(o,e),o}makeVariable(t,e=!0,n,a){n=n||this.nextVariableId().toString(),null!=a&&a!==t.dtype&&(t=t.cast(a));const s=new Ps(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error("Variable with name ".concat(s.name," was already registered"));return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*P(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof Ps||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*P(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,a,s,o){const r={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},i=Ca(t);null!=i&&(a=i.gradFunc),null!=a&&(r.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],a=X(t.size,t.dtype);return this.makeTensor(a,t.shape,t.dtype)}return t})),a(t.length>1?t:t[0],s,o))),this.state.activeTape.push(r)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=eo(t),n=new Set(e.map((t=>t.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const t=this.state.activeScope.track[s];t.kept||n.has(t.id)||t.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==a.id||this.track(t)}))}gradients(t,e,n,a=!1){if(I(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));I(s instanceof Ms,(()=>"The result y returned by f() must be a tensor."));const o=function(t,e,n){const a={},s={};for(let c=0;c<e.length;c++)a[e[c].id]=!0;for(let c=0;c<t.length;c++){const n=t[c],o=n.inputs;for(const t in o){const r=o[t];let i=!1;for(let t=0;t<e.length;t++)if(a[r.id]){n.outputs.forEach((t=>a[t.id]=!0)),i=!0,s[n.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const r={};for(let c=t.length-1;c>=0;c--){const e=t[c],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(o[e.outputs[t].id]){for(const t in n)o[n[t].id]=!0,r[e.id]=!0;break}}const i=[];for(let c=0;c<t.length;c++){const e=t[c];if(s[e.id]&&r[e.id]){const t={};for(const s in e.inputs){const n=e.inputs[s];a[n.id]&&(t[s]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,i.push(n)}}return i}(this.state.activeTape,e,s);if(!a&&0===o.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=q(N(t),"float32");return io.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,a){for(let s=e.length-1;s>=0;s--){const o=e[s],r=[];if(o.outputs.forEach((e=>{const n=t[e.id];null!=n?r.push(n):r.push(null)})),null==o.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(o.kernelName,"."));const i=o.gradient(r);for(const e in o.inputs){if(!(e in i))throw new Error("Cannot backprop through input ".concat(e,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const s=n((()=>i[e]()));if("float32"!==s.dtype)throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"".concat(e," must have 'float32' dtype, but has '").concat(s.dtype,"'"));const r=o.inputs[e];if(!T(s.shape,r.shape))throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"'".concat(e,"' has shape '").concat(s.shape,"', which does not match ")+"the shape of the input '".concat(r.shape,"'"));if(null==t[r.id])t[r.id]=s;else{const e=t[r.id];t[r.id]=a(e,s),e.dispose()}}}}(t,o,(t=>this.tidy(t)),co);const a=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:a}}))}customGrad(t){return I(V(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;I(e.every((t=>t instanceof Ms)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const a={};e.forEach(((t,e)=>{a[e]=t}));return this.runKernelFunc({forwardFunc:(a,s)=>(n=t(...e,s),I(n.value instanceof Ms,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),I(V(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,a)=>{const s=n.gradFunc(t,a),o=Array.isArray(s)?s:[s];I(o.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),I(o.every((t=>t instanceof Ms)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const r={};return o.forEach(((t,e)=>{r[e]=()=>t})),r},inputs:a})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=bs(),n=await this.backend.time(t);return n.wallMs=bs()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new so;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ro(){const t=rt();if(null==t._tfengine){const e=new et(t);t._tfengine=new oo(e)}var e;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */return e=t._tfengine.ENV,ot=e,Os=()=>t._tfengine,t._tfengine}oo.nextTensorId=0,oo.nextVariableId=0;const io=ro();function co(t,e){const n={a:t,b:e};return io.runKernel(ht,n)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lo(t){if(t||"undefined"!=typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!=typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function uo(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ho=at();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function po(t,e){let n=t;if(ks(t))return"string"===e?[]:[t.length];if(Qs(t)){const e=t.channels||"RGBA";return[t.height,t.width*e.length]}if($s(t))return[t.buffer.size/(null==e?4:P(e))];if(!Array.isArray(t))return[];const a=[];for(;Array.isArray(n)||ks(n)&&"string"!==e;)a.push(n.length),n=n[0];return Array.isArray(t)&&at().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&fo(t,a,[]),a}function fo(t,e,n){if(n=n||[],!Array.isArray(t)&&!ks(t))return void I(0===e.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(e[0]," elements")));I(e.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(t.length," elements"))),I(t.length===e[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(e[0]," ")+"elements, but has ".concat(t.length," elements")));const a=e.slice(1);for(let s=0;s<t.length;++s)fo(t[s],a,n.concat(s))}function go(t,e,n,a){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(t," tensor, but got ").concat(e," tensor"))}}function mo(t,e,n,a="numeric"){if(t instanceof zs())return go(a,t.dtype,e,n),t;let s=U(t);if("string"!==s&&["bool","int32","float32"].indexOf(a)>=0&&(s=a),go(a,s,e,n),null==t||!ks(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const a=null==t?"null":t.constructor.name;throw new Error("Argument '".concat(e,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const o=po(t,s);ks(t)||Array.isArray(t)||(t=[t]);const r="string"!==s?ms(t,s):ws(t,[],!0);return io.makeTensor(r,o,s)}function bo(t,e,n,a="numeric"){if(!Array.isArray(t))throw new Error("Argument ".concat(e," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return t.map(((t,s)=>mo(t,"".concat(e,"[").concat(s,"]"),n,a)))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ho.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ho.registerFlag("IS_BROWSER",(()=>uo())),ho.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ho.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ho.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),ho.registerFlag("PROD",(()=>!1)),ho.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ho.getBool("DEBUG"))),ho.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ho.registerFlag("IS_TEST",(()=>!1)),ho.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>ho.getBool("DEBUG"))),ho.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ho.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),ho.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));function xo(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(e.length," keys."));let n=e[0];const a=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{io.startScope(n);try{const e=a(...t);return $(e)&&console.error("Cannot return a Promise inside of tidy."),io.endScope(e),e}catch(e){throw io.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yo=xo({complex_:function(t,e){const n=mo(t,"real","complex"),a=mo(e,"imag","complex");C(n.shape,a.shape,"real and imag shapes, ".concat(n.shape," and ").concat(a.shape,", ")+"must match in call to tf.complex().");const s={real:n,imag:a};return io.runKernel(Ot,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ko(t,e,n,a){if(null==a)a=U(t);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if($s(t)||Qs(t)){if("float32"!==a&&"int32"!==a)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(a,"."));return io.backend.createTensorFromGPUData(t,e||n,a)}if(!ks(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Z(e);const t=N(e),a=N(n);I(t===a,(()=>"Based on the provided shape, [".concat(e,"], the tensor should have ")+"".concat(t," values but has ").concat(a)));for(let s=0;s<n.length;++s){const t=n[s],a=s!==n.length-1||t!==N(e.slice(s));I(n[s]===e[s]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(e,"). ")))}}return ks(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==a?ms(t,a):ws(t,[],!0),io.makeTensor(t,e,a)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wo(t,e,n){return ko(t,e,po(t,n),n)}class vo{static join(t){return new vo(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,null==t)return;if(t instanceof Array||(t=[t]),0===(t=t.map((t=>ks(t)?t.buffer:t))).length)return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let n=0;n<t.length;n++){const a=t[n];n!==t.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=e+a.byteLength;this.shards.push({buffer:a,start:e,end:s}),e=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),(e=Math.min(this.byteLength,e))<=t)return new ArrayBuffer(0);const n=this.findShardForByte(t);if(-1===n)throw new Error("Could not find start shard for byte ".concat(t));const a=new ArrayBuffer(e-t),s=new Uint8Array(a);let o=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],a=t+o-n.start,i=o,c=Math.min(e,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(s.set(l,i),o+=l.length,e<n.end)break}return a}findShardForByte(t){if(0===this.shards.length||t<0||t>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(e){return t<e.start?-1:t>=e.end?1:0}if(0===e(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(t,e){let n=0,a=t.length;for(;n<=a;){const s=Math.floor((a-n)/2)+n,o=e(t[s]);if(0===o)return s;o<0?a=s:n=s+1}return-1}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.shards,e);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Io(){return io}function Co(){return io.memory()}function So(t,e){return io.tidy(t,e)}function No(t){eo(t).forEach((t=>t.dispose()))}function To(t){return io.keep(t)}function Eo(t,e,n=1){return io.registerBackend(t,e,n)}async function Ro(t,e){const n=[],a=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let o=0;o<s.length;++o){const r=s[o],i=Array.isArray(t)?t[o].tensor:t[r];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(r,"': ").concat(i.dtype));const c={name:r,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const t=new Promise((async t=>{const e=await i.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,a=new Uint8Array(n);let s=0;for(let o=0;o<e.length;o++){const t=e[o],n=new Uint8Array(new Uint32Array([t.length]).buffer);a.set(n,s),s+=4,a.set(t,s),s+=t.length}t(a)}));a.push(t)}else a.push(i.data());null!=e&&(c.group=e),n.push(c)}return{data:Ao(await Promise.all(a)),specs:n}}function Ao(t){if(null===t)throw new Error("Invalid input value: ".concat(JSON.stringify(t)));let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(t.constructor.name))}));const a=new Uint8Array(e);let s=0;return n.forEach((t=>{a.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),a.buffer}const Fo="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Do(t){return Fo?Buffer.byteLength(t,"utf8"):new Blob([t]).size}function _o(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Do(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Do(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:new vo(t.weightData).byteLength}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oo{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Oo.instance&&(Oo.instance=new Oo),Oo.instance}static registerSaveRouter(t){Oo.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Oo.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Oo.getHandlers(t,"save")}static getLoadHandlers(t,e){return Oo.getHandlers(t,"load",e)}static getHandlers(t,e,n){const a=[];return("load"===e?Oo.getInstance().loadRouters:Oo.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&a.push(s)})),a}}const Lo="tensorflowjs",Mo="models_store",zo="model_info_store";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Po(){if(!at().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Bo(t){const e=t.result;e.createObjectStore(Mo,{keyPath:"modelPath"}),e.createObjectStore(zo,{keyPath:"modelPath"})}class Wo{constructor(t){if(this.indexedDB=Po(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const a=this.indexedDB.open(Lo,1);a.onupgradeneeded=()=>Bo(a),a.onsuccess=()=>{const s=a.result;if(null==e){const e=s.transaction(Mo,"readonly"),a=e.objectStore(Mo).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return s.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));t(a.result.modelArtifacts)},a.onerror=t=>(s.close(),n(a.error)),e.oncomplete=()=>s.close()}else{e.weightData=vo.join(e.weightData);const a=_o(e),r=s.transaction(zo,"readwrite");let i,c,l=r.objectStore(zo);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(o){return n(o)}i.onsuccess=()=>{c=s.transaction(Mo,"readwrite");const i=c.objectStore(Mo);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a})}catch(o){return n(o)}u.onsuccess=()=>t({modelArtifactsInfo:a}),u.onerror=t=>{l=r.objectStore(zo);const e=l.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(u.error)),e.onerror=t=>(s.close(),n(u.error))}},i.onerror=t=>(s.close(),n(i.error)),r.oncomplete=()=>{null==c?s.close():c.oncomplete=()=>s.close()}}},a.onerror=t=>n(a.error)}))}}Wo.URL_SCHEME="indexeddb://";const Uo=t=>{return at().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Wo.URL_SCHEME)?(e=t.slice(Wo.URL_SCHEME.length),new Wo(e)):null;var e};Oo.registerSaveRouter(Uo),Oo.registerLoadRouter(Uo);class Vo{constructor(){this.indexedDB=Po()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(Lo,1);n.onupgradeneeded=()=>Bo(n),n.onsuccess=()=>{const a=n.result,s=a.transaction(zo,"readonly"),o=s.objectStore(zo).getAll();o.onsuccess=()=>{const e={};for(const t of o.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},o.onerror=t=>(a.close(),e(o.error)),s.oncomplete=()=>a.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Wo.URL_SCHEME)?e.slice(Wo.URL_SCHEME.length):e,new Promise(((e,n)=>{const a=this.indexedDB.open(Lo,1);a.onupgradeneeded=()=>Bo(a),a.onsuccess=()=>{const s=a.result,o=s.transaction(zo,"readwrite"),r=o.objectStore(zo),i=r.get(t);let c;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error("Cannot find model with path '".concat(t,"' ")+"in IndexedDB."));{const a=r.delete(t),o=()=>{c=s.transaction(Mo,"readwrite");const a=c.objectStore(Mo).delete(t);a.onsuccess=()=>e(i.result.modelArtifactsInfo),a.onerror=t=>n(i.error)};a.onsuccess=o,a.onerror=t=>(o(),s.close(),n(i.error))}},i.onerror=t=>(s.close(),n(i.error)),o.oncomplete=()=>{null==c?s.close():c.oncomplete=()=>s.close()}},a.onerror=t=>n(a.error)}))}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Go="/",Ho="tensorflowjs_models",jo="info",Ko="model_topology",qo="weight_specs",Xo="weight_data",Yo="model_metadata";function Zo(t){return{info:[Ho,t,jo].join(Go),topology:[Ho,t,Ko].join(Go),weightSpecs:[Ho,t,qo].join(Go),weightData:[Ho,t,Xo].join(Go),modelMetadata:[Ho,t,Yo].join(Go)}}function Jo(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function Qo(t){const e=t.split(Go);if(e.length<3)throw new Error("Invalid key format: ".concat(t));return e.slice(1,e.length-1).join(Go)}class $o{constructor(t){if(!at().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Zo(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),a=JSON.stringify(t.weightSpecs),s=_o(t),o=vo.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(t){if(Fo)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let a=0,s=e.length;a<s;a++)n+=String.fromCharCode(e[a]);return btoa(n)}(o));const e={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,initializerSignature:null!=t.initializerSignature?t.initializerSignature:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(e)),{modelArtifactsInfo:s}}catch(e){throw Jo(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(s.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(s.weightSpecsBytes,", ")+"weightDataBytes=".concat(s.weightDataBytes,"."))}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");e.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");e.weightSpecs=a;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(e.initializerSignature=t.initializerSignature),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return e.weightData=function(t){if(Fo){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let a=0;a<e.length;++a)n.set([e.charCodeAt(a)],a);return n.buffer}(o),e}}$o.URL_SCHEME="localstorage://";const tr=t=>{return at().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith($o.URL_SCHEME)?(e=t.slice($o.URL_SCHEME.length),new $o(e)):null;var e};Oo.registerSaveRouter(tr),Oo.registerLoadRouter(tr);class er{constructor(){I(at().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),I("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Ho+Go,n=Go+jo;for(let a=0;a<this.LS.length;++a){const s=this.LS.key(a);if(s.startsWith(e)&&s.endsWith(n)){t[Qo(s)]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){var e;const n=Zo(t=(e=t).startsWith($o.URL_SCHEME)?e.slice($o.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(t,"'"));const a=JSON.parse(this.LS.getItem(n.info));return Jo(n),a}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nr{constructor(){this.managers={}}static getInstance(){return null==nr.instance&&(nr.instance=new nr),nr.instance}static registerManager(t,e){I(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),I(t.length>0,(()=>"scheme must not be an empty string."));const n=nr.getInstance();I(null==n.managers[t],(()=>"A model store manager is already registered for scheme '".concat(t,"'."))),n.managers[t]=e}static getManager(t){const e=nr.getInstance().managers[t];if(null==e)throw new Error("Cannot find model manager for scheme '".concat(t,"'"));return e}static getSchemes(){return Object.keys(nr.getInstance().managers)}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ar{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got ".concat(e));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){"undefined"!=typeof window&&at().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(t=>{if(t.source===window&&t.data.name===this.messageName){t.stopPropagation();(0,this.functionRefs[t.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(t,e)}isTypedArray(t){return Ra(t)}}if(at().get("IS_BROWSER")){at().setPlatform("browser",new ar);try{nr.registerManager($o.URL_SCHEME,new er)}catch(aM){}try{nr.registerManager(Wo.URL_SCHEME,new Vo)}catch(aM){}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sr=()=>require("node-fetch");let or;class rr{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=at().global.fetch?at().global.fetch(t,e):(null==or&&(or=sr()),or(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(e));return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ir(t,e="float32",n){return e=e||"float32",Z(t),new _s(t,e,n)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().get("IS_NODE")&&!at().get("IS_BROWSER")&&at().setPlatform("node",new rr);const cr=xo({cast_:function(t,e){const n=mo(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error("Failed to cast to unknown dtype ".concat(e));if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},s={dtype:e};return io.runKernel(Ft,a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lr=xo({clone_:function(t){const e={x:mo(t,"x","clone","string_or_numeric")};return io.runKernel(Ie,e)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ro();Ls={buffer:ir,cast:cr,clone:lr,print:function(t,e=!1){console.log(t.toString(e))}};const ur=xo({add_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=mo(t,"a","add"),a=mo(e,"b","add");[n,a]=to(n,a);const s={a:n,b:a};return io.runKernel(ht,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr=xo({floorDiv_:function(t,e){let n=mo(t,"a","floorDiv"),a=mo(e,"b","floorDiv");[n,a]=to(n,a);const s={a:n,b:a};return io.runKernel(be,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dr=xo({div_:function(t,e){let n=mo(t,"a","div"),a=mo(e,"b","div");if([n,a]=to(n,a),"int32"===n.dtype&&"int32"===a.dtype)return hr(n,a);const s={a:n,b:a};return io.runKernel(se,s,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pr=xo({mul_:function(t,e){let n=mo(t,"a","mul"),a=mo(e,"b","mul");[n,a]=to(n,a);const s={a:n,b:a};return io.runKernel($e,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fr=xo({abs_:function(t){const e=mo(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return io.runKernel(Lt,t)}{const t={x:e};return io.runKernel(ct,t)}}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gr=xo({acos_:function(t){const e={x:mo(t,"x","acos")};return io.runKernel(lt,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mr=xo({acosh_:function(t){const e={x:mo(t,"x","acosh")};return io.runKernel(ut,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const br=xo({all_:function(t,e=null,n=!1){const a={x:mo(t,"x","all","bool")},s={axis:e,keepDims:n};return io.runKernel(pt,a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xr=xo({any_:function(t,e=null,n=!1){const a={x:mo(t,"x","any","bool")},s={axis:e,keepDims:n};return io.runKernel(ft,a,s)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yr=xo({argMax_:function(t,e=0){const n={x:mo(t,"x","argMax")},a={axis:e};return io.runKernel(gt,n,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kr=xo({argMin_:function(t,e=0){const n={x:mo(t,"x","argMin")},a={axis:e};return io.runKernel(mt,n,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wr=xo({asin_:function(t){const e={x:mo(t,"x","asin")};return io.runKernel(bt,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vr=xo({asinh_:function(t){const e={x:mo(t,"x","asinh")};return io.runKernel(xt,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ir=xo({atan_:function(t){const e={x:mo(t,"x","atan")};return io.runKernel(yt,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cr=xo({atan2_:function(t,e){let n=mo(t,"a","atan2"),a=mo(e,"b","atan2");[n,a]=to(n,a);const s={a:n,b:a};return io.runKernel(wt,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sr=xo({atanh_:function(t){const e={x:mo(t,"x","atanh")};return io.runKernel(kt,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nr(t,e,n,a,s="NHWC",o){return Rr(t,[...e,t[3]],n,o,a,null,null,Br(s))}function Tr(t,e,n,a,s,o,r="channelsLast"){const[i,c]=Dr(e);let l;if("channelsLast"===r)l=[i,c,t[3],t[3]];else{if("channelsFirst"!==r)throw new Error("Unknown dataFormat ".concat(r));l=[i,c,t[1],t[1]]}return Rr(t,l,n,a,s,o,!1,r)}function Er(t,e,n,a,s,o,r="NDHWC"){const[i,c,l]=_r(e);let u,h;if("NDHWC"===r)h="channelsLast",u=[i,c,l,t[4],t[4]];else{if("NCDHW"!==r)throw new Error("Unknown dataFormat ".concat(r));h="channelsFirst",u=[i,c,l,t[1],t[1]]}return Ar(t,u,n,a,s,!1,h,o)}function Rr(t,e,n,a,s,o,r=!1,i="channelsLast"){let[c,l,u,h]=[-1,-1,-1,-1];if("channelsLast"===i)[c,l,u,h]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,h,l,u]=t}const[d,p,,f]=e,[g,m]=Dr(n),[b,x]=Dr(a),y=Or(d,b),k=Or(p,x),{padInfo:w,outHeight:v,outWidth:I}=function(t,e,n,a,s,o,r,i,c){let l,u,h;if("number"==typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,a,s){null==a&&(a=Fr(t,e,n));const o=t[0],r=t[1],i=Lr((o-e+2*a)/n+1,s),c=Lr((r-e+2*a)/n+1,s);return[i,c]}([e,n],o,a,t,i);u=s[0],h=s[1]}else if("same"===t){u=Math.ceil(e/a),h=Math.ceil(n/s);const t=Math.max(0,(u-1)*a+o-e),i=Math.max(0,(h-1)*s+r-n),c=Math.floor(t/2),d=t-c,p=Math.floor(i/2);l={top:c,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-o+1)/a),h=Math.ceil((n-r+1)/s);else{if("object"!=typeof t)throw Error("Unknown padding parameter: ".concat(t));{const d="channelsLast"===c?t[1][0]:t[2][0],p="channelsLast"===c?t[1][1]:t[2][1],f="channelsLast"===c?t[2][0]:t[3][0],g="channelsLast"===c?t[2][1]:t[3][1];l={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},u=Lr((e-o+d+p)/a+1,i),h=Lr((n-r+f+g)/s+1,i)}}return{padInfo:l,outHeight:u,outWidth:h}}(s,l,u,g,m,y,k,o,i),C=r?f*h:f;let S;return"channelsFirst"===i?S=[c,C,v,I]:"channelsLast"===i&&(S=[c,v,I,C]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:u,inChannels:h,outHeight:v,outWidth:I,outChannels:C,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:k,dilationHeight:b,dilationWidth:x,inShape:t,outShape:S,filterShape:e}}function Ar(t,e,n,a,s,o=!1,r="channelsLast",i){let[c,l,u,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===r)[c,l,u,h,d]=t;else{if("channelsFirst"!==r)throw new Error("Unknown dataFormat ".concat(r));[c,d,l,u,h]=t}const[p,f,g,,m]=e,[b,x,y]=_r(n),[k,w,v]=_r(a),I=Or(p,k),C=Or(f,w),S=Or(g,v),{padInfo:N,outDepth:T,outHeight:E,outWidth:R}=function(t,e,n,a,s,o,r,i,c,l,u){let h,d,p,f;"valid"===t&&(t=0);if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const g=function(t,e,n,a,s,o){null==s&&(s=Fr(t,e[0],a[0]));const r=[0,0,0,n];for(let i=0;i<3;i++)t[i]+2*s>=e[i]&&(r[i]=Lr((t[i]-e[i]+2*s)/a[i]+1,o));return r}([e,n,a,1],[i,c,l],1,[s,o,r],t,u);d=g[0],p=g[1],f=g[2]}else{if("same"!==t)throw Error("Unknown padding parameter: ".concat(t));{d=Math.ceil(e/s),p=Math.ceil(n/o),f=Math.ceil(a/r);const t=(d-1)*s+i-e,u=(p-1)*o+c-n,g=(f-1)*r+l-a,m=Math.floor(t/2),b=t-m,x=Math.floor(u/2),y=u-x,k=Math.floor(g/2);h={top:x,bottom:y,left:k,right:g-k,front:m,back:b,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,l,u,h,b,x,y,I,C,S,i),A=o?m*d:m;let F;return"channelsFirst"===r?F=[c,A,T,E,R]:"channelsLast"===r&&(F=[c,T,E,R,A]),{batchSize:c,dataFormat:r,inDepth:l,inHeight:u,inWidth:h,inChannels:d,outDepth:T,outHeight:E,outWidth:R,outChannels:A,padInfo:N,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:C,effectiveFilterWidth:S,dilationDepth:k,dilationHeight:w,dilationWidth:v,inShape:t,outShape:F,filterShape:e}}function Fr(t,e,n,a=1){const s=Or(e,a);return Math.floor((t[0]*(n-1)-n+s)/2)}function Dr(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function _r(t){return"number"==typeof t?[t,t,t]:t}function Or(t,e){return e<=1?t:t+(t-1)*(e-1)}function Lr(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode ".concat(e))}}function Mr(t){const[e,n,a]=Dr(t);return 1===e&&1===n&&1===a}function zr(t,e){return Mr(t)||Mr(e)}function Pr(t){return Dr(t).every((t=>t>0))}function Br(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(t))}function Wr(t,e,n){if(null!=n){if("string"==typeof e)throw Error("Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,"."));if("number"==typeof e)I(E(e),(()=>"Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,".")));else{if("object"!=typeof e)throw Error("Error in ".concat(t,": Unknown padding parameter: ").concat(e));e.forEach((e=>{e.forEach((e=>{I(E(e),(()=>"Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,".")))}))}))}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ur=xo({reshape_:function(t,e){const n={x:mo(t,"x","reshape","string_or_numeric")},a={shape:e};return io.runKernel(kn,n,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vr=xo({avgPool_:function(t,e,n,a,s){const o=mo(t,"x","avgPool","float32");I(zr(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let r=o,i=!1;3===o.rank&&(i=!0,r=Ur(o,[1,o.shape[0],o.shape[1],o.shape[2]])),I(4===r.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(r.rank,"."))),Wr("avgPool",a,s);const c={x:r},l={filterSize:e,strides:n,pad:a,dimRoundingMode:s};let u=io.runKernel(vt,c,l);return u=cr(u,o.dtype),i?Ur(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gr=xo({avgPool3d_:function(t,e,n,a,s,o="NDHWC"){const r=mo(t,"x","avgPool3d","float32");let i=r,c=!1;4===r.rank&&(c=!0,i=Ur(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),I(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),I("NDHWC"===o,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(o))),I("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),Wr("avgPool3d",a,s);const l={x:i},u={filterSize:e,strides:n,pad:a,dimRoundingMode:s,dataFormat:o};let h=io.runKernel(Ct,l,u);return h=cr(h,i.dtype),c?Ur(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hr=xo({concat_:function(t,e=0){I(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=bo(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(t.dtype,". "))})),1===n.length)return lr(n[0]);const a=n,s={axis:e};return io.runKernel(Mt,a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jr=xo({matMul_:function(t,e,n=!1,a=!1){let s=mo(t,"a","matMul"),o=mo(e,"b","matMul");[s,o]=to(s,o);const r={a:s,b:o},i={transposeA:n,transposeB:a};return io.runKernel(Nt,r,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kr=xo({sigmoid_:function(t){const e={x:mo(t,"x","sigmoid","float32")};return io.runKernel(Pn,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qr=xo({slice_:function(t,e,n){const a=mo(t,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const s={x:a},o={begin:e,size:n};return io.runKernel(On,s,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xr=xo({tanh_:function(t){const e={x:mo(t,"x","tanh","float32")};return io.runKernel(oa,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yr=xo({batchToSpaceND_:function(t,e,n){const a=mo(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));I(a.rank>=1+e.length,(()=>"input rank is ".concat(a.rank," but should be > than blockShape.length ").concat(e.length))),I(n.length===e.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(e.length))),I(a.shape[0]%s==0,(()=>"input tensor batch is ".concat(a.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(e.join(" * ")," === ").concat(s)));const o={x:a},r={blockShape:e,crops:n};return io.runKernel(Tt,o,r)}});const Zr=xo({batchNorm_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,a,s,o){null==o&&(o=.001);const r=mo(t,"x","batchNorm"),i=mo(e,"mean","batchNorm"),c=mo(n,"variance","batchNorm");let l,u;null!=s&&(l=mo(s,"scale","batchNorm")),null!=a&&(u=mo(a,"offset","batchNorm")),I(i.rank===c.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),I(null==u||i.rank===u.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),I(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(t){let e;return e=0===t.rank||1===t.rank?Ur(t,[1,1,1,t.size]):2===t.rank?Ur(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Ur(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(r),scale:l,offset:u,mean:i,variance:c},d={varianceEpsilon:o},p=io.runKernel(xe,h,d);return Ur(p,r.shape)}});const Jr=xo({batchNorm2d_:function(t,e,n,a,s,o){const r=mo(t,"x","batchNorm"),i=mo(e,"mean","batchNorm"),c=mo(n,"variance","batchNorm");let l,u;return null!=s&&(l=mo(s,"scale","batchNorm")),null!=a&&(u=mo(a,"offset","batchNorm")),I(2===r.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(r.rank,"."))),I(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),I(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&I(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&I(2===u.rank||1===u.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,"."))),Zr(r,i,c,u,l,o)}});const Qr=xo({batchNorm3d_:function(t,e,n,a,s,o){const r=mo(t,"x","batchNorm"),i=mo(e,"mean","batchNorm"),c=mo(n,"variance","batchNorm");let l,u;return null!=s&&(l=mo(s,"scale","batchNorm")),null!=a&&(u=mo(a,"offset","batchNorm")),I(3===r.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(r.rank,"."))),I(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),I(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&I(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&I(3===u.rank||1===u.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,"."))),Zr(r,i,c,u,l,o)}});const $r=xo({batchNorm4d_:function(t,e,n,a,s,o){const r=mo(t,"x","batchNorm"),i=mo(e,"mean","batchNorm"),c=mo(n,"variance","batchNorm");let l,u;return null!=s&&(l=mo(s,"scale","batchNorm")),null!=a&&(u=mo(a,"offset","batchNorm")),I(4===r.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(r.rank,"."))),I(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),I(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&I(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&I(4===u.rank||1===u.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,"."))),Zr(r,i,c,u,l,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ti=xo({bincount_:function(t,e,n){const a=mo(t,"x","bincount"),s=mo(e,"weights","bincount");I("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),I(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),I(s.size===a.size||0===s.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(s.shape,".")));const o={x:a,weights:s},r={size:n};return io.runKernel(Et,o,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ei=xo({broadcastTo_:function(t,e){let n=mo(t,"broadcastTo","x");const a=n.shape;if(Z(e),e.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(e.length," < input.rank=").concat(n.rank,"."));if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Ur(n,t)}const s=n.shape,o=Array.from(e);for(let c=e.length-1;c>=0;c--)if(s[c]===e[c])o[c]=1;else if(1!==n.shape[c])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(e,"]."));if(0===o.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return lr(n);const r={x:n},i={reps:o};return io.runKernel(ra,r,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ni=xo({ceil_:function(t){const e={x:mo(t,"x","ceil","float32")};return io.runKernel(Dt,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ai(t,e,n){Z(t);const a={shape:t,value:e,dtype:n=n||U(e)};return io.runKernel(fe,{},a)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const si=xo({clipByValue_:function(t,e,n){const a=mo(t,"x","clipByValue");if(I(e<=n,(()=>"Error in clip: min (".concat(e,") must be ")+"less than or equal to max (".concat(n,")."))),e===n)return ai(a.shape,e,a.dtype);const s={x:a},o={clipValueMin:e,clipValueMax:n};return io.runKernel(_t,s,o)}});const oi=xo({concat1d_:function(t){return Hr(t,0)}});const ri=xo({concat2d_:function(t,e){return Hr(t,e)}});const ii=xo({concat3d_:function(t,e){return Hr(t,e)}});const ci=xo({concat4d_:function(t,e){return Hr(t,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const li=xo({conv2d_:function(t,e,n,a,s="NHWC",o=[1,1],r){const i=mo(t,"x","conv2d","float32"),c=mo(e,"filter","conv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=Ur(i,[1,i.shape[0],i.shape[1],i.shape[2]])),I(4===l.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(l.rank,"."))),I(4===c.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(c.rank,"."))),Wr("conv2d",a,r);const h="NHWC"===s?l.shape[3]:l.shape[1];I(h===c.shape[2],(()=>"Error in conv2d: depth of input (".concat(h,") must match ")+"input depth for filter ".concat(c.shape[2],"."))),I(zr(n,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(o,"'"))),I(Pr(o),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),I(Pr(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:s,dilations:o,dimRoundingMode:r},f=io.runKernel(zt,d,p);return u?Ur(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const ui=xo({conv1d_:function(t,e,n,a,s="NWC",o=1,r){const i=mo(t,"x","conv1d"),c=mo(e,"filter","conv1d");let l=i,u=!1;2===i.rank&&(u=!0,l=Ur(i,[1,i.shape[0],i.shape[1]])),I(3===l.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(l.rank,"."))),I(3===c.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(c.rank,"."))),Wr("conv1d",a,r),I(l.shape[2]===c.shape[1],(()=>"Error in conv1d: depth of input (".concat(l.shape[2],") must match ")+"input depth for filter ".concat(c.shape[1],"."))),I(zr(n,o),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(o,"'"))),I(Pr(o),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),I(Pr(n),(()=>"Error in conv1D: Stride should be larger than 0.")),I("NWC"===s,(()=>"Error in conv1d: got dataFormat of ".concat(s," but only NWC is currently supported.")));const h=Ur(c,[1,c.shape[0],c.shape[1],c.shape[2]]),d=Ur(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=li(d,h,[1,n],a,"NHWC",[1,o],r);return Ur(p,u?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hi=xo({conv2DBackpropInput_:function(t,e,n,a,s,o="NHWC",r){I(t.length===e.rank,(()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")));let i=t,c=e,l=!1;3===e.rank&&(l=!0,c=Ur(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,t[0],t[1],t[2]]),I(4===i.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(i.length,"."))),I(4===c.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(c.rank))),I(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const u="NHWC"===o?i[3]:i[1],h="NHWC"===o?c.shape[3]:c.shape[1];I(u===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(u,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),I(h===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(h,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),Wr("conv2dDerInput",s,r);const d={dy:c,filter:n},p={strides:a,pad:s,dataFormat:o,dimRoundingMode:r,inputShape:i},f=io.runKernel(Bt,d,p);return l?Ur(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const di=xo({conv2dTranspose_:function(t,e,n,a,s,o){const r=mo(t,"x","conv2dTranspose"),i=mo(e,"filter","conv2dTranspose");return hi(n,r,i,a,s,"NHWC",o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pi=xo({conv3d_:function(t,e,n,a,s="NDHWC",o=[1,1,1]){const r=mo(t,"x","conv3d"),i=mo(e,"filter","conv3d");let c=r,l=!1;4===r.rank&&(l=!0,c=Ur(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),I(5===c.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(c.rank,"."))),I(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),I(c.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(c.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),I(zr(n,o),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(o,"'"))),I("NDHWC"===s,(()=>"Error in conv3d: got dataFormat of ".concat(s," but only NDHWC is currently supported."))),I(Pr(o),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),I(Pr(n),(()=>"Error in conv3D: Strides should be larger than 0."));const u={x:c,filter:i},h={strides:n,pad:a,dataFormat:s,dilations:o},d=io.runKernel(Wt,u,h);return l?Ur(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fi=xo({conv3DBackpropInput_:function(t,e,n,a,s){I(t.length===e.rank,(()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")));let o=t,r=e,i=!1;4===e.rank&&(i=!0,r=Ur(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,t[0],t[1],t[2],t[3]]);const c=o[4],l=r.shape[4];I(5===o.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(o.length,"."))),I(5===r.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(r.rank))),I(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),I(c===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(c,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),I(l===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(l,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const u={dy:r,filter:n},h={pad:s,strides:a,inputShape:o},d=io.runKernel(Vt,u,h);return i?Ur(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const gi=xo({conv3dTranspose_:function(t,e,n,a,s){const o=mo(t,"x","conv3dTranspose"),r=mo(e,"filter","conv3dTranspose");return fi(n,o,r,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mi=xo({cos_:function(t){const e={x:mo(t,"x","cos","float32")};return io.runKernel(Gt,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bi=xo({cosh_:function(t){const e={x:mo(t,"x","cosh","float32")};return io.runKernel(Ht,e)}});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xi=xo({cumprod_:function(t,e=0,n=!1,a=!1){const s={x:mo(t,"x","cumprod")},o={axis:e,exclusive:n,reverse:a};return io.runKernel(jt,s,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yi=xo({cumsum_:function(t,e=0,n=!1,a=!1){const s={x:mo(t,"x","cumsum")},o={axis:e,exclusive:n,reverse:a};return io.runKernel(Kt,s,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ki=xo({denseBincount_:function(t,e,n,a=!1){const s=mo(t,"x","denseBincount"),o=mo(e,"weights","denseBincount");I("int32"===s.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(s.dtype))),I(s.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(s.rank,"."))),I(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),I(o.size===s.size||0===o.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(s.shape,", weights shape: ")+"".concat(o.shape,".")));const r={x:s,weights:o},i={size:n,binaryOutput:a};return io.runKernel(Xt,r,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wi=xo({depthToSpace_:function(t,e,n="NHWC"){const a=mo(t,"x","depthToSpace","float32"),s="NHWC"===n?a.shape[1]:a.shape[2],o="NHWC"===n?a.shape[2]:a.shape[3],r="NHWC"===n?a.shape[3]:a.shape[1];I(e>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(e))),I(s*e>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(s," and ").concat(e,"  for depthToSpace with input shape\n    ").concat(a.shape))),I(o*e>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(o," and ").concat(e," for depthToSpace with input shape\n        ").concat(a.shape))),I(r%(e*e)==0,(()=>"Dimension size must be evenly divisible by ".concat(e*e," but is ").concat(r," for depthToSpace with input shape ").concat(a.shape)));const i={x:a},c={blockSize:e,dataFormat:n};return io.runKernel(Yt,i,c)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vi=xo({depthwiseConv2d_:function(t,e,n,a,s="NHWC",o=[1,1],r){const i=mo(t,"x","depthwiseConv2d","float32"),c=mo(e,"filter","depthwiseConv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=Ur(i,[1,i.shape[0],i.shape[1],i.shape[2]])),I(4===l.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(l.rank,"."))),I(4===c.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(c.rank,".")));const h="NHWC"===s?l.shape[3]:l.shape[1];I(h===c.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(h,") must match the inChannels dimension in ")+"filter ".concat(c.shape[2],"."))),Wr("depthwiseConv2d",a,r);const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:s,dilations:o,dimRoundingMode:r},f=io.runKernel(Zt,d,p);return u?Ur(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ii=xo({dilation2d_:function(t,e,n,a,s=[1,1],o="NHWC"){const r=mo(t,"x","dilation2d"),i=mo(e,"filter","dilation2d");I(3===r.rank||4===r.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(r.rank,"."))),I(3===i.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(i.rank,"."))),I("NHWC"===o,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(o)));let c=r,l=!1;3===r.rank&&(c=Ur(r,[1,r.shape[0],r.shape[1],r.shape[2]]),l=!0),I(c.shape[3]===i.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(c.shape[3]," vs ").concat(i.shape[2])));const u={x:c,filter:i},h={strides:n,pad:a,dilations:s},d=io.runKernel(te,u,h);return l?Ur(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ci(t,e){const n=t.length,a=[];for(let s=0;s<n;s++){const o=n-1-s,r=t[o]||1;(e[e.length-1-s]||1)>1&&1===r&&a.unshift(o)}return a}function Si(t,e){const n=[];for(let a=0;a<e.length;a++){const s=t[t.length-a-1],o=e.length-a-1,r=e[o];(null==s||1===s&&r>1)&&n.unshift(o)}return n}function Ni(t,e){const n=Math.max(t.length,e.length),a=new Array(n);for(let s=0;s<n;s++){let o=t[t.length-s-1];null==o&&(o=1);let r=e[e.length-s-1];if(null==r&&(r=1),1===o)a[n-s-1]=r;else if(1===r)a[n-s-1]=o;else{if(o!==r){const n="Operands could not be broadcast together with shapes "+"".concat(t," and ").concat(e,".");throw Error(n)}a[n-s-1]=o}}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ti=xo({equal_:function(t,e){let n=mo(t,"a","equal","string_or_numeric"),a=mo(e,"b","equal","string_or_numeric");[n,a]=to(n,a),Ni(n.shape,a.shape);const s={a:n,b:a};return io.runKernel(le,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ei=xo({where_:function(t,e,n){const a=mo(e,"a","where"),s=mo(n,"b","where"),o=mo(t,"condition","where","bool"),r=Ni(Ni(o.shape,a.shape),s.shape),i={condition:ei(o,r),t:ei(a,r),e:ei(s,r)};return io.runKernel(Dn,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ri=xo({zerosLike_:function(t){const e={x:mo(t,"x","zerosLike")};return io.runKernel(pa,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ai=xo({divNoNan_:function(t,e){let n=mo(t,"a","div"),a=mo(e,"b","div");[n,a]=to(n,a);const s=dr(n,a),o=Ri(s),r=Ti(a,o);return Ei(r,o,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fi=xo({dot_:function(t,e){const n=mo(t,"t1","dot"),a=mo(e,"t2","dot");I(!(1!==n.rank&&2!==n.rank||1!==a.rank&&2!==a.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const s=1===n.rank?n.size:n.shape[1],o=1===a.rank?a.size:a.shape[0];if(I(s===o,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(s," and ").concat(o,"."))),1===n.rank&&1===a.rank){const t=Ur(n,[1,-1]),e=Ur(a,[-1,1]),s=jr(t,e);return Ur(s,[])}if(1===n.rank&&2===a.rank){const t=Ur(n,[1,-1]),e=Ur(a,[a.shape[0],a.shape[1]]),s=jr(t,e);return Ur(s,[s.size])}if(2===n.rank&&1===a.rank){const t=Ur(a,[-1,1]),e=jr(n,t);return Ur(e,[e.size])}{const t=Ur(a,[a.shape[0],a.shape[1]]);return jr(n,t)}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Di=xo({einsum_:function(t,...e){const n=e.map(((t,e)=>mo(t,"tensors".concat(e),"einsum"))),a={equation:t};return io.runKernel(oe,n,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _i=xo({elu_:function(t){const e={x:mo(t,"x","elu","float32")};return io.runKernel(re,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oi=xo({erf_:function(t){let e=mo(t,"x","erf");I("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=cr(e,"float32"));const n={x:e};return io.runKernel(ce,n)}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Li(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Mi(t,e,n){const a=t.length+e.length,s=[];let o=0,r=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?s.push(t[o++]):s.push(e[r++]);return s}function zi(t,e){const n=[],a=t.length;for(let s=0;s<a;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function Pi(t,e){return Mi(t,e.map((t=>1)),e)}function Bi(t,e,n){I(Li(e,n),(()=>"".concat(t," supports only inner-most axes for now. ")+"Got axes ".concat(e," and rank-").concat(n," input.")))}function Wi(t,e){if(Li(t,e))return null;const n=[];for(let a=0;a<e;++a)-1===t.indexOf(a)&&n.push(a);return t.forEach((t=>n.push(t))),n}function Ui(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function Vi(t,e){const n=[];for(let a=e-t;a<e;++a)n.push(a);return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gi=xo({max_:function(t,e=null,n=!1){const a={x:mo(t,"x","max")},s={reductionIndices:e,keepDims:n};return io.runKernel(We,a,s)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hi=xo({min_:function(t,e=null,n=!1){const a={x:mo(t,"x","min")},s={axis:e,keepDims:n};return io.runKernel(Xe,a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ji=xo({pow_:function(t,e){let n=mo(t,"base","pow"),a=mo(e,"exp","pow");[n,a]=to(n,a);const s={a:n,b:a};return io.runKernel(un,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ki(t,e){if((ks(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&ks(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ko(t,[],[],e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qi=xo({sqrt_:function(t){const e={x:mo(t,"x","sqrt","float32")};return io.runKernel(Wn,e)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xi=xo({square_:function(t){const e=mo(t,"x","square");return io.runKernel("Square",{x:e},{})}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yi=xo({sum_:function(t,e=null,n=!1){let a=mo(t,"x","sum");"bool"===a.dtype&&(a=cr(a,"int32"));const s={x:a},o={axis:e,keepDims:n};return io.runKernel(Un,s,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zi(t,e,n=null){if(0===t.rank)return fr(t);if(1!==t.rank&&null===n)return Zi(Ur(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Yi(fr(t),n);if(e===1/0)return Gi(fr(t),n);if(e===-1/0)return Hi(fr(t),n);if("euclidean"===e||2===e)return qi(Yi(ji(fr(t),Ki(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}if(Array.isArray(n)&&2===n.length){if(1===e)return Gi(Yi(fr(t),n[0]),n[1]-1);if(e===1/0)return Gi(Yi(fr(t),n[1]),n[0]);if(e===-1/0)return Hi(Yi(fr(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return qi(Yi(Xi(t),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}throw new Error("Error in norm: invalid axis: ".concat(n))}const Ji=xo({norm_:function(t,e="euclidean",n=null,a=!1){const s=Zi(t=mo(t,"x","norm"),e,n);let o=s.shape;if(a){const e=_(n,t.shape);o=Pi(s.shape,e)}return Ur(s,o)}});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qi=xo({euclideanNorm_:function(t,e=null,n=!1){return Ji(t,"euclidean",e,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $i=xo({exp_:function(t){const e={x:mo(t,"x","exp")};return io.runKernel(ue,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tc=xo({expandDims_:function(t,e=0){const n=mo(t,"x","expandDims","string_or_numeric");I(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},s={dim:e};return io.runKernel(he,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ec=xo({expm1_:function(t){const e={x:mo(t,"x","expm1")};return io.runKernel(de,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nc=xo({tile_:function(t,e){const n=mo(t,"x","tile","string_or_numeric");I(n.rank===e.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(e,".")));const a={x:n},s={reps:e};return io.runKernel(ra,a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ac=xo({eye_:function(t,e,n,a="float32"){null==e&&(e=t);const s=ir([t,e],a),o=t<=e?t:e;for(let i=0;i<o;++i)s.set(1,i,i);const r=Ur(s.toTensor(),[t,e]);if(null==n)return r;if(1===n.length)return nc(tc(r,0),[n[0],1,1]);if(2===n.length)return nc(tc(tc(r,0),0),[n[0],n[1],1,1]);if(3===n.length)return nc(tc(tc(tc(r,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sc=xo({floor_:function(t){const e={x:mo(t,"x","floor","float32")};return io.runKernel(me,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oc=xo({gather_:function(t,e,n=0,a=0){const s={x:mo(t,"x","gather"),indices:mo(e,"indices","gather","int32")},o={axis:n,batchDims:a};return io.runKernel(ye,s,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rc=xo({greater_:function(t,e){let n=mo(t,"a","greater","string_or_numeric"),a=mo(e,"b","greater","string_or_numeric");[n,a]=to(n,a),Ni(n.shape,a.shape);const s={a:n,b:a};return io.runKernel(we,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ic=xo({greaterEqual_:function(t,e){let n=mo(t,"a","greaterEqual","string_or_numeric"),a=mo(e,"b","greaterEqual","string_or_numeric");[n,a]=to(n,a),Ni(n.shape,a.shape);const s={a:n,b:a};return io.runKernel(ve,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cc=xo({imag_:function(t){const e={input:mo(t,"input","imag")};return io.runKernel(Se,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lc=xo({isFinite_:function(t){const e={x:mo(t,"x","isFinite")};return io.runKernel(Ne,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uc=xo({isInf_:function(t){const e={x:mo(t,"x","isInf")};return io.runKernel(Te,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hc=xo({isNaN_:function(t){const e={x:mo(t,"x","isNaN")};return io.runKernel(Ee,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dc=xo({leakyRelu_:function(t,e=.2){const n={x:mo(t,"x","leakyRelu")},a={alpha:e};return io.runKernel(Re,n,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pc=xo({less_:function(t,e){let n=mo(t,"a","less","string_or_numeric"),a=mo(e,"b","less","string_or_numeric");[n,a]=to(n,a),Ni(n.shape,a.shape);const s={a:n,b:a};return io.runKernel(Ae,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fc=xo({lessEqual_:function(t,e){let n=mo(t,"a","lessEqual","string_or_numeric"),a=mo(e,"b","lessEqual","string_or_numeric");[n,a]=to(n,a),Ni(n.shape,a.shape);const s={a:n,b:a};return io.runKernel(Fe,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gc=xo({localResponseNormalization_:function(t,e=5,n=1,a=1,s=.5){const o=mo(t,"x","localResponseNormalization");I(4===o.rank||3===o.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(o.rank,"."))),I(E(e),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(e,".")));let r=o,i=!1;3===o.rank&&(i=!0,r=Ur(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const c={x:r},l={depthRadius:e,bias:n,alpha:a,beta:s},u=io.runKernel(Pe,c,l);return i?Ur(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mc=xo({log_:function(t){const e={x:mo(t,"x","log","float32")};return io.runKernel(_e,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bc=xo({log1p_:function(t){const e={x:mo(t,"x","log1p")};return io.runKernel(Oe,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xc(t){return io.customGrad(t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yc=xo({neg_:function(t){const e={x:mo(t,"x","neg")};return io.runKernel(tn,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kc=xo({softplus_:function(t){const e={x:mo(t,"x","softplus")};return io.runKernel(Bn,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wc=xo({logSigmoid_:function(t){const e=mo(t,"x","logSigmoid");return xc((t=>({value:yc(kc(yc(t))),gradFunc:e=>pr(e,Kr(yc(t)))})))(e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vc=xo({sub_:function(t,e){let n=mo(t,"a","sub"),a=mo(e,"b","sub");[n,a]=to(n,a);const s={a:n,b:a};return io.runKernel(aa,s)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ic=xo({logSoftmax_:function(t,e=-1){const n=mo(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(e));return xc(((t,n)=>{const a=Gi(t,e,!0),s=vc(t,a),o=vc(cr(s,"float32"),mc(Yi($i(s),e,!0)));n([o]);return{value:o,gradFunc:(t,n)=>{const[a]=n,s=$i(a);return vc(t,pr(Yi(t,e,!0),s))}}}))(n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cc=xo({logSumExp_:function(t,e=null,n=!1){const a=mo(t,"x","logSumExp"),s=_(e,a.shape),o=Gi(a,s,!0),r=vc(a,o),i=$i(r),c=Yi(i,s),l=mc(c),u=ur(Ur(o,l.shape),l);if(n){const t=Pi(u.shape,s);return Ur(u,t)}return u}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sc=xo({logicalAnd_:function(t,e){const n=mo(t,"a","logicalAnd","bool"),a=mo(e,"b","logicalAnd","bool");Ni(n.shape,a.shape);const s={a:n,b:a};return io.runKernel(Le,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nc=xo({logicalNot_:function(t){const e={x:mo(t,"x","logicalNot","bool")};return io.runKernel(Me,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tc=xo({logicalOr_:function(t,e){const n=mo(t,"a","logicalOr","bool"),a=mo(e,"b","logicalOr","bool");Ni(n.shape,a.shape);const s={a:n,b:a};return io.runKernel(ze,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ec=xo({logicalXor_:function(t,e){const n=mo(t,"a","logicalXor","bool"),a=mo(e,"b","logicalXor","bool");return Ni(n.shape,a.shape),Sc(Tc(t,e),Nc(Sc(t,e)))}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rc=xo({maxPool_:function(t,e,n,a,s){const o=mo(t,"x","maxPool");let r=o,i=!1;3===o.rank&&(i=!0,r=Ur(o,[1,o.shape[0],o.shape[1],o.shape[2]])),I(4===r.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.rank,"."))),I(zr(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),Wr("maxPool",a,s);const c={x:r},l={filterSize:e,strides:n,pad:a,dimRoundingMode:s},u=io.runKernel(Ve,c,l);return i?Ur(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ac=xo({maxPool3d_:function(t,e=[1,1,1],n,a,s,o="NDHWC"){const r=mo(t,"x","maxPool3d");let i=r,c=!1;4===r.rank&&(c=!0,i=Ur(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),I(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),I("NDHWC"===o,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(o))),Wr("maxPool3d",a,s);const l={x:i},u={filterSize:e,strides:n,pad:a,dimRoundingMode:s,dataFormat:o},h=io.runKernel(He,l,u);return c?Ur(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fc=xo({maximum_:function(t,e){let n=mo(t,"a","maximum"),a=mo(e,"b","maximum");[n,a]=to(n,a),"bool"===n.dtype&&(n=cr(n,"int32"),a=cr(a,"int32")),Ni(n.shape,a.shape);const s={a:n,b:a};return io.runKernel(Ue,s)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dc=xo({mean_:function(t,e=null,n=!1){const a={x:mo(t,"x","mean")},s={axis:e,keepDims:n};return io.runKernel(qe,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _c(t,e="float32"){if(Z(t),"complex64"===e){const e=_c(t,"float32"),n=_c(t,"float32");return yo(e,n)}const n=X(N(t),e);return io.makeTensor(n,t,e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oc(t,e="float32"){if(Z(t),"complex64"===e){const e=Oc(t,"float32"),n=_c(t,"float32");return yo(e,n)}const n=q(N(t),e);return io.makeTensor(n,t,e)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lc=xo({minimum_:function(t,e){let n=mo(t,"a","minimum"),a=mo(e,"b","minimum");[n,a]=to(n,a),"bool"===n.dtype&&(n=cr(n,"int32"),a=cr(a,"int32")),Ni(n.shape,a.shape);const s={a:n,b:a};return io.runKernel(Ye,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mc=xo({mirrorPad_:function(t,e,n){I("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const a=mo(t,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");I(e.length===a.rank,(()=>"Padding doesn't match input. Must be ".concat(a.rank,". ")+"Got ".concat(e.length,".")));const s="reflect"===n?1:0;for(let i=0;i<a.rank;i++)I(2===e[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),I(e[i][0]>=0&&e[i][0]<=a.shape[i]-s&&e[i][1]>=0&&e[i][1]<=a.shape[i]-s,(()=>"Padding in dimension ".concat(i," cannot be greater than or equal ")+"to ".concat(a.shape[i]-s," or less than 0 for input of ")+"shape ".concat(a.shape)));const o={paddings:e,mode:n},r={x:a};return io.runKernel(Ze,r,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zc=xo({mod_:function(t,e){let n=mo(t,"a","mod"),a=mo(e,"b","mod");[n,a]=to(n,a);const s={a:n,b:a};return io.runKernel(Je,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pc=xo({moments_:function(t,e=null,n=!1){const a=_(e,(t=mo(t,"x","moments")).shape),s=Dc(t,a,n);let o=s.shape;n||(o=Pi(s.shape,a));const r=Xi(vc(cr(t,"float32"),Ur(s,o)));return{mean:s,variance:Dc(r,a,n)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bc=xo({notEqual_:function(t,e){let n=mo(t,"a","notEqual","string_or_numeric"),a=mo(e,"b","notEqual","string_or_numeric");[n,a]=to(n,a),Ni(n.shape,a.shape);const s={a:n,b:a};return io.runKernel(en,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wc=xo({oneHot_:function(t,e,n=1,a=0,s="int32"){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(e));const o={indices:mo(t,"indices","oneHot","int32")},r={dtype:s,depth:e,onValue:n,offValue:a};return io.runKernel(rn,o,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uc=xo({onesLike_:function(t){const e={x:mo(t,"x","onesLike")};return io.runKernel(on,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vc=xo({pad_:function(t,e,n=0){const a=mo(t,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},o={x:a};return io.runKernel(ln,o,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gc=xo({spaceToBatchND_:function(t,e,n){const a=mo(t,"x","spaceToBatchND");I(a.rank>=1+e.length,(()=>"input rank ".concat(a.rank," should be > than [blockShape] ").concat(e.length))),I(n.length===e.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(e.length))),I(a.shape.reduce(((t,a,s)=>s>0&&s<=e.length?t&&(a+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>"input spatial dimensions ".concat(a.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(e.toString())));const s={x:a},o={blockShape:e,paddings:n};return io.runKernel(Vn,s,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hc=xo({pool_:function(t,e,n,a,s,o,r){null==s&&(s=[1,1]),null==o&&(o=1),0===a&&(a="valid");const i=mo(t,"x","maxPool");let c=i,l=!1;3===i.rank&&(l=!0,c=Ur(i,[1,i.shape[0],i.shape[1],i.shape[2]])),I(zr(o,s),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(s,"'")));const u=Tr(c.shape,e,o,s,a),h=[u.dilationHeight,u.dilationWidth];let d;d="same"===a?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))),a=n.map((t=>t-1)),s=a.map((t=>Math.floor(t/2))),o=a.map(((t,e)=>t-s[e]));return a.map(((t,e)=>[s[e],o[e]]))}([u.filterHeight,u.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=function(t,e,n){const a=n.map((t=>t[0])),s=n.map((t=>t[1])),o=t.concat(a,s),r=e.map(((t,e)=>(t-o[e]%t)%t)),i=s.map(((t,e)=>t+r[e])),c=e.map(((t,e)=>[a[e],i[e]])),l=e.map(((t,e)=>[0,r[e]]));return[c,l]}([u.inHeight,u.inWidth],h,d),m=p?a:"valid",b=p?c:Gc(c,h,f),x=("avg"===n?()=>Vr(b,e,o,m,r):()=>Rc(b,e,o,m,r))(),y=p?x:Yr(x,h,g);return l?Ur(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jc=xo({prelu_:function(t,e){const n={x:mo(t,"x","prelu"),alpha:mo(e,"alpha","prelu")};return io.runKernel(hn,n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kc=xo({prod_:function(t,e=null,n=!1){let a=mo(t,"x","prod");"bool"===a.dtype&&(a=cr(a,"int32"));const s={x:a},o={axis:e,keepDims:n};return io.runKernel(dn,s,o)}});var qc={exports:{}};!function(t,e){function n(t){var e=this,n=function(){var t=4022871197,e=function(e){e=String(e);for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)};return e}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function a(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function s(t,e){var s=new n(t),o=e&&e.state,r=s.next;return r.int32=function(){return 4294967296*s.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,o&&("object"==typeof o&&a(o,s),r.state=function(){return a(s,{})}),r}e&&e.exports?e.exports=s:this.alea=s}(0,qc);var Xc=qc.exports,Yc={exports:{}};!function(t,e){function n(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),e.next()}function a(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function s(t,e){var s=new n(t),o=e&&e.state,r=function(){return(s.next()>>>0)/4294967296};return r.double=function(){do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=s.next,r.quick=r,o&&("object"==typeof o&&a(o,s),r.state=function(){return a(s,{})}),r}e&&e.exports?e.exports=s:this.xor128=s}(0,Yc);var Zc=Yc.exports,Jc={exports:{}};!function(t,e){function n(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),a==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function a(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function s(t,e){var s=new n(t),o=e&&e.state,r=function(){return(s.next()>>>0)/4294967296};return r.double=function(){do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=s.next,r.quick=r,o&&("object"==typeof o&&a(o,s),r.state=function(){return a(s,{})}),r}e&&e.exports?e.exports=s:this.xorwow=s}(0,Jc);var Qc=Jc.exports,$c={exports:{}};!function(t,e){function n(t){var e=this;e.next=function(){var t,n,a=e.x,s=e.i;return t=a[s],n=(t^=t>>>7)^t<<24,n^=(t=a[s+1&7])^t>>>10,n^=(t=a[s+3&7])^t>>>3,n^=(t=a[s+4&7])^t<<7,t=a[s+7&7],n^=(t^=t<<13)^t<<9,a[s]=n,e.i=s+1&7,n},function(t,e){var n,a=[];if(e===(0|e))a[0]=e;else for(e=""+e,n=0;n<e.length;++n)a[7&n]=a[7&n]<<15^e.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],t.x=a,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function a(t,e){return e.x=t.x.slice(),e.i=t.i,e}function s(t,e){null==t&&(t=+new Date);var s=new n(t),o=e&&e.state,r=function(){return(s.next()>>>0)/4294967296};return r.double=function(){do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=s.next,r.quick=r,o&&(o.x&&a(o,s),r.state=function(){return a(s,{})}),r}e&&e.exports?e.exports=s:this.xorshift7=s}(0,$c);var tl=$c.exports,el={exports:{}};!function(t,e){function n(t){var e=this;e.next=function(){var t,n,a=e.w,s=e.X,o=e.i;return e.w=a=a+1640531527|0,n=s[o+34&127],t=s[o=o+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[o]=n^t,e.i=o,n+(a^a>>>16)|0},function(t,e){var n,a,s,o,r,i=[],c=128;for(e===(0|e)?(a=e,e=null):(e+="\0",a=0,c=Math.max(c,e.length)),s=0,o=-32;o<c;++o)e&&(a^=e.charCodeAt((o+32)%e.length)),0===o&&(r=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,o>=0&&(r=r+1640531527|0,s=0==(n=i[127&o]^=a+r)?s+1:0);for(s>=128&&(i[127&(e&&e.length||0)]=-1),s=127,o=512;o>0;--o)a=i[s+34&127],n=i[s=s+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[s]=a^n;t.w=r,t.X=i,t.i=s}(e,t)}function a(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function s(t,e){null==t&&(t=+new Date);var s=new n(t),o=e&&e.state,r=function(){return(s.next()>>>0)/4294967296};return r.double=function(){do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=s.next,r.quick=r,o&&(o.X&&a(o,s),r.state=function(){return a(s,{})}),r}e&&e.exports?e.exports=s:this.xor4096=s}(0,el);var nl=el.exports,al={exports:{}};!function(t,e){function n(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,a=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-a|0,a=a<<24^a>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-a|0,e.d=a<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var a=0;a<n.length+20;a++)e.b^=0|n.charCodeAt(a),e.next()}function a(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function s(t,e){var s=new n(t),o=e&&e.state,r=function(){return(s.next()>>>0)/4294967296};return r.double=function(){do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=s.next,r.quick=r,o&&("object"==typeof o&&a(o,s),r.state=function(){return a(s,{})}),r}e&&e.exports?e.exports=s:this.tychei=s}(0,al);var sl=al.exports,ol={exports:{}};const rl=p(Object.freeze(Object.defineProperty({__proto__:null,default:{}},Symbol.toStringTag,{value:"Module"})));var il;il=ol,function(t,e,n){var a,s=256,o="random",r=n.pow(s,6),i=n.pow(2,52),c=2*i,l=s-1;function u(l,u,m){var b=[],x=f(p((u=1==u?{entropy:!0}:u||{}).entropy?[l,g(e)]:null==l?function(){try{var n;return a&&(n=a.randomBytes)?n=n(s):(n=new Uint8Array(s),(t.crypto||t.msCrypto).getRandomValues(n)),g(n)}catch(nM){var o=t.navigator,r=o&&o.plugins;return[+new Date,t,r,t.screen,g(e)]}}():l,3),b),y=new h(b),k=function(){for(var t=y.g(6),e=r,n=0;t<i;)t=(t+n)*s,e*=s,n=y.g(1);for(;t>=c;)t/=2,e/=2,n>>>=1;return(t+n)/e};return k.int32=function(){return 0|y.g(4)},k.quick=function(){return y.g(4)/4294967296},k.double=k,f(g(y.S),e),(u.pass||m||function(t,e,a,s){return s&&(s.S&&d(s,y),t.state=function(){return d(y,{})}),a?(n[o]=t,e):t})(k,x,"global"in u?u.global:this==n,u.state)}function h(t){var e,n=t.length,a=this,o=0,r=a.i=a.j=0,i=a.S=[];for(n||(t=[n++]);o<s;)i[o]=o++;for(o=0;o<s;o++)i[o]=i[r=l&r+t[o%n]+(e=i[o])],i[r]=e;(a.g=function(t){for(var e,n=0,o=a.i,r=a.j,i=a.S;t--;)e=i[o=l&o+1],n=n*s+i[l&(i[o]=i[r=l&r+e])+(i[r]=e)];return a.i=o,a.j=r,n})(s)}function d(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function p(t,e){var n,a=[],s=typeof t;if(e&&"object"==s)for(n in t)try{a.push(p(t[n],e-1))}catch(nM){}return a.length?a:"string"==s?t:t+"\0"}function f(t,e){for(var n,a=t+"",s=0;s<a.length;)e[l&s]=l&(n^=19*e[l&s])+a.charCodeAt(s++);return g(e)}function g(t){return String.fromCharCode.apply(0,t)}if(f(n.random(),e),il.exports){il.exports=u;try{a=rl}catch(m){}}else n["seed"+o]=u}("undefined"!=typeof self?self:h,[],Math);var cl=Xc,ll=Zc,ul=Qc,hl=tl,dl=nl,pl=sl,fl=ol.exports;fl.alea=cl,fl.xor128=ll,fl.xorwow=ul,fl.xorshift7=hl,fl.xor4096=dl,fl.tychei=pl;var gl=fl;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ml{constructor(t,e,n,a,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=s||Math.random();this.random=gl.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let a,s,o;do{a=2*this.random()-1,s=2*this.random()-1,o=a*a+s*s}while(o>=1||0===o);const r=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*a*r,e=this.mean+this.stdDev*s*r,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class bl{constructor(t=0,e=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(t," - ").concat(e," <= 1 and dtype is not float"));this.random=gl.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xl=xo({randomNormal_:function(t,e=0,n=1,a,s){if(Z(t),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const o=new ml(e,n,a,!1,s),r=ir(t,a);for(let i=0;i<r.values.length;i++)r.values[i]=o.nextValue();return r.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yl=xo({randomUniform_:function(t,e=0,n=1,a="float32",s){Z(t);const o=ir(t,a),r=new bl(e,n,null,s);for(let i=0;i<o.values.length;i++)o.values[i]=r.nextValue();return o.toTensor()}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kl(t,e,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:a};return io.runKernel(mn,{},s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wl=xo({real_:function(t){const e={input:mo(t,"input","real")};return io.runKernel(bn,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vl=xo({reciprocal_:function(t){const e={x:mo(t,"x","reciprocal")};return io.runKernel(xn,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Il=xo({relu_:function(t){const e={x:mo(t,"x","relu")};return io.runKernel(yn,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cl=xo({relu6_:function(t){const e={x:mo(t,"x","relu6")};return io.runKernel(Sn,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sl=xo({reverse_:function(t,e){const n={x:mo(t,"x","reverse")},a={dims:e};return io.runKernel(Nn,n,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nl=xo({round_:function(t){const e={x:mo(t,"x","round")};return io.runKernel(Tn,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tl=xo({rsqrt_:function(t){const e={x:mo(t,"x","rsqrt","float32")};return io.runKernel(En,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const El=xo({selu_:function(t){const e={x:mo(t,"x","selu")};return io.runKernel(_n,e)}});const Rl=xo({separableConv2d_:function(t,e,n,a,s,o=[1,1],r="NHWC"){const i=mo(t,"x","separableConv2d"),c=mo(e,"depthwiseFilter","separableConv2d"),l=mo(n,"pointwiseFilter","separableConv2d");let u=i,h=!1;if(3===i.rank&&(h=!0,u=Ur(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===r)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");I(4===u.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(u.rank,"."))),I(4===c.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),I(4===l.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),I(1===l.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(l.shape[0],"."))),I(1===l.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(l.shape[1],".")));const d=c.shape[2],p=c.shape[3];I(l.shape[2]===d*p,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(d*p,", ")+"but got ".concat(l.shape[2],".")));const f=vi(u,c,a,s,r,o),g=li(f,l,1,"valid",r);return h?Ur(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Al=xo({sign_:function(t){const e={x:mo(t,"x","sign")};return io.runKernel(zn,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fl=xo({sin_:function(t){const e={x:mo(t,"x","sin","float32")};return io.runKernel(Ln,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dl=xo({sinh_:function(t){const e={x:mo(t,"x","sinh")};return io.runKernel(Mn,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _l=xo({slice1d_:function(t,e,n){const a=mo(t,"x","slice1d");return I(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),qr(a,[e],[n])}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ol=xo({slice2d_:function(t,e,n){const a=mo(t,"x","slice2d");return I(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),qr(a,e,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ll=xo({slice3d_:function(t,e,n){const a=mo(t,"x","slice3d");return I(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),qr(a,e,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ml=xo({slice4d_:function(t,e,n){const a=mo(t,"x","slice4d");return I(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),qr(a,e,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zl=xo({softmax_:function(t,e=-1){const n=mo(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(e));const a={logits:n},s={dim:e};return io.runKernel(Hn,a,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pl=xo({fft_:function(t){I("complex64"===t.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(t.dtype,".")));const e={input:t};return io.runKernel(pe,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bl=xo({ifft_:function(t){I("complex64"===t.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(t.dtype,".")));const e={input:t};return io.runKernel(Ce,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wl=xo({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let a;if(e<=2){const s=Ur(t,[n,e]);a=Bl(s)}else{const s=[n,2*(e-1)],o=Ur(wl(t),[n,e]),r=Ur(cc(t),[n,e]),i=Sl(qr(o,[0,1],[n,e-2]),1),c=pr(Sl(qr(r,[0,1],[n,e-2]),1),Ki(-1)),l=Hr([o,i],1),u=Hr([r,c],1),h=Ur(yo(l,u),[s[0],s[1]]);a=Bl(h)}if(a=wl(a),3===t.rank&&0!==t.shape[0]){const e=a,n=t.shape[0];a=Ur(a,[n,a.shape[0]/n,a.shape[1]]),e.dispose()}return a}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ul=xo({split_:function(t,e,n=0){const a={x:mo(t,"x","split")},s={numOrSizeSplits:e,axis:n};return io.runKernel(Gn,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vl=xo({rfft_:function(t,e){I("float32"===t.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(t.dtype)));let n=t.shape[t.shape.length-1];const a=t.size/n;let s;if(null!=e&&e<n){const a=t.shape.map((t=>0)),o=t.shape.map((t=>t));o[t.shape.length-1]=e,s=qr(t,a,o),n=e}else if(null!=e&&e>n){const a=t.shape.map((t=>t));a[t.shape.length-1]=e-n,s=Hr([t,_c(a)],t.shape.length-1),n=e}else s=t;const o=Ri(s),r=Ur(yo(s,o),[a,n]),i=Pl(r),c=Math.floor(n/2)+1,l=wl(i),u=cc(i),h=Ul(l,[c,n-c],l.shape.length-1),d=Ul(u,[c,n-c],u.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=c,Ur(yo(h[0],d[0]),p)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gl=xo({squaredDifference_:function(t,e){let n=mo(t,"a","squaredDifference"),a=mo(e,"b","squaredDifference");[n,a]=to(n,a),Ni(n.shape,a.shape);const s={a:n,b:a};return io.runKernel(Zn,s,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hl=xo({squeeze_:function(t,e){const n=mo(t,"x","squeeze","string_or_numeric");return Ur(n,O(n.shape,e).newShape)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jl=xo({stack_:function(t,e=0){const n=bo(t,"tensors","stack","string_or_numeric");I(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&I(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,s={axis:e};return io.runKernel(cn,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kl=xo({step_:function(t,e=0){const n={x:mo(t,"x","step")},a={alpha:e};return io.runKernel(fa,n,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ql=xo({stridedSlice_:function(t,e,n,a,s=0,o=0,r=0,i=0,c=0){const l={x:mo(t,"x","stridedSlice","string_or_numeric")},u={begin:e,end:n,strides:a,beginMask:s,endMask:o,ellipsisMask:r,newAxisMask:i,shrinkAxisMask:c};return io.runKernel($n,l,u)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xl=xo({tan_:function(t){const e={x:mo(t,"x","tan","float32")};return io.runKernel(sa,e)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yl(t,e){S(t);const n=po(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ko(t,null,n,e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zl(t,e,n){if(S(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const a=po(t,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ko(t,e,a,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jl(t,e,n){const a=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(e.shape,", shape: ").concat(t)+", sliceDim: ".concat(a,", and batchDim: ").concat(s,".");if(n.rank<s)throw new Error(o+" update.rank < ".concat(s,". "));if(t.length<a+(n.rank-s))throw new Error(o+" Output shape length < ".concat(a+(n.rank-s)));if(n.rank!==s+t.length-a)throw new Error(o+" update.rank != ".concat(s+t.length-a));for(let r=0;r<s;++r)if(n.shape[r]!==e.shape[r])throw new Error(o+" updates.shape[".concat(r,"] (").concat(n.shape[r],") != indices.shape[").concat(r,"] (").concat(e.shape[r],")."));for(let r=0;r<n.rank-s;++r)if(n.shape[r+s]!==t[r+a])throw new Error(o+" updates.shape[".concat(r+s,"] (").concat(n.shape[r+s],") != shape[").concat(r+s,"] (").concat(t[r+s],")"))}function Ql(t,e,n){const a=e.shape.length,s=a>1?e.shape[a-1]:1,o=n.length;let r=1;for(let c=s;c<o;++c)r*=n[c];const i=s<1?1:s;return{sliceRank:s,numUpdates:N(e.shape)/i,sliceSize:r,strides:[...H(n.slice(0,s)),1],outputSize:N(n)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $l=xo({topk_:function(t,e=1,n=!0){const a=mo(t,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=a.shape[a.shape.length-1];if(e<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(e));if(e>s)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(s,") ")+"but got ".concat(e));const o={x:a},r={k:e,sorted:n},[i,c]=io.runKernel(ia,o,r);return{values:i,indices:c}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tu=xo({truncatedNormal_:function(t,e=0,n=1,a,s){if(Z(t),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new ml(e,n,a,!0,s),r=ir(t,a);for(let i=0;i<r.values.length;i++)r.values[i]=o.nextValue();return r.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eu=xo({unique_:function(t,e=0){const n=mo(t,"x","unique","string_or_numeric");I(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},s={axis:e},[o,r]=io.runKernel(ua,a,s);return{values:o,indices:r}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nu=xo({unsortedSegmentSum_:function(t,e,n){const a=mo(t,"x","unsortedSegmentSum"),s=mo(e,"segmentIds","unsortedSegmentSum","int32");I(E(n),(()=>"numSegments must be of dtype int"));const o={x:a,segmentIds:s},r={numSegments:n};return io.runKernel(da,o,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const au=xo({unstack_:function(t,e=0){const n=mo(t,"x","unstack","string_or_numeric");I(e>=-n.shape.length&&e<n.shape.length,(()=>"Axis = ".concat(e," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const a={value:n},s={axis:e};return io.runKernel(ha,a,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function su(t,e){const n=[];for(let o=0;o<e.length;o++)e[o]&&n.push(o);const a=ir(t,"int32"),s=ir([n.length,t.length],"int32");for(let o=0;o<n.length;o++){const e=a.indexToLoc(n[o]),r=o*t.length;s.values.set(e,r)}return s.toTensor()}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ou=xo({transpose_:function(t,e,n){const a=mo(t,"x","transpose");if(null==e&&(e=a.shape.map(((t,e)=>e)).reverse()),I(a.rank===e.length,(()=>"Error in transpose: rank of input ".concat(a.rank," ")+"must match length of perm ".concat(e,"."))),e.forEach((t=>{I(t>=0&&t<a.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(a.rank-1)+" but got ".concat(e)))})),a.rank<=1)return a.clone();const s={x:a},o={perm:e};return"complex64"===a.dtype?So((()=>{let t=wl(a),e=cc(a);return t=io.runKernel(la,{x:t},o),e=io.runKernel(la,{x:e},o),n&&(e=yc(e)),yo(t,e)})):io.runKernel(la,s,o)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ru=xo({dropout_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,a){const s=mo(t,"x","dropout");if(I("float32"===s.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(s.dtype," tensor instead."))),I(e>=0&&e<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(e,"."))),0===e)return t instanceof Ms?s.clone():s;const o=function(t,e){if(null==e)return t.shape.slice();if(T(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let a=0;a<t.shape.length;a++)null==e[a]&&null!=t.shape[a]?n.push(t.shape[a]):n.push(e[a]);return n}return e}(s,n),r=1-e,i=dr(sc(ur(yl(o,0,1,"float32",a),r)),r);return pr(s,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iu=xo({conv2DBackpropFilter_:function(t,e,n,a,s,o="NHWC",r){let i=t;3===t.rank&&(i=Ur(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c=e;3===c.rank&&(c=Ur(e,[1,e.shape[0],e.shape[1],e.shape[2]])),I(4===i.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(i.shape,"."))),I(4===c.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(c.shape,"."))),I(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const l="NHWC"===o?i.shape[3]:i.shape[1],u="NHWC"===o?c.shape[3]:c.shape[1];I(l===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(l,") must ")+"match input depth in filter (".concat(n[2],"."))),I(u===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(u,") must ")+"match output depth for filter (".concat(n[3],")."))),Wr("conv2dDerFilter",s,r);const h={x:i,dy:c},d={strides:a,pad:s,dataFormat:o,dimRoundingMode:r,filterShape:n};return io.runKernel(Pt,h,d)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cu(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return pr(t,Kl(e));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function lu(t,e){let n=e;const a=Si(t.shape,e.shape);return a.length>0&&(n=Yi(n,a)),Ur(n,t.shape)}function uu(t,e,n,a){if("linear"===e)return t;if("relu"===e)return Il(t);if("elu"===e)return _i(t);if("relu6"===e)return Cl(t);if("prelu"===e)return jc(t,n);if("leakyrelu"===e)return dc(t,a);if("sigmoid"===e)return Kr(t);throw new Error("Unknown fused activation ".concat(e,"."))}const hu=(t,e)=>!(t>0)||"linear"===e;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const du=xo({fusedConv2d_:function({x:t,filter:e,strides:n,pad:a,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:r,bias:i,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:u}){if(c=c||"linear",!1===hu(io.state.gradientDepth,c)){I("NHWC"===s,(()=>"Error in fused conv2d: got dataFormat of ".concat(s," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let h=li(t,e,n,a,s,o,r);return null!=i&&(h=ur(h,i)),uu(h,c,l,u)}const h=mo(t,"x","conv2d","float32"),d=mo(e,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Ur(h,[1,h.shape[0],h.shape[1],h.shape[2]])),I(4===p.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(p.rank,"."))),I(4===d.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(d.rank,"."))),Wr("fused conv2d",a,r);const g="NHWC"===s?p.shape[3]:p.shape[1];I(d.shape[2]===g,(()=>"Error in conv2d: depth of input (".concat(g,") must match ")+"input depth for filter ".concat(d.shape[2],"."))),I(zr(n,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(o,"'")));const m=Rr(p.shape,d.shape,n,o,a,r);let b,x;if(null!=i&&(b=mo(i,"bias","fused conv2d"),[b]=to(b,h),"NHWC"===s?Ni(m.outShape,b.shape):(I(b.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(b.shape.length,"."))),I(0===b.shape.length||b.shape[0]===m.outChannels||1===b.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(b.shape,") is not ")+"compatible with the number of output channels "+"(".concat(m.outChannels,")"))))),null!=l){const t=l.shape;if(I(t.length<=1||3===t.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(t.length,"."))),1===t.length)I(1===t[0]||t[0]===m.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(t,") is not compatible with the number of output ")+"channels (".concat(m.outChannels,").")));else if(3===t.length)try{Ni(t,m.outShape)}catch(nM){const n="Error in fused conv2d: PReLU activation weights (".concat(t,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(m.outShape,").");throw Error(n)}x=mo(l,"prelu weights","fused conv2d")}const y=(t,e)=>{I("NHWC"===s,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(s," but only NHWC is currently supported.")));const[r,i,l,u]=e,h=cu(t,l,c);I(Mr(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const d=[hi(i.shape,h,r,n,a),iu(i,h,r.shape,n,a)];if(null!=u){const t=lu(u,h);d.push(t)}return d},k={x:p,filter:d,bias:b,preluActivationWeights:x},w={strides:n,pad:a,dataFormat:s,dilations:o,dimRoundingMode:r,activation:c,leakyreluAlpha:u};if(null==i){return xc(((t,e,n)=>{let a=io.runKernel(xa,k,w);return n([e,t,a]),f&&(a=Ur(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}}))(p,d)}return xc(((t,e,n,a)=>{let s=io.runKernel(xa,k,w);return a([e,t,s,n]),f&&(s=Ur(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,d,b)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pu=xo({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,a,s,o=[1,1],r){let i=t;3===t.rank&&(i=Ur(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c=e;3===c.rank&&(c=Ur(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:i,dy:c},u={strides:a,pad:s,dimRoundingMode:r,dilations:o,filterShape:n};return io.runKernel(Jt,l,u)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fu=xo({depthwiseConv2dNativeBackpropInput_:function(t,e,n,a,s,o=[1,1],r){let i=e,c=!1;3===e.rank&&(c=!0,i=Ur(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:i,filter:n},u={strides:a,pad:s,dimRoundingMode:r,dilations:o,inputShape:t},h=io.runKernel(Qt,l,u);return c?Ur(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gu=xo({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:a=!1,bias:s,activation:o="linear",preluActivationWeights:r,leakyreluAlpha:i=.2}){if(!1===hu(io.state.gradientDepth,o)){let c=jr(t,e,n,a);return null!=s&&(c=ur(c,s)),uu(c,o,r,i)}let c=mo(t,"a","fused matMul"),l=mo(e,"b","fused matMul");[c,l]=to(c,l);const u=n?c.shape[c.rank-2]:c.shape[c.rank-1],h=a?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?c.shape[c.rank-1]:c.shape[c.rank-2],p=a?l.shape[l.rank-2]:l.shape[l.rank-1],f=c.shape.slice(0,-2),g=l.shape.slice(0,-2),m=N(f),b=N(g);I(u===h,(()=>"Error in fused matMul: inner shapes (".concat(u,") and (")+"".concat(h,") of Tensors with shapes ").concat(c.shape," and ")+"".concat(l.shape," and transposeA=").concat(n)+" and transposeB=".concat(a," must match.")));const x=Ni(c.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),y=Ur(c,n?[m,u,d]:[m,d,u]),k=Ur(l,a?[b,p,h]:[b,h,p]);let w,v;null!=s&&(w=mo(s,"bias","fused matMul"),[w]=to(w,c),Ni(x,w.shape)),null!=r&&(v=mo(r,"prelu weights","fused matMul"));const C=(t,e)=>{const[r,i,c,l]=e,u=cu(Ur(t,c.shape),c,o);let h,d;if(n||a?!n&&a?(h=jr(u,i,!1,!1),d=jr(u,r,!0,!1)):n&&!a?(h=jr(i,u,!1,!0),d=jr(r,u,!1,!1)):(h=jr(i,u,!0,!0),d=jr(u,r,!0,!0)):(h=jr(u,i,!1,!0),d=jr(r,u,!0,!1)),null!=s){return[h,d,lu(l,u)]}return[h,d]},S={a:y,b:k,bias:w,preluActivationWeights:v},T={transposeA:n,transposeB:a,activation:o,leakyreluAlpha:i};if(null==s){return xc(((t,e,n)=>{const a=io.runKernel(ba,S,T);return n([t,e,a]),{value:Ur(a,x),gradFunc:C}}))(y,k)}return xc(((t,e,n,a)=>{const s=io.runKernel(ba,S,T);return a([t,e,s,n]),{value:Ur(s,x),gradFunc:C}}))(y,k,w)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mu=xo({cropAndResize_:function(t,e,n,a,s="bilinear",o=0){const r=mo(t,"image","cropAndResize"),i=mo(e,"boxes","cropAndResize","float32"),c=mo(n,"boxInd","cropAndResize","int32"),l=i.shape[0];I(4===r.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(r.rank,"."))),I(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(l,",4] ")+"but had shape ".concat(i.shape,"."))),I(1===c.rank&&c.shape[0]===l,(()=>"Error in cropAndResize: boxInd must be have size [".concat(l,"] ")+"but had shape ".concat(i.shape,"."))),I(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),I(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),I("bilinear"===s||"nearest"===s,(()=>"method must be bilinear or nearest, but was ".concat(s)));const u={image:r,boxes:i,boxInd:c},h={method:s,extrapolationValue:o,cropSize:a};return io.runKernel(qt,u,h)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bu=xo({flipLeftRight_:function(t){const e=mo(t,"image","flipLeftRight","float32");I(4===e.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(e.rank,".")));const n={image:e};return io.runKernel(ge,n,{})}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xu=xo({grayscaleToRGB_:function(t){const e=mo(t,"image","grayscaleToRGB"),n=e.rank-1,a=e.shape[n];I(e.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(e.rank,"."))),I(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const s=new Array(e.rank);return s.fill(1,0,n),s[n]=3,nc(e,s)}});
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yu=xo({rgbToGrayscale_:function(t){const e=mo(t,"image","RGBToGrayscale"),n=e.rank-1,a=e.shape[n];I(e.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(e.rank,"."))),I(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const s=e.dtype,o=cr(e,"float32"),r=Yl([.2989,.587,.114]);let i;switch(e.rank){case 2:i=Di("ij,j->i",o,r);break;case 3:i=Di("ijk,k->ij",o,r);break;case 4:i=Di("ijkl,l->ijk",o,r);break;case 5:i=Di("ijklm,m->ijkl",o,r);break;case 6:i=Di("ijklmn,n->ijklm",o,r);break;default:throw new Error("Not a valid tensor rank.")}return i=tc(i,-1),cr(i,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ku=xo({rotateWithOffset_:function(t,e,n=0,a=.5){const s=mo(t,"image","rotateWithOffset","float32");I(4===s.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(s.rank,".")));const o={image:s},r={radians:e,fillValue:n,center:a};return io.runKernel(ma,o,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wu(t,e,n,a,s,o){null==a&&(a=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==o&&(o=0);const r=t.shape[0];return n=Math.min(n,r),I(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),I(2===t.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(t.rank,"'"))),I(4===t.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(t.shape[1]))),I(1===e.rank,(()=>"scores must be a 1D tensor")),I(e.shape[0]===r,(()=>"scores has incompatible shape with boxes. Expected ".concat(r,", ")+"but was ".concat(e.shape[0]))),I(0<=o&&o<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(o,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:s,softNmsSigma:o}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vu=xo({nonMaxSuppression_:function(t,e,n,a=.5,s=Number.NEGATIVE_INFINITY){const o=mo(t,"boxes","nonMaxSuppression","float32"),r=mo(e,"scores","nonMaxSuppression","float32"),i=wu(o,r,n,a,s),c={maxOutputSize:n=i.maxOutputSize,iouThreshold:a=i.iouThreshold,scoreThreshold:s=i.scoreThreshold};return io.runKernel(nn,{boxes:o,scores:r},c)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iu(t,e,n){const a=function(t,e,n){return function(t,e,n){let a=0,s=t.length,o=0,r=!1;for(;a<s;){o=a+(s-a>>>1);const i=n(e,t[o]);i>0?a=o+1:(s=o,r=!i)}return r?a:-a-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t,e,n||Cu)}(t,e,n),s=a<0?-(a+1):a;t.splice(s,0,e)}function Cu(t,e){return t>e?1:t<e?-1:0}function Su(t,e,n,a,s){return Eu(t,e,n,a,s,0)}function Nu(t,e,n,a,s,o){return Eu(t,e,n,a,s,0,!1,o,!0)}function Tu(t,e,n,a,s,o){return Eu(t,e,n,a,s,o,!0)}function Eu(t,e,n,a,s,o,r=!1,i=!1,c=!1){const l=[];for(let m=0;m<e.length;m++)e[m]>s&&l.push({score:e[m],boxIndex:m,suppressBeginIndex:0});l.sort(Fu);const u=o>0?-.5/o:0,h=[],d=[];for(;h.length<n&&l.length>0;){const e=l.pop(),{score:n,boxIndex:o,suppressBeginIndex:r}=e;if(n<s)break;let i=!1;for(let c=h.length-1;c>=r;--c){const n=Ru(t,o,h[c]);if(n>=a){i=!0;break}if(e.score=e.score*Au(a,u,n),e.score<=s)break}e.suppressBeginIndex=h.length,i||(e.score===n?(h.push(o),d.push(e.score)):e.score>s&&Iu(l,e,Fu))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return r&&(g.selectedScores=d),c&&(g.validOutputs=p),g}function Ru(t,e,n){const a=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),o=Math.min(a[0],a[2]),r=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(s[0],s[2]),u=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(i-o)*(c-r),f=(h-l)*(d-u);if(p<=0||f<=0)return 0;const g=Math.max(o,l),m=Math.max(r,u),b=Math.min(i,h),x=Math.min(c,d),y=Math.max(b-g,0)*Math.max(x-m,0);return y/(p+f-y)}function Au(t,e,n){const a=Math.exp(e*n*n);return n<=t?a:0}function Fu(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Du=async function(t,e,n,a=.5,s=Number.NEGATIVE_INFINITY){const o=mo(t,"boxes","nonMaxSuppressionAsync"),r=mo(e,"scores","nonMaxSuppressionAsync"),i=wu(o,r,n,a,s);n=i.maxOutputSize,a=i.iouThreshold,s=i.scoreThreshold;const c=await Promise.all([o.data(),r.data()]),l=c[0],u=c[1],{selectedIndices:h}=Su(l,u,n,a,s);return o!==t&&o.dispose(),r!==e&&r.dispose(),Yl(h,"int32")};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _u=xo({nonMaxSuppressionWithScore_:function(t,e,n,a=.5,s=Number.NEGATIVE_INFINITY,o=0){const r=mo(t,"boxes","nonMaxSuppression"),i=mo(e,"scores","nonMaxSuppression"),c=wu(r,i,n,a,s,o),l={boxes:r,scores:i},u={maxOutputSize:n=c.maxOutputSize,iouThreshold:a=c.iouThreshold,scoreThreshold:s=c.scoreThreshold,softNmsSigma:o=c.softNmsSigma},h=io.runKernel(sn,l,u);return{selectedIndices:h[0],selectedScores:h[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ou=async function(t,e,n,a=.5,s=Number.NEGATIVE_INFINITY,o=0){const r=mo(t,"boxes","nonMaxSuppressionAsync"),i=mo(e,"scores","nonMaxSuppressionAsync"),c=wu(r,i,n,a,s,o);n=c.maxOutputSize,a=c.iouThreshold,s=c.scoreThreshold,o=c.softNmsSigma;const l=await Promise.all([r.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Tu(u,h,n,a,s,o);return r!==t&&r.dispose(),i!==e&&i.dispose(),{selectedIndices:Yl(d,"int32"),selectedScores:Yl(p)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lu=xo({nonMaxSuppressionPadded_:function(t,e,n,a=.5,s=Number.NEGATIVE_INFINITY,o=!1){const r=mo(t,"boxes","nonMaxSuppression"),i=mo(e,"scores","nonMaxSuppression"),c=wu(r,i,n,a,s,null),l={boxes:r,scores:i},u={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:o},h=io.runKernel(an,l,u);return{selectedIndices:h[0],validOutputs:h[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mu=async function(t,e,n,a=.5,s=Number.NEGATIVE_INFINITY,o=!1){const r=mo(t,"boxes","nonMaxSuppressionAsync"),i=mo(e,"scores","nonMaxSuppressionAsync"),c=wu(r,i,n,a,s,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,[d,p]=await Promise.all([r.data(),i.data()]),{selectedIndices:f,validOutputs:g}=Nu(d,p,l,u,h,o);return r!==t&&r.dispose(),i!==e&&i.dispose(),{selectedIndices:Yl(f,"int32"),validOutputs:Ki(g,"int32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zu=xo({resizeBilinear_:function(t,e,n=!1,a=!1){const s=mo(t,"images","resizeBilinear");I(3===s.rank||4===s.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(s.rank,"."))),I(2===e.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(e,"."))),I(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let o=s,r=!1;3===s.rank&&(r=!0,o=Ur(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},c={alignCorners:n,halfPixelCenters:a,size:e},l=io.runKernel(In,i,c);return r?Ur(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pu=xo({resizeNearestNeighbor_:function(t,e,n=!1,a=!1){const s=mo(t,"images","resizeNearestNeighbor");I(3===s.rank||4===s.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(s.rank,"."))),I(2===e.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(e,"."))),I("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),I(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let o=s,r=!1;3===s.rank&&(r=!0,o=Ur(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},c={alignCorners:n,halfPixelCenters:a,size:e},l=io.runKernel(wn,i,c);return r?Ur(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bu(t,e=!1){return io.tidy((()=>{I(2===t.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(t.shape.length,"D Tensor.")));const n=t.shape[0],a=t.shape[1];let s=ac(n),o=lr(t);const r=Zl([[1]],[1,1]);let i=lr(r);const c=n>=a?a:n;for(let t=0;t<c;++t){const e=o,c=i,l=s;[i,o,s]=io.tidy((()=>{const e=qr(o,[t,t],[n-t,1]),c=Ji(e),l=qr(o,[t,t],[1,1]),u=Ei(rc(l,0),Zl([[-1]]),Zl([[1]])),h=vc(l,pr(u,c)),d=dr(e,h);i=1===d.shape[0]?lr(r):Hr([r,qr(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=yc(dr(jr(u,h),c)),f=qr(o,[t,0],[n-t,a]),g=pr(p,i),m=ou(i);if(0===t)o=vc(f,jr(g,jr(m,f)));else{const e=vc(f,jr(g,jr(m,f)));o=Hr([qr(o,[0,0],[t,a]),e],0)}const b=ou(g),x=qr(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=vc(x,jr(jr(x,i),b));else{const e=vc(x,jr(jr(x,i),b));s=Hr([qr(s,[0,0],[n,t]),e],1)}return[i,o,s]})),No([e,c,l])}return!e&&n>a&&(s=qr(s,[0,0],[n,a]),o=qr(o,[0,0],[a,a])),[s,o]}))}const Wu={flipLeftRight:bu,grayscaleToRGB:xu,resizeNearestNeighbor:Pu,resizeBilinear:zu,rgbToGrayscale:yu,rotateWithOffset:ku,cropAndResize:mu,nonMaxSuppression:vu,nonMaxSuppressionAsync:Du,nonMaxSuppressionWithScore:_u,nonMaxSuppressionWithScoreAsync:Ou,nonMaxSuppressionPadded:Lu,nonMaxSuppressionPaddedAsync:Mu,threshold:xo({threshold_:function(t,e="binary",n=!1,a=.5){const s=mo(t,"image","threshold"),o=s.shape[0]*s.shape[1];let r,i,c,l,u=pr(Yl([a]),255);if(I(3===s.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(s.rank,"."))),I(3===s.shape[2]||1===s.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(s.shape[2],"."))),I("int32"===s.dtype||"float32"===s.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(s.dtype,"."))),I("otsu"===e||"binary"===e,(()=>"Method must be binary or otsu, but was ".concat(e))),3===s.shape[2]){[r,i,c]=Ul(s,[1,1,1],-1);const t=pr(r,.2989),e=pr(i,.587),n=pr(c,.114);l=ur(ur(t,e),n)}else l=t;if("otsu"===e){u=function(t,e){let n,a,s,o,r,i,c=Yl([-1]),l=Yl([0]),u=Yl([0]);for(let h=0;h<t.size-1;h++){n=qr(t,0,h+1),a=qr(t,h+1),r=dr(Yi(n),e),i=dr(Yi(a),e);const d=Yi(pr(n,kl(0,n.size)));s=dr(d,Yi(n));const p=ai(a.shape,n.size),f=ur(kl(0,a.size),p),g=pr(a,f);o=dr(Yi(g),Yi(a));const m=vc(s,o),b=vc(s,o),x=pr(r,i);u=pr(pr(x,m),b);const y=rc(u,l);l=Ei(y,u,l),c=Ei(y,Yl([h]),c)}return c}(ti(cr(Nl(l),"int32"),wo([]),256),o)}const h=n?fc(l,u):rc(l,u);return cr(pr(h,255),"int32")}}),transform:xo({transform_:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n="nearest",a="constant",s=0,o){const r=mo(t,"image","transform","float32"),i=mo(e,"transforms","transform","float32");I(4===r.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(r.rank,"."))),I(2===i.rank&&(i.shape[0]===r.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),I(null==o||2===o.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(o,".")));const c={image:r,transforms:i},l={interpolation:n,fillMode:a,fillValue:s,outputShape:o};return io.runKernel(ca,c,l)}})},Uu={bandPart:xo({bandPart_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const a=mo(t,"a","bandPart");I(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const s=a.shape,[o,r]=a.shape.slice(-2);let i,c;"number"==typeof e?(I(e%1==0,(()=>"bandPart(): numLower must be an integer, got ".concat(e,"."))),I(e<=o,(()=>"bandPart(): numLower (".concat(e,")")+" must not be greater than the number of rows (".concat(o,")."))),i=mo(e<0?o:e,"numLower","bandPart")):(I("int32"===e.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=Ei(pc(e,0),o,Lc(e,o))),"number"==typeof n?(I(n%1==0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),I(n<=r,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(r,")."))),c=mo(n<0?r:n,"numUpper","bandPart")):(I("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=Ei(pc(n,0),r,Lc(n,r)));const l=Ur(kl(0,o,1,"int32"),[-1,1]),u=kl(0,r,1,"int32"),h=vc(l,u),d=Sc(fc(h,i),ic(h,yc(c))),p=_c([o,r],a.dtype);return Ur(jl(au(Ur(a,[-1,o,r])).map((t=>Ei(d,t,p)))),s)}}),gramSchmidt:xo({gramSchmidt_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){let e;if(Array.isArray(t)){e=!1,I(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)I(t[e].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(t[e].shape[0]," vs. ").concat(n,")")))}else e=!0,t=Ul(t,t.shape[0],0).map((t=>Hl(t,[0])));I(t.length<=t[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(t.length,") exceeds ")+"number of dimensions (".concat(t[0].shape[0],").")));const n=[],a=t;for(let s=0;s<t.length;++s)n.push(io.tidy((()=>{let t=a[s];if(s>0)for(let e=0;e<s;++e){const a=pr(Yi(pr(n[e],t)),n[e]);t=vc(t,a)}return dr(t,Ji(t,"euclidean"))})));return e?jl(n,0):n}}),qr:xo({qr_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=!1){if(I(t.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(t.rank))),2===t.rank)return Bu(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),a=au(Ur(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],o=[];a.forEach((t=>{const[n,a]=Bu(t,e);s.push(n),o.push(a)}));return[Ur(jl(s,0),t.shape),Ur(jl(o,0),t.shape)]}}})},Vu=new Map,Gu=new Map;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hu{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class ju{constructor(){this.classNameMap={}}static getMap(){return null==ju.instance&&(ju.instance=new ju),ju.instance}static register(t){ju.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Ku(t,e,n){I(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),I("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),I(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===e&&(e="Custom"),void 0===n&&(n=t.className);const a=e+">"+n;return ju.register(t),Vu.set(a,t),Gu.set(t,a),t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qu extends Hu{minimize(t,e=!1,n){const{value:a,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return No(s),e?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){I(V(t),(()=>"The f passed in variableGrads(f) must be a function")),I(null==e||Array.isArray(e)&&e.every((t=>t instanceof Ps)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in io.registeredVariables)e.push(io.registeredVariables[t])}const a=n?e.filter((t=>!t.trainable)):null,s=e.length;I((e=e.filter((t=>t.trainable))).length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(s," variables is ")+"trainable."));const{value:o,grads:r}=io.gradients(t,e,null,!0);I(r.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),I(0===o.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(o.rank," tensor")));const i={};return e.forEach(((t,e)=>{null!=r[e]&&(i[t.name]=r[e])})),null!=a&&a.forEach((t=>i[t.name]=null)),{value:o,grads:i}}(t,e)}dispose(){null!=this.iterations_&&No(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ki(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(qu,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Xu extends qu{static get className(){return"Adadelta"}constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=io.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=io.registeredVariables[e],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(e,"/accum_grad"),variable:So((()=>Ri(a).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(e,"/accum_var"),variable:So((()=>Ri(a).variable(s)))});const o=Array.isArray(t)?t[n].tensor:t[e];if(null==o)return;const r=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;So((()=>{const t=ur(pr(r,this.rho),pr(Xi(o),1-this.rho)),e=pr(dr(qi(ur(i,this.epsilon)),qi(ur(r,this.epsilon))),o),n=ur(pr(i,this.rho),pr(Xi(e),1-this.rho));r.assign(t),i.assign(n);const s=ur(pr(e,-this.learningRate),a);a.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(No(this.accumulatedGrads.map((t=>t.variable))),No(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yu extends qu{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=io.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:"".concat(e,"/accumulator"),variable:So((()=>ai(a.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const o=this.accumulatedGrads[n].variable;So((()=>{const t=ur(o,Xi(s));o.assign(t);const e=ur(pr(dr(s,qi(ur(t,io.backend.epsilon()))),-this.learningRate),a);a.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&No(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zu extends qu{static get className(){return"Adam"}constructor(t,e,n,a=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],So((()=>{this.accBeta1=Ki(e).variable(),this.accBeta2=Ki(n).variable()})),null==a&&(this.epsilon=io.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);So((()=>{const n=vc(1,this.accBeta1),a=vc(1,this.accBeta2);e.forEach(((e,s)=>{const o=io.registeredVariables[e],r=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:"".concat(e,"/m"),variable:So((()=>Ri(o).variable(r)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:"".concat(e,"/v"),variable:So((()=>Ri(o).variable(r)))});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const c=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=ur(pr(c,this.beta1),pr(i,1-this.beta1)),h=ur(pr(l,this.beta2),pr(Xi(i),1-this.beta2)),d=dr(u,n),p=dr(h,a);c.assign(u),l.assign(h);const f=ur(pr(dr(d,ur(qi(p),this.epsilon)),-this.learningRate),o);o.assign(f)})),this.accBeta1.assign(pr(this.accBeta1,this.beta1)),this.accBeta2.assign(pr(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&No(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&No(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),So((()=>{this.accBeta1.assign(ji(this.beta1,this.iterations_+1)),this.accBeta2.assign(ji(this.beta2,this.iterations_+1))}));const e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ju extends qu{static get className(){return"Adamax"}constructor(t,e,n,a=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=a,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],So((()=>{this.iteration=Ki(0).variable(),this.accBeta1=Ki(e).variable()})),null==a&&(this.epsilon=io.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);So((()=>{const n=vc(1,this.accBeta1),a=dr(-this.learningRate,ur(pr(this.iteration,this.decay),1));e.forEach(((e,s)=>{const o=io.registeredVariables[e],r=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:"".concat(e,"/m"),variable:Ri(o).variable(r)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:"".concat(e,"/v"),variable:Ri(o).variable(r)});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const c=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=ur(pr(c,this.beta1),pr(i,1-this.beta1)),h=pr(l,this.beta2),d=fr(i),p=Fc(h,d);c.assign(u),l.assign(p);const f=ur(pr(dr(a,n),dr(u,ur(p,this.epsilon))),o);o.assign(f)})),this.iteration.assign(ur(this.iteration,1)),this.accBeta1.assign(pr(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&No(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&No(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qu extends qu{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=io.registeredVariables[e];So((()=>{const t=ur(pr(this.c,a),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=To(Ki(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $u extends Qu{static get className(){return"Momentum"}constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Ki(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=io.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:"".concat(e,"/momentum"),variable:So((()=>Ri(a).variable(t)))}}const s=this.accumulations[n].variable,o=Array.isArray(t)?t[n].tensor:t[e];null!=o&&So((()=>{let t;const e=ur(pr(this.m,s),o);t=this.useNesterov?ur(pr(this.c,ur(o,pr(e,this.m))),a):ur(pr(this.c,e),a),s.assign(e),a.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&No(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class th extends qu{static get className(){return"RMSProp"}constructor(t,e=.9,n=0,a=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==a&&(this.epsilon=io.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=io.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(e,"/rms"),variable:So((()=>Ri(a).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(e,"/momentum"),variable:So((()=>Ri(a).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(e,"/mg"),variable:So((()=>Ri(a).variable(s)))});const o=Array.isArray(t)?t[n].tensor:t[e];if(null==o)return;const r=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;So((()=>{const t=ur(pr(r,this.decay),pr(Xi(o),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=ur(pr(e,this.decay),pr(o,1-this.decay)),c=dr(pr(o,this.learningRate),qi(vc(t,ur(Xi(s),this.epsilon)))),l=ur(pr(i,this.momentum),c);r.assign(t),e.assign(s),i.assign(l);const u=vc(a,l);a.assign(u)}else{const t=ur(pr(r,this.decay),pr(Xi(o),1-this.decay)),e=ur(pr(i,this.momentum),dr(pr(o,this.learningRate),qi(ur(t,this.epsilon))));r.assign(t),i.assign(e);const n=vc(a,e);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&No(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&No(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&No(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eh=[Xu,Yu,Zu,Ju,$u,th,Qu];
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let nh,ah=!1;async function sh(t,e){let n=mo(t,"img","toPixels");if(!(t instanceof Ms)){const t=n;n=cr(t,"int32"),t.dispose()}!function(t){if(2!==t.rank&&3!==t.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(t.rank,"."));const e=2===t.rank?1:t.shape[2];if(e>4||2===e)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(e));if("float32"!==t.dtype&&"int32"!==t.dtype)throw new Error("Unsupported type for toPixels: ".concat(t.dtype,".")+" Please use float32 or int32 tensors.")}(n);const[a,s]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2],r=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(s*a*4);for(let l=0;l<a*s;++l){const t=[0,0,0,255];for(let a=0;a<o;a++){const e=r[l*o+a];if("float32"===n.dtype){if(e<0||e>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(e,"."))}else if("int32"===n.dtype&&(e<0||e>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(e,"."));1===o?(t[0]=e*i,t[1]=e*i,t[2]=e*i):t[a]=e*i}const e=4*l;c[e+0]=Math.round(t[0]),c[e+1]=Math.round(t[1]),c[e+2]=Math.round(t[2]),c[e+3]=Math.round(t[3])}if(null!=e){if(!ah){null!=Ia(ae,io.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),ah=!0)}e.width=s,e.height=a;const t=e.getContext("2d"),n=new ImageData(c,s,a);t.putImageData(n,0,0)}return n!==t&&n.dispose(),c}const oh=xo({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,s=!1,o=!1,r=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)a=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)o=!0;else if(null!=t.getContext)r=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(t.constructor.name));i=!0}if(null!=Ia(ga,io.backendName)){const n={pixels:t},a={numChannels:e};return io.runKernel(ga,n,a)}const[c,l]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let u,h;if(r)u=t.getContext("2d").getImageData(0,0,c,l).data;else if(a||n)u=t.data;else if(o||s||i){if(null==nh)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");nh=new OffscreenCanvas(1,1).getContext("2d")}else nh=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});nh.canvas.width=c,nh.canvas.height=l,nh.drawImage(t,0,0,c,l),u=nh.getImageData(0,0,c,l).data}if(4===e)h=new Int32Array(u);else{const t=c*l;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=u[4*n+t]}return function(t,e,n){if(S(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const a=po(t,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ko(t,e,a,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(h,[l,c,e],"int32")}});function rh(t,e){const n=t.shape.length,a=e.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==e.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(e.shape[a-1]," vs. ").concat(n));if(0===N(t.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(t.shape,"."));const s=e.shape,o=s[s.length-1];let r=1;for(let h=0;h<s.length-1;++h)r*=s[h];const i=t.shape,c=s.slice();c.pop();let l=1;for(let h=o;h<n;++h)l*=i[h],c.push(i[h]);const u=[...H(t.shape).map((t=>t/l)),1].slice(0,o);return[c,r,l,u]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ih=-2,ch=-1;function lh(t,e,n){const a=t.shape.length;I(a===e.length,(()=>"Error in slice".concat(a,"D: Length of begin ").concat(e," must ")+"match the rank of the array (".concat(a,")."))),I(a===n.length,(()=>"Error in slice".concat(a,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(a,").")));for(let s=0;s<a;++s)I(e[s]+n[s]<=t.shape[s],(()=>"Error in slice".concat(a,"D: begin[").concat(s,"] + size[").concat(s,"] ")+"(".concat(e[s]+n[s],") would overflow input.shape[").concat(s,"] (").concat(t.shape[s],")")))}function uh(t,e,n){const a=[];for(let s=0;s<t.length;s++)a[s]=Math.ceil((e[s]-t[s])/n[s]);return a}function hh(t,e,n,a){const s=[...t];for(let o=s.length;o<a.length;o++)s.push(1);for(let o=0;o<n;o++)0===o?s[e]=1:(s.splice(e,0,1),s.pop());return s}function dh(t,e,n){return n<=t?n:n-(e-1)}function ph(t,e){const n=[];for(let a=0;a<t;a++)n.push(e+a);return n}function fh(t,e,n,a,s){const o=[...s],r=ph(n,e);for(let i=0;i<o.length;i++)if(r.indexOf(i)>-1)o[i]=0;else{const s=dh(e,n,i);let r=a[s];t&1<<s&&(r=0),o[i]=r}return o}function gh(t,e,n,a,s){const o=[...s],r=ph(n,e);for(let i=0;i<o.length;i++)if(r.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const s=dh(e,n,i);let r=a[s];t&1<<s&&(r=Number.MAX_SAFE_INTEGER),o[i]=r}for(let i=0;i<o.length;i++){const t=s[i];o[i]<0&&(o[i]+=t),o[i]=k(0,o[i],s[i])}return o}function mh(t,e,n){let a=t[e];return(n&1<<e||null==a)&&(a=1),a}function bh(t,e,n,a,s,o){let r=e[s];const i=n[s]||1;(t&1<<s||o&1<<s||null==r)&&(r=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[s];return r<0&&(r+=c),r=k(0,r,c-1),r}function xh(t,e,n,a,s,o){let r=e[s];const i=n[s]||1;(t&1<<s||o&1<<s||null==r)&&(r=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[s];return r<0&&(r+=c),r=i>0?k(0,r,c):k(-1,r,c-1),r}function yh(t,e,n){let a=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){a=s;break}for(let s=a+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function kh(t,e){let n=t.length>0?t[t.length-1]:1;for(let a=0;a<t.length-1;a++)n+=t[a]*e[a];return n}function wh(t,e,n){let a;const s=t.shape.length;let o;return a="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),a.forEach((t=>{I(-1!==t,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map(((e,n)=>e>=0?e:(I(-1===e,(()=>"Negative size values should be exactly -1 but got "+"".concat(e," for the slice() size at index ").concat(n,"."))),t.shape[n]-a[n]))),[a,o]}function vh(t,e,n,a,s,o,r,i,c){let l;if(null==a?(l=new Array(e.length),l.fill(1)):l=a,null!=r&&r&r-1)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:o,ellipsisMask:r,newAxisMask:i,shrinkAxisMask:c};for(let x=0;x<h.dims;x++)u&&1<<x&i&&h.numAddAxisAfterEllipsis++,1<<x&r&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let a=0;a<t.dims;a++)if(1<<a&t.ellipsisMask){const s=Math.min(e.dims-(t.dims-a)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<s;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&t.newAxisMask)e.finalShapeGatherIndices.push(ih),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(e.dims," dims, ").concat(e.begin.length,"."));null!=t.begin&&(e.begin[n]=t.begin[a]),null!=t.end&&(e.end[n]=t.end[a]),e.strides[n]=t.strides[a],t.beginMask&1<<a&&(e.beginMask|=1<<n),t.endMask&1<<a&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<a?(e.finalShapeGatherIndices.push(ch),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(a)),e.inputShapeGatherIndicesSparse[n]=a,n++}}(h,d);let p=!0,f=!0,g=!0;const m=[],b=[];for(let x=0;x<t.length;++x){if(0===d.strides[x])throw Error("strides[".concat(x,"] must be non-zero"));const e=!!(d.shrinkAxisMask&1<<x),n=t[x];if(-1===n){m.push(e?1:-1);continue}const a=[d.beginMask&1<<x,d.endMask&1<<x],s=[d.strides[x]>0?0:-1,d.strides[x]>0?n:n-1];if(e&&d.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[x];const o=!!(d.beginMask&1<<x&&d.endMask&1<<x);if(d.beginValid&&d.endValid){if(e){const t=d.begin[x]<0?n+d.begin[x]:d.begin[x];if(d.begin[x]=t,d.end[x]=d.begin[x]+1,t<0||t>=n)throw Error("slice index ".concat(d.begin[x]," of dimension ").concat(x," out of bounds."))}else d.begin[x]=Ih(d.begin[x],0,d.strides[x],n,a,s),d.end[x]=Ih(d.end[x],1,d.strides[x],n,a,s);const t=1===d.strides[x]&&0===d.begin[x]&&d.end[x]===n;p=p&&t,f=f&&(0===x&&1===d.strides[x]||t)}else p=p&&1===d.strides[x]&&o,f=f&&(0===x&&1===d.strides[x]||o);let r,i=!1;if(d.beginValid&&d.endValid?(r=d.end[x]-d.begin[x],i=!0):e?(r=1,i=!0):o&&n>=0&&(r=d.strides[x]<0?-n:n,i=!0),i){let t;t=0===r||r<0!=d.strides[x]<0?0:Math.trunc(r/d.strides[x])+(r%d.strides[x]!=0?1:0),m.push(t)}else m.push(-1)}for(let x=0;x<d.finalShapeGatherIndices.length;++x){const t=d.finalShapeGatherIndices[x];t>=0?b.push(m[t]):t===ih&&b.push(1)}return{finalShapeSparse:b.filter(((t,e)=>d.finalShapeGatherIndices[e]!==ih)),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function Ih(t,e,n,a,s,o){if(s[e])return n>0?o[e]:o[e+1&1];{const e=t<0?a+t:t;return e<o[0]?o[0]:e>o[1]?o[1]:e}}const Ch=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:lh,computeFlatOffset:kh,computeOutShape:uh,getNormalizedAxes:function(t,e,n,a,s,o,r,i,c){const l=t.length;let u=new Array(l),h=new Array(l),d=new Array(l);if(e.length&&n>0){const c=e[0],l=n+1;u=fh(r,c,l,a,t),h=gh(i,c,l,s,t),d=hh(o,c,l,t)}else for(let p=0;p<l;p++)u[p]=bh(r,a,o,t,p,c),h[p]=xh(i,s,o,t,p,c),d[p]=mh(o,p,c);return{begin:u,end:h,strides:d}},isSliceContinous:yh,maskToAxes:function(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e},parseSliceParams:wh,sliceInfo:vh,startForAxis:bh,startIndicesWithElidedDims:fh,stopForAxis:xh,stopIndicesWithElidedDims:gh,stridesForAxis:mh,stridesWithElidedDims:hh},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Sh=class{static sgd(t){return new Qu(t)}static momentum(t,e,n=!1){return new $u(t,e,n)}static rmsprop(t,e=.9,n=0,a=null,s=!1){return new th(t,e,n,a,s)}static adam(t=.001,e=.9,n=.999,a=null){return new Zu(t,e,n,a)}static adadelta(t=.001,e=.95,n=null){return new Xu(t,e,n)}static adamax(t=.002,e=.9,n=.999,a=null,s=0){return new Ju(t,e,n,a,s)}static adagrad(t,e=.1){return new Yu(t,e)}},Nh="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Th(){return new Promise((t=>Nh((()=>t()))))}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eh(t,e){const n=t[0].length;t.forEach(((t,e)=>{I(t.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(e,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),I(e>=0&&e<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=t[0];t.forEach(((t,s)=>{for(let o=0;o<n;o++)I(o===e||t[o]===a[o],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(s,"] (").concat(t,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(s,".")))}))}function Rh(t,e){const n=t[0].slice();for(let a=1;a<t.length;a++)n[e]+=t[a][e];return n}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ah,Fh;function Dh(t,e,n){let a=new Array;if(null==n&&null==e)return a;if(null==e)for(;a.length<t+n.length;)a.push(-1);else a=e.slice();if(null==n)return a;if(t+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(e," are incompatible: rt input.rank = ").concat(t+n.length,", but shape.rank = ").concat(a.length));for(let s=1;s<n.length;++s){const o=n[s],r=a[a.length-n.length+s],i=a[r];if(o>=0)if(i>=0){if(i!==o)throw new Error("rt input.shape and shape=".concat(e," are incompatible: rt input.shape[").concat(s+t,"] = ").concat(o," but shape[").concat(s+t,"] = ").concat(i))}else a[r]=o}return a}function _h(t){const e={FIRST_DIM_SIZE:Ah.FIRST_DIM_SIZE,VALUE_ROWIDS:Ah.VALUE_ROWIDS,ROW_LENGTHS:Ah.ROW_LENGTHS,ROW_SPLITS:Ah.ROW_SPLITS,ROW_LIMITS:Ah.ROW_LIMITS,ROW_STARTS:Ah.ROW_STARTS},n=[];for(const a of t){if(!(a in e))break;n.push(e[a])}return n}function Oh(t){return 0===t.length?0:t[0]===Ah.FIRST_DIM_SIZE?t.length-1:t.length}function Lh(t,e){if(null==t||null==e)return;const n=t.length,a=e.length;if(n>=a)throw new Error("defaultValue.shape=".concat(t," and ragged tensor flatValues.shape=").concat(e,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let s=0;s<Math.min(n,a-1);++s){const n=t[s],a=e[s+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(t,", and ragged tensor input flatValues.shape=").concat(e," are incompatible: defaultValue.shape[").concat(s-t.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(s-t.length,"] = ").concat(a))}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(Fh=Ah||(Ah={}))[Fh.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",Fh[Fh.VALUE_ROWIDS=1]="VALUE_ROWIDS",Fh[Fh.ROW_LENGTHS=2]="ROW_LENGTHS",Fh[Fh.ROW_SPLITS=3]="ROW_SPLITS",Fh[Fh.ROW_LIMITS=4]="ROW_LIMITS",Fh[Fh.ROW_STARTS=5]="ROW_STARTS";const Mh=30;function zh(t){return t<=Mh?t:G(t,Math.floor(Math.sqrt(t)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ph(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bh(t,e,n,a=!0){let s=[];if(a)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let a=0;a<n;++a)s=s.concat([t[a+1]/e[a],e[a]]);s=s.concat(t.slice(n+1))}return s}function Wh(t,e,n=!0){const a=[];if(n){a.push(e);for(let n=e+1;n<t;++n)n<=2*e?(a.push(n),a.push(n-(e+1))):a.push(n)}else{const n=[],s=[];for(let a=1;a<t;++a)a>=2*e+1||a%2==1?s.push(a):n.push(a);a.push(...n),a.push(0),a.push(...s)}return a}function Uh(t,e,n,a=!0){const s=[];a?s.push(t[0]/n):s.push(t[0]*n);for(let o=1;o<t.length;++o)o<=e.length?a?s.push(e[o-1]*t[o]):s.push(t[o]/e[o-1]):s.push(t[o]);return s}function Vh(t,e){const n=[0];for(let a=0;a<e;++a)n.push(t[a][0]);return n}function Gh(t,e,n){const a=t.slice(0,1);for(let s=0;s<n;++s)a.push(t[s+1]-e[s][0]-e[s][1]);return a}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hh=1.7580993408473768,jh=1.0507009873554805,Kh=.3275911,qh=.254829592,Xh=-.284496736,Yh=1.421413741,Zh=-1.453152027,Jh=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qh(t,e){if(t.length!==e.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(t.length,", imag: ").concat(e.length,"."));const n=new Float32Array(2*t.length);for(let a=0;a<n.length;a+=2)n[a]=t[a/2],n[a+1]=e[a/2];return n}function $h(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let a=0;a<t.length;a+=2)e[a/2]=t[a],n[a/2]=t[a+1];return{real:e,imag:n}}function td(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),a=new Float32Array(e);for(let s=0;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],a[Math.floor(s/4)]=t[s+1];return{real:n,imag:a}}function ed(t){const e=Math.floor(t.length/4),n=new Float32Array(e),a=new Float32Array(e);for(let s=2;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],a[Math.floor(s/4)]=t[s+1];return{real:n,imag:a}}function nd(t,e){return{real:t[2*e],imag:t[2*e+1]}}function ad(t,e,n,a){t[2*a]=e,t[2*a+1]=n}function sd(t,e){const n=new Float32Array(t/2),a=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const o=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(o),a[s]=Math.sin(o)}return{real:n,imag:a}}function od(t,e,n){const a=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(a),imag:Math.sin(a)}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rd="->",id=/->/g,cd=",",ld="...";function ud(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(id,"").length)/rd.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(rd,'").'));const[a,s]=t.split(rd);I(-1===a.indexOf(ld),(()=>'The ellipsis notation ("'.concat(ld,'") is not supported yet.')));const o=a.split(cd),r=o.length;if(e!==r)throw new Error("Expected ".concat(r," input tensors, received ").concat(e));if(r>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<s.length;++h){const t=s[h];if(!o.some((e=>-1!==e.indexOf(t))))throw new Error("Output subscripts contain the label ".concat(t," ")+"not present in the input subscripts.");-1===i.indexOf(t)&&i.push(t)}for(let h=0;h<a.length;++h){const t=a[h];-1===i.indexOf(t)&&t!==cd&&i.push(t)}const c=new Array(o.length);for(let h=0;h<r;++h){if(new Set(o[h].split("")).size!==o[h].length)throw new Error("Found duplicate axes in input component ".concat(o[h],". ")+"Support for duplicate axes in input is not implemented yet.");c[h]=[];for(let t=0;t<o[h].length;++t)c[h].push(i.indexOf(o[h][t]))}const l=i.length,u=[];for(let h=s.length;h<l;++h)u.push(h);return{allDims:i,summedDims:u,idDims:c}}function hd(t,e){let n=new Array(t);n.fill(-1);for(let s=0;s<e.length;++s)n[e[s]]=s;const a=[];for(let s=0;s<t;++s)-1===n[s]&&a.push(s);return n=n.filter((t=>-1!==t)),{permutationIndices:n,expandDims:a}}function dd(t,e,n){const a=new Array(t);for(let s=0;s<n.length;++s){const t=n[s].shape;for(let n=0;n<e[s].length;++n)void 0===a[e[s][n]]?a[e[s][n]]=t[n]:I(a[e[s][n]]===t[n],(()=>"Expected dimension ".concat(a[e[s][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(t),", ")+"but got dimension ".concat(t[n])))}}function pd(t,e){const n=t,a=[];let s=0;0===t.length&&n.push(-1),s=t.length+1;for(let r=0;r<s;++r)a.push([]);const o=[];for(let r=0;r<n.length;++r){const t=gd(e,n[r]);for(const e of t)-1===o.indexOf(e)&&(a[r].push(e),o.push(e))}return{path:n,steps:a}}function fd(t){return t.every(((t,e)=>t===e))}function gd(t,e){const n=[];for(let a=0;a<t.length;++a)0!==t[a].length&&-1===t[a].indexOf(e)&&-1!==e||n.push(a);return n}function md(t,e,n=0){let a=[];if("number"==typeof e)I(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(e).fill(t.shape[n]/e);else{I(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const a=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-a}I(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=e}return a}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bd(t){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(t)}function xd(t,e){return"indices(".concat(t,", 0) is invalid: ").concat(e," < 0")}function yd(t,e,n){return"indices(".concat(t,", 0) is invalid: ").concat(e," >= ").concat(n)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kd(t,e){return"only one output dimension may be -1, not both ".concat(t," and ").concat(e)}function wd(t,e){return"size ".concat(t," must be non-negative, not ").concat(e)}function vd(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Id(t,e){const n=N(t),a=N(e);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(t," outputShape= ").concat(e)}function Cd(t,e){const n=N(t),a=N(e);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(t," outputShape=").concat(e)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sd(){return"segment ids must be >= 0"}function Nd(){return"segment ids are not increasing"}function Td(t,e){return"Segment id ".concat(t," out of range [0, ").concat(e,"), possibly because segmentIds input is not sorted.")}function Ed(t,e,n){return"Bad: indices[".concat(t,"] == ").concat(e," out of range [0, ").concat(n,")")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rd(t,e){let n,a=!1;for(t<=Mh?(n=t,a=!0):n=G(t,Math.floor(Math.sqrt(t)));!a;)n>e||n===t?a=!0:n=G(t,n+1);return n}function Ad(t,e,n){const a=[],s=t.length;for(let o=0;o<s;o++)o!==e?a.push(t[o]):a.push(n);return a}function Fd(t,e,n,a){const s=e.shape.length,o=t.shape.length;if(0!==a&&(a<-s||a>s))throw new Error("Expect batchDims in the range of [-".concat(s,", ").concat(s,"], but got ").concat(a));if(a<0&&(a+=s),a>o)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(o,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let h=0;h<a;++h)if(t.shape[h]!==e.shape[h])throw new Error("x.shape[".concat(h,"]: ").concat(t.shape[h]," should be equal to indices.shape[").concat(h,"]: ").concat(e.shape[h],"."));const r=t.shape[n],i=[];let c=1,l=1,u=1;for(let h=0;h<a;++h)i.push(t.shape[h]),c*=t.shape[h];for(let h=a;h<n;h++)i.push(t.shape[h]),l*=t.shape[h];for(let h=a;h<s;h++)i.push(e.shape[h]);for(let h=n+1;h<o;h++)i.push(t.shape[h]),u*=t.shape[h];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:r,outputShape:i}}const Dd=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Fd,computeOutShape:Ad,segOpComputeOptimalWindowSize:Rd},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _d(t){try{return t.map((t=>ys(t)))}catch(aM){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(aM))}}function Od(t){return t.map((t=>xs(t)))}const Ld=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:qh,ERF_A2:Xh,ERF_A3:Yh,ERF_A4:Zh,ERF_A5:Jh,ERF_P:Kh,PARALLELIZE_THRESHOLD:Mh,get RowPartitionType(){return Ah},SELU_SCALE:jh,SELU_SCALEALPHA:Hh,applyActivation:uu,assertAndGetBroadcastShape:Ni,assertAxesAreInnerMostDims:Bi,assertParamsConsistent:Eh,assignToTypedArray:ad,axesAreInnerMostDims:Li,calculateShapes:Ql,checkEinsumDimSizes:dd,checkPadOnDimRoundingMode:Wr,combineLocations:Mi,combineRaggedTensorToTensorShapes:Dh,complexWithEvenIndex:td,complexWithOddIndex:ed,computeConv2DInfo:Rr,computeConv3DInfo:Ar,computeDefaultPad:Fr,computeDilation2DInfo:Nr,computeOptimalWindowSize:zh,computeOutAndReduceShapes:zi,computeOutShape:Rh,computePool2DInfo:Tr,computePool3DInfo:Er,convertConv2DDataFormat:Br,decodeEinsumEquation:ud,eitherStridesOrDilationsAreOne:zr,expandShapeToKeepDim:Pi,exponent:od,exponents:sd,fromStringArrayToUint8:Od,fromUint8ToStringArray:_d,getAxesPermutation:Wi,getBroadcastDims:Ci,getComplexWithIndex:nd,getEinsumComputePath:pd,getEinsumPermutation:hd,getFusedBiasGradient:lu,getFusedDyActivation:cu,getImageCenter:Ph,getInnerMostAxes:Vi,getPermuted:Wh,getRaggedRank:Oh,getReductionAxes:Si,getReshaped:Bh,getReshapedPermuted:Uh,getRowPartitionTypesHelper:_h,getSliceBeginCoords:Vh,getSliceSize:Gh,getSparseFillEmptyRowsIndicesDenseShapeMismatch:bd,getSparseFillEmptyRowsNegativeIndexErrorMessage:xd,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:yd,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:vd,getSparseReshapeInputOutputMismatchErrorMessage:Cd,getSparseReshapeInputOutputMultipleErrorMessage:Id,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:kd,getSparseReshapeNegativeOutputDimErrorMessage:wd,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:Ed,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Sd,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:Nd,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:Td,getUndoAxesPermutation:Ui,isIdentityPermutation:fd,log:function(...t){at().getBool("IS_TEST")||at().getBool("PROD")||console.log(...t)},mergeRealAndImagArrays:Qh,prepareAndValidate:rh,prepareSplitSize:md,segment_util:Dd,shouldFuse:hu,slice_util:Ch,splitRealAndImagArrays:$h,stridesOrDilationsArePositive:Pr,tupleValuesAreOne:Mr,upcastType:Zs,validateDefaultValueShape:Lh,validateInput:function(t,e,n){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if(t.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(e.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: ".concat(e.shape));if(0===t.size)throw new Error("Updates specified for empty output. updates shape: ".concat(t.shape))}Jl(n,e,t)},validateUpdateShape:Jl,warn:ka},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */!function(){for(const t of eh)Ku(t)}();
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Md={kernelName:ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pr(t,Kl(cr(n,"float32"),-1))}}},zd={kernelName:lt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Xi(cr(n,"float32")),a=qi(vc(Ki(1),e));return yc(dr(t,a))}}}},Pd={kernelName:ut,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=qi(vc(Xi(cr(n,"float32")),1));return dr(t,e)}}}},Bd={kernelName:ht,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=Ni(n.shape,a.shape);return{a:()=>{let e=t;const a=Si(n.shape,s);return a.length>0&&(e=Yi(e,a)),Ur(e,n.shape)},b:()=>{let e=t;const n=Si(a.shape,s);return n.length>0&&(e=Yi(e,n)),Ur(e,a.shape)}}}},Wd={kernelName:dt,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,a)=>{n[a]=()=>t.clone()})),n}},Ud={kernelName:gt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(n)}}},Vd={kernelName:mt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(n)}}},Gd={kernelName:bt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dr(t,qi(vc(Ki(1),Xi(cr(n,"float32")))))}}},Hd={kernelName:xt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=qi(ur(Ki(1),Xi(cr(n,"float32"))));return dr(t,e)}}}},jd={kernelName:wt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=Ni(n.shape,a.shape);return{a:()=>{const e=ur(Xi(n),Xi(a));let o=pr(t,dr(a,e));const r=Si(n.shape,s);return r.length>0&&(o=Yi(o,r)),Ur(o,n.shape)},b:()=>{const e=ur(Xi(n),Xi(a));let o=yc(pr(t,dr(n,e)));const r=Si(a.shape,s);return r.length>0&&(o=Yi(o,r)),Ur(o,a.shape)}}}},Kd={kernelName:yt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dr(t,ur(Xi(cr(n,"float32")),1))}}},qd={kernelName:kt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dr(t,vc(Ki(1),Xi(cr(n,"float32"))))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xd=xo({avgPool3dGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,a,s,o){const r=mo(t,"dy","avgPool3dGrad"),i=mo(e,"input","avgPool3dGrad");let c=r,l=i,u=!1;4===i.rank&&(u=!0,c=Ur(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]),l=Ur(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),I(5===c.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(c.rank,"."))),I(5===l.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,"."))),Wr("avgPool3dGrad",s,o);const h={dy:c,input:l},d={filterSize:n,strides:a,pad:s,dimRoundingMode:o},p=io.runKernel(St,h,d);return u?Ur(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Yd={kernelName:Ct,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:s,strides:o,pad:r,dimRoundingMode:i}=n;return{x:()=>Xd(t,a,s,o,r,i)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zd=xo({avgPoolGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,a,s){const o=mo(t,"dy","avgPoolGrad"),r=mo(e,"input","avgPoolGrad");I(r.rank===o.rank,(()=>"Rank of input (".concat(r.rank,") does not match rank of dy (").concat(o.rank,")")));let i=r,c=o,l=!1;3===r.rank&&(l=!0,i=Ur(r,[1,r.shape[0],r.shape[1],r.shape[2]]),c=Ur(o,[1,o.shape[0],o.shape[1],o.shape[2]])),I(4===c.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),I(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const u={dy:c,input:i},h={filterSize:n,strides:a,pad:s},d=io.runKernel(It,u,h);return l?Ur(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Jd={kernelName:vt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:s,strides:o,pad:r}=n;return{x:()=>Zd(t,a,s,o,r)}}},Qd={kernelName:Nt,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[a,s]=e,{transposeA:o,transposeB:r}=n;return o||r?!o&&r?{a:()=>jr(t,s,!1,!1),b:()=>jr(t,a,!0,!1)}:o&&!r?{a:()=>jr(s,t,!1,!0),b:()=>jr(a,t,!1,!1)}:{a:()=>jr(s,t,!0,!0),b:()=>jr(t,a,!0,!0)}:{a:()=>jr(t,s,!1,!0),b:()=>jr(a,t,!0,!1)}}},$d={kernelName:Tt,gradFunc:(t,e,n)=>{const{blockShape:a,crops:s}=n;return{x:()=>Gc(t,a,s)}}},tp={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const a=n,s=a.inputShape,o=a.shape,r=Array.from(o);for(let c=s.length-1;c>=0;c--)if(s[c]===o[c])r[c]=1;else if(1!==s[c])throw new Error("broadcastTo(): [".concat(s,"] cannot be broadcast to [").concat(o,"]."));const i=[];for(let c=0;c<r.length;c++)r[c]>1&&i.push(c);return{x:()=>Yi(t,i,!0)}}},ep={kernelName:Ft,gradFunc:t=>({x:()=>t.clone()})},np={kernelName:Dt,gradFunc:t=>({x:()=>Ri(t)})},ap={kernelName:_t,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{clipValueMin:s,clipValueMax:o}=n;return{x:()=>Ei(Sc(ic(a,s),fc(a,o)),t,Ri(t))}}},sp={kernelName:Lt,inputsToSave:["x"],gradFunc:Md.gradFunc},op={kernelName:Mt,saveAllInputs:!0,gradFunc:(t,e,n)=>{const a=e.map((t=>t.shape)),{axis:s}=n,o=_(s,e[0].shape)[0],r=a.map((t=>t[o]));return Ul(t,r,o).map((t=>()=>t))}},rp={kernelName:zt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,s]=e,{dilations:o,strides:r,pad:i,dataFormat:c}=n;return I(Mr(o),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'"))),{x:()=>hi(a.shape,t,s,r,i,c),filter:()=>iu(a,t,s.shape,r,i,c)}}},ip={kernelName:Bt,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[a,s]=e,{strides:o,pad:r,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>li(t,s,o,r,i,1,c),filter:()=>iu(t,a,s.shape,o,r,i,c)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cp=xo({conv3DBackpropFilter_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,a,s){let o=t;4===t.rank&&(o=Ur(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let r=e;4===r.rank&&(r=Ur(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),I(5===o.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(o.shape,"."))),I(5===r.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(r.shape,"."))),I(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),I(o.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(o.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),I(r.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(r.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:o,dy:r},c={strides:a,pad:s,filterShape:n};return io.runKernel(Ut,i,c)}}),lp={kernelName:Wt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:s,pad:o}=n;I(Mr(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[r,i]=e;return{x:()=>fi(r.shape,t,i,s,o),filter:()=>cp(r,t,i.shape,s,o)}}},up={kernelName:Gt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pr(yc(Fl(cr(n,"float32"))),t)}}},hp={kernelName:Ht,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pr(Dl(cr(n,"float32")),t)}}},dp={kernelName:Kt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:s,exclusive:o,reverse:r}=n;return{x:()=>{const e=Wi([s],a.rank);let n=yi(t,s,o,!r);return null!=e&&(n=ou(n,e)),n}}}},pp={kernelName:Zt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:s,pad:o,dimRoundingMode:r}=n,i=null==a?[1,1]:a;I(Mr(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=e;return I(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),I(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),I(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),I(zr(s,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(s," and dilations ")+"'".concat(i,"'."))),Wr("depthwiseConv2d",o,r),{x:()=>fu(c.shape,t,l,s,o,i,r),filter:()=>pu(c,t,l.shape,s,o,i,r)}}},fp={kernelName:te,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,s]=e,o={x:a,filter:s,dy:t},r={x:a,filter:s,dy:t};return{x:()=>io.runKernel(ee,o,n),filter:()=>io.runKernel(ne,r,n)}}},gp={kernelName:re,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,a={dy:t,y:n};return{x:()=>io.runKernel(ie,a)}}},mp={kernelName:ce,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=pr($i(yc(Xi(n))),2/Math.sqrt(Math.PI));return{x:()=>pr(t,a)}}},bp={kernelName:ue,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pr(t,n)}}},xp={kernelName:he,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>Ur(t,n.shape)}}},yp={kernelName:de,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pr(t,$i(n))}}},kp={kernelName:me,gradFunc:t=>({x:()=>Ri(t)})},wp={kernelName:be,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=Ni(n.shape,a.shape);return{a:()=>{const e=dr(t,cr(a,"float32")),o=Si(n.shape,s);return o.length>0?Ur(Yi(e,o),n.shape):e},b:()=>{let e=pr(t,cr(n,"float32"));const o=Si(a.shape,s);o.length>0&&(e=Ur(Yi(e,o),a.shape));const r=Xi(a);return yc(dr(e,cr(r,"float32")))}}}},vp={kernelName:xe,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:a}=n,[s,o,r,i]=e,c=null==i?Ki(1):i,l=Si(o.shape,s.shape),u=[];if(1===o.rank){for(let t=0;t<s.shape.length-1;++t)u.push(s.shape[t]);u.push(1)}const h=vc(s,o),d=pr(t,c),p=Tl(ur(r,Ki(a))),f=pr(pr(pr(p,p),p),Ki(-.5));return{x:()=>1===o.rank?Ur(pr(pr(t,nc(Ur(p,[1,1,1,o.shape[0]]),u)),c),s.shape):Ur(pr(pr(t,p),c),s.shape),mean:()=>{let t=pr(pr(p,Ki(-1)),d);return 1===o.rank&&(t=Yi(t,l)),Ur(t,o.shape)},variance:()=>{let t=pr(pr(f,h),d);return 1===o.rank&&(t=Yi(t,l)),Ur(t,o.shape)},scale:()=>{const e=pr(h,p);let n=pr(t,e);return 1===o.rank&&(n=Yi(n,l)),Ur(n,o.shape)},offset:()=>{let e=t;return 1===o.rank&&(e=Yi(e,l)),Ur(e,o.shape)}}}},Ip={kernelName:ye,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[a,s]=e,{axis:o,batchDims:r}=n,i=_(o,a.shape)[0],c=(t,e,n)=>()=>{const a=t.shape,s=e.size,r=a.slice(0,i),c=r.length,l=a.slice(o,a.length).slice(1),u=l.length,h=Cp(0,c),d=Cp(c+1,c+1+u),p=Sp([r,[s],l]),f=Ur(n,p),g=Ur(e,[s]),m=Sp([[c],h,d]),b=ou(f,m);let x=nu(b,g,t.shape[i]);const y=Ui(m);return x=ou(x,y),x};if(1===r){const e=a.shape[0],n=a.split(e,0);return{x:()=>jl(n.map(((e,n)=>c(e,s.slice(n,1),t.slice(n,1))()))).reshape(a.shape),indices:()=>s}}return{x:c(a,s,t),indices:()=>s}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cp(t,e){const n=[];for(let a=t;a<e;++a)n.push(a);return n}function Sp(t){const e=[];for(let n=0;n<t.length;++n)for(let a=0;a<t[n].length;++a)e.push(t[n][a]);return e}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Np={kernelName:ve,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>Ri(n),b:()=>Ri(a)}}},Tp={kernelName:Ie,gradFunc:t=>({x:()=>cr(t,"float32")})},Ep={kernelName:Ne,gradFunc:t=>({x:()=>Ri(t)})},Rp={kernelName:Te,gradFunc:t=>({x:()=>Ri(t)})},Ap={kernelName:Ee,gradFunc:t=>({x:()=>Ri(t)})},Fp={kernelName:Re,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{alpha:s}=n,o=rc(a,0);return{x:()=>Ei(o,t,pr(t,s))}}},Dp={kernelName:Oe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dr(t,ur(n,1))}}},_p={kernelName:_e,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dr(t,cr(n,"float32"))}}},Op={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{axis:s}=n;return{logits:()=>{const e=$i(a);return vc(t,pr(Yi(t,s,!0),e))}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lp=xo({localResponseNormalizationBackprop_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,a=5,s=1,o=1,r=.5){const i={x:t,y:e,dy:n},c={depthRadius:a,bias:s,alpha:o,beta:r};return io.runKernel(Be,i,c)}}),Mp={kernelName:Pe,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,s]=e,{depthRadius:o,bias:r,alpha:i,beta:c}=n;return{x:()=>Lp(a,s,t,o,r,i,c)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zp(t,e,n,a){return e.rank<n.rank&&(e=Ur(e,Pi(e.shape,a))),t.rank<n.rank&&(t=Ur(t,Pi(t.shape,a))),{x:()=>pr(t,cr(Ti(n,e),t.dtype))}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pp={kernelName:We,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{reductionIndices:s}=a,o=e[0],r=zp(t,e[1],o,_(s,o.shape));return{x:()=>r.x()}}},Bp={kernelName:Ue,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>pr(t,cr(ic(n,a),"float32")),b:()=>pr(t,cr(pc(n,a),"float32"))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wp=xo({maxPool3dGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,a,s,o,r){const i=mo(t,"dy","maxPool3dGrad"),c=mo(e,"input","maxPool3dGrad"),l=mo(n,"output","maxPool3dGrad");let u=i,h=c,d=l,p=!1;4===c.rank&&(p=!0,u=Ur(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=Ur(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),d=Ur(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),I(5===u.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,"."))),I(5===h.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,"."))),I(5===d.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(d.rank,"."))),Wr("maxPool3dGrad",o,r);const f={dy:u,input:h,output:d},g={filterSize:a,strides:s,pad:o,dimRoundingMode:r},m=io.runKernel(je,f,g);return p?Ur(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),Up={kernelName:He,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,s]=e,{filterSize:o,strides:r,pad:i,dimRoundingMode:c}=n;return{x:()=>Wp(t,a,s,o,r,i,c)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vp=xo({maxPoolGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,a,s,o,r){const i=mo(t,"dy","maxPoolGrad"),c=mo(e,"input","maxPoolGrad"),l=mo(n,"output","maxPoolGrad");I(c.rank===i.rank,(()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),I(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),I(4===c.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."))),Wr("maxPoolGrad",o,r);const u={dy:i,input:c,output:l},h={filterSize:a,strides:s,pad:o,dimRoundingMode:r};return io.runKernel(Ge,u,h)}}),Gp={kernelName:ln,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:s}=n,o=s.map((t=>t[0]));return{x:()=>qr(t,o,a.shape)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hp(t,e,n){const a=t.shape.length,s=a-n.length,o=Wi(n,a);let r=t;null!=o&&(r=ou(t,o));const i=r.shape.slice(),c=i.splice(a-n.length,n.length).reduce(((t,e)=>t*e),1);i.push(c);let l=
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const a=t.shape.slice();a[n]=1;const s=Ur(e,a),o=xi(t,n,!0,!1),r=xi(t,n,!0,!0),i=pr(o,r);return pr(s,i)}(r.reshape(i),e,s);if(l=l.reshape(r.shape),null!=o){const t=Ui(o);l=ou(l,t)}return l}const jp={kernelName:Vn,gradFunc:(t,e,n)=>{const{blockShape:a,paddings:s}=n;return{x:()=>Yr(t,a,s)}}},Kp={kernelName:Gn,gradFunc:(t,e,n)=>{const{axis:a}=n;return{x:()=>Hr(t,a)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const qp=[Md,zd,Pd,Bd,Wd,Ud,Vd,Gd,Hd,jd,Kd,qd,Yd,Jd,Qd,$d,tp,ep,np,ap,sp,op,ip,rp,lp,up,hp,dp,pp,fp,{kernelName:se,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=Ni(n.shape,a.shape);return{a:()=>{const e=dr(t,cr(a,"float32")),o=Si(n.shape,s);return o.length>0?Ur(Yi(e,o),n.shape):e},b:()=>{let e=pr(t,cr(n,"float32"));const o=Si(a.shape,s);o.length>0&&(e=Ur(Yi(e,o),a.shape));const r=Xi(a);return yc(dr(e,cr(r,"float32")))}}}},gp,mp,bp,xp,yp,wp,kp,vp,Ip,Np,Tp,Ep,Rp,Ap,Fp,Dp,_p,Op,Mp,Pp,Pp,Bp,Up,{kernelName:Ve,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,s]=e,{filterSize:o,strides:r,pad:i}=n;return{x:()=>Vp(t,a,s,o,r,i)}}},{kernelName:qe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:s}=n,o=_(s,a.shape),r=N(zi(a.shape,o)[1]);return{x:()=>{const e=a.shape.slice();o.forEach((t=>{e[t]=1}));const n=Ur(t,e);return dr(pr(n,Oc(a.shape,"float32")),r)}}}},{kernelName:Xe,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{axis:s}=a,[o,r]=e,i=zp(t,r,o,_(s,o.shape));return{x:()=>i.x()}}},{kernelName:Ye,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>pr(t,cr(fc(n,a),"float32")),b:()=>pr(t,cr(rc(n,a),"float32"))}}},{kernelName:Ze,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:s}=n,o=s.map((t=>t[0]));return{x:()=>qr(t,o,a.shape)}}},{kernelName:Je,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=Ni(n.shape,a.shape);return{a:()=>{const e=Si(n.shape,s);return e.length>0?Ur(Yi(t,e),n.shape):t},b:()=>{const e=pr(t,yc(sc(dr(n,a)))),o=Si(a.shape,s);return o.length>0?Ur(Yi(e,o),a.shape):e}}}},{kernelName:$e,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=Ni(n.shape,a.shape);return{a:()=>{const e=pr(t,cr(a,"float32")),o=Si(n.shape,s);return o.length>0?Ur(Yi(e,o),n.shape):e},b:()=>{const e=pr(t,cr(n,"float32")),o=Si(a.shape,s);return o.length>0?Ur(Yi(e,o),a.shape):e}}}},{kernelName:tn,gradFunc:t=>({x:()=>yc(t)})},{kernelName:rn,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>_c(n.shape,"float32")}}},{kernelName:on,gradFunc:t=>({x:()=>Ri(t)})},{kernelName:cn,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:a}=n;return au(t,a).map((t=>()=>t))}},Gp,Gp,{kernelName:un,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,a,s]=e,o=n,r=a,i=Ni(o.shape,r.shape);return{a:()=>{const e=cr(r,"float32");let n=pr(t,pr(e,ji(o,vc(e,Ki(1)))));const a=Si(o.shape,i);return a.length>0&&(n=Yi(n,a)),Ur(n,o.shape)},b:()=>{const e=rc(o,0),n=Ei(e,mc(o),Ri(o));let a=pr(t,pr(s,n));const c=Si(r.shape,i);return c.length>0&&(a=Yi(a,c)),Ur(a,r.shape)}}}},{kernelName:hn,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,a]=e,s=rc(n,0);return{x:()=>Ei(s,t,pr(t,a)),alpha:()=>{let e=Ei(s,Ri(t),pr(t,n));const o=Si(a.shape,t.shape);return o.length>0&&(e=Yi(e,o)),Ur(e,a.shape)}}}},{kernelName:dn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:s}=n;let o=[];return o=null==s?a.shape.map(((t,e)=>e)):"number"==typeof s?[s]:s,{x:()=>Hp(a,t,o)}}},{kernelName:xn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dr(t,yc(Xi(n)))}}},{kernelName:Sn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=pr(fc(n,6),Kl(n));return{x:()=>pr(t,cr(a,"float32"))}}},{kernelName:yn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pr(t,cr(Kl(n),"float32"))}}},{kernelName:kn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ur(t,n.shape)}}},{kernelName:In,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,s={dy:t,images:a};return{images:()=>io.runKernel(Cn,s,n)}}},{kernelName:wn,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,s={dy:t,images:a};return{images:()=>io.runKernel(vn,s,n)}}},{kernelName:Nn,gradFunc:(t,e,n)=>{const{dims:a}=n,s=_(a,t.shape);return{x:()=>Sl(t,s)}}},{kernelName:Tn,gradFunc:t=>({x:()=>Ri(t)})},{kernelName:En,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>yc(dr(t,pr(ji(n,1.5),2)))}}},{kernelName:Dn,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>cr(Ri(n),"float32"),t:()=>pr(t,cr(n,t.dtype)),e:()=>pr(t,cr(Nc(n),t.dtype))}}},{kernelName:_n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=rc(n,Ki(0)),a=Ki(Hh),s=Ki(jh),o=pr(t,s),r=pr(pr(t,a),$i(cr(n,"float32")));return Ei(e,o,r)}}}},{kernelName:Pn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pr(t,pr(n,vc(Ki(1),n)))}}},{kernelName:zn,gradFunc:t=>({x:()=>Ri(t)})},{kernelName:Ln,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pr(mi(cr(n,"float32")),t)}}},{kernelName:Mn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pr(bi(cr(n,"float32")),t)}}},{kernelName:On,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{begin:s,size:o}=n,r=a.shape,[i,c]=wh(a,s,o),l=[];for(let u=0;u<t.rank;u++)l.push([i[u],r[u]-i[u]-c[u]]);return{x:()=>Vc(t,l)}}},{kernelName:Hn,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{dim:s}=n,o=pr(t,a);return{logits:()=>vc(o,pr(Yi(o,[s],true),a))}}},{kernelName:Bn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pr(t,Kr(n))}}},jp,jp,Kp,Kp,{kernelName:Wn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dr(t,pr(qi(cr(n,"float32")),2))}}},{kernelName:Zn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=Ki(2);return{a:()=>pr(t,pr(s,vc(n,a))),b:()=>pr(t,pr(s,vc(a,n)))}}},{kernelName:Jn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pr(t,pr(cr(n,"float32"),2))}}},{kernelName:fa,gradFunc:t=>({x:()=>Ri(t)})},{kernelName:aa,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=Ni(n.shape,a.shape);return{a:()=>{let e=t;const a=Si(n.shape,s);return a.length>0&&(e=Yi(e,a)),Ur(e,n.shape)},b:()=>{let e=t;const n=Si(a.shape,s);return n.length>0&&(e=Yi(e,n)),Ur(yc(e),a.shape)}}}},{kernelName:Un,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,s=a.shape.slice(),{axis:o}=n;_(o,a.shape).forEach((t=>{s[t]=1}));const r=Ur(t,s),i=pr(r,Oc(a.shape,"float32"));return{x:()=>i}}},{kernelName:sa,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dr(t,Xi(mi(n)))}}},{kernelName:oa,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pr(vc(Ki(1),Xi(n)),t)}}},{kernelName:ra,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{reps:s}=n;return{x:()=>{let e=Ri(a);if(1===a.rank)for(let n=0;n<s[0];++n)e=ur(e,qr(t,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<s[0];++n)for(let o=0;o<s[1];++o)e=ur(e,qr(t,[n*a.shape[0],o*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<s[0];++n)for(let o=0;o<s[1];++o)for(let r=0;r<s[2];++r)e=ur(e,qr(t,[n*a.shape[0],o*a.shape[1],r*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<s[0];++n)for(let o=0;o<s[1];++o)for(let r=0;r<s[2];++r)for(let i=0;i<s[3];++i)e=ur(e,qr(t,[n*a.shape[0],o*a.shape[1],r*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return e}}}},{kernelName:la,gradFunc:(t,e,n)=>{const a=n,{perm:s}=a,o=Ui(s);return{x:()=>ou(t,o)}}},{kernelName:ha,gradFunc:(t,e,n)=>{const a=n,{axis:s}=a;return{value:()=>jl(t,s)}}},{kernelName:da,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Fc(e,Ri(e)),a=oc(t,n);let s=ic(e,Ki(0,"int32"));const o=a.rank-s.rank;for(let i=0;i<o;++i)s=tc(s,i+1);s=Sc(s,Oc(a.shape,"bool"));const r=Ri(a);return Ei(s,a,r)}(t,n)}}},{kernelName:pa,gradFunc:t=>({x:()=>Ri(t)})}];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const sM of qp)Ta(sM);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */zs().prototype.abs=function(){return this.throwIfDisposed(),fr(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.acos=function(){return this.throwIfDisposed(),gr(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.acosh=function(){return this.throwIfDisposed(),mr(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.add=function(t){return this.throwIfDisposed(),ur(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.all=function(t,e){return this.throwIfDisposed(),br(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.any=function(t,e){return this.throwIfDisposed(),xr(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.argMax=function(t){return this.throwIfDisposed(),yr(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.argMin=function(t){return this.throwIfDisposed(),kr(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.asScalar=function(){return this.throwIfDisposed(),I(1===this.size,(()=>"The array must have only 1 element.")),Ur(this,[])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.asType=function(t){return this.throwIfDisposed(),cr(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.as1D=function(){return this.throwIfDisposed(),Ur(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.as2D=function(t,e){return this.throwIfDisposed(),Ur(this,[t,e])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Ur(this,[t,e,n])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.as4D=function(t,e,n,a){return this.throwIfDisposed(),Ur(this,[t,e,n,a])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.as5D=function(t,e,n,a,s){return this.throwIfDisposed(),Ur(this,[t,e,n,a,s])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.asin=function(){return this.throwIfDisposed(),wr(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.asinh=function(){return this.throwIfDisposed(),vr(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.atan=function(){return this.throwIfDisposed(),Ir(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.atan2=function(t){return this.throwIfDisposed(),Cr(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.atanh=function(){return this.throwIfDisposed(),Sr(this)},zs().prototype.avgPool=function(t,e,n,a){return this.throwIfDisposed(),Vr(this,t,e,n,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Yr(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.batchNorm=function(t,e,n,a,s){return this.throwIfDisposed(),Zr(this,t,e,n,a,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.broadcastTo=function(t){return this.throwIfDisposed(),ei(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.cast=function(t){return this.throwIfDisposed(),cr(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.ceil=function(){return this.throwIfDisposed(),ni(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),si(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Ms&&(t=[t]),Hr([this,...t],e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.conv1d=function(t,e,n,a,s,o){return this.throwIfDisposed(),ui(this,t,e,n,a,s,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.conv2dTranspose=function(t,e,n,a,s){return this.throwIfDisposed(),di(this,t,e,n,a,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.conv2d=function(t,e,n,a,s,o){return this.throwIfDisposed(),li(this,t,e,n,a,s,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.cos=function(){return this.throwIfDisposed(),mi(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.cosh=function(){return this.throwIfDisposed(),bi(this)},
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),xi(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),yi(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),wi(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.depthwiseConv2d=function(t,e,n,a,s,o){return this.throwIfDisposed(),vi(this,t,e,n,a,s,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.dilation2d=function(t,e,n,a,s){return this.throwIfDisposed(),Ii(this,t,e,n,a,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.divNoNan=function(t){return this.throwIfDisposed(),Ai(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.div=function(t){return this.throwIfDisposed(),dr(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.dot=function(t){return this.throwIfDisposed(),Fi(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.elu=function(){return this.throwIfDisposed(),_i(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.equal=function(t){return this.throwIfDisposed(),Ti(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.erf=function(){return this.throwIfDisposed(),Oi(this)},
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),Qi(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.exp=function(){return this.throwIfDisposed(),$i(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.expandDims=function(t){return this.throwIfDisposed(),tc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.expm1=function(){return this.throwIfDisposed(),ec(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.fft=function(){return this.throwIfDisposed(),Pl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.flatten=function(){return this.throwIfDisposed(),Ur(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.floor=function(){return this.throwIfDisposed(),sc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.floorDiv=function(t){return this.throwIfDisposed(),hr(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.gather=function(t,e,n){return this.throwIfDisposed(),oc(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.greaterEqual=function(t){return this.throwIfDisposed(),ic(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.greater=function(t){return this.throwIfDisposed(),rc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.ifft=function(){return this.throwIfDisposed(),Bl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.irfft=function(){return this.throwIfDisposed(),Wl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.isFinite=function(){return this.throwIfDisposed(),lc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.isInf=function(){return this.throwIfDisposed(),uc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.isNaN=function(){return this.throwIfDisposed(),hc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.leakyRelu=function(t){return this.throwIfDisposed(),dc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.lessEqual=function(t){return this.throwIfDisposed(),fc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.less=function(t){return this.throwIfDisposed(),pc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.localResponseNormalization=function(t,e,n,a){return this.throwIfDisposed(),gc(this,t,e,n,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.logSigmoid=function(){return this.throwIfDisposed(),wc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Ic(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Cc(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.log=function(){return this.throwIfDisposed(),mc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.log1p=function(){return this.throwIfDisposed(),bc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Sc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.logicalNot=function(){return this.throwIfDisposed(),Nc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.logicalOr=function(t){return this.throwIfDisposed(),Tc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.logicalXor=function(t){return this.throwIfDisposed(),Ec(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),jr(this,t,e,n)},zs().prototype.maxPool=function(t,e,n,a){return this.throwIfDisposed(),Rc(this,t,e,n,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.max=function(t,e){return this.throwIfDisposed(),Gi(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.maximum=function(t){return this.throwIfDisposed(),Fc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.mean=function(t,e){return this.throwIfDisposed(),Dc(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.min=function(t,e){return this.throwIfDisposed(),Hi(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.minimum=function(t){return this.throwIfDisposed(),Lc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Mc(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.mod=function(t){return this.throwIfDisposed(),zc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.mul=function(t){return this.throwIfDisposed(),pr(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.neg=function(){return this.throwIfDisposed(),yc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Ji(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.notEqual=function(t){return this.throwIfDisposed(),Bc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Wc(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.onesLike=function(){return this.throwIfDisposed(),Uc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.pad=function(t,e){return this.throwIfDisposed(),Vc(this,t,e)},zs().prototype.pool=function(t,e,n,a,s,o){return this.throwIfDisposed(),Hc(this,t,e,n,a,s,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.pow=function(t){return this.throwIfDisposed(),ji(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.prelu=function(t){return this.throwIfDisposed(),jc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.prod=function(t,e){return this.throwIfDisposed(),Kc(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.reciprocal=function(){return this.throwIfDisposed(),vl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.relu=function(){return this.throwIfDisposed(),Il(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.relu6=function(){return this.throwIfDisposed(),Cl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.reshapeAs=function(t){return this.throwIfDisposed(),Ur(this,t.shape)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.reshape=function(t){return this.throwIfDisposed(),Ur(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),zu(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Pu(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.reverse=function(t){return this.throwIfDisposed(),Sl(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.rfft=function(){return this.throwIfDisposed(),Vl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.round=function(){return this.throwIfDisposed(),Nl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.rsqrt=function(){return this.throwIfDisposed(),Tl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.selu=function(){return this.throwIfDisposed(),El(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.separableConv2d=function(t,e,n,a,s,o){return this.throwIfDisposed(),Rl(this,t,e,n,a,s,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.sigmoid=function(){return this.throwIfDisposed(),Kr(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.sign=function(){return this.throwIfDisposed(),Al(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.sin=function(){return this.throwIfDisposed(),Fl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.sinh=function(){return this.throwIfDisposed(),Dl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.slice=function(t,e){return this.throwIfDisposed(),qr(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.softmax=function(t){return this.throwIfDisposed(),zl(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.softplus=function(){return this.throwIfDisposed(),kc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Gc(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.split=function(t,e){return this.throwIfDisposed(),Ul(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.sqrt=function(){return this.throwIfDisposed(),qi(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.square=function(){return this.throwIfDisposed(),Xi(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.squaredDifference=function(t){return this.throwIfDisposed(),Gl(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.squeeze=function(t){return this.throwIfDisposed(),Hl(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Ms?[this,t]:[this,...t];return jl(n,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.step=function(t){return this.throwIfDisposed(),Kl(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.stridedSlice=function(t,e,n,a,s,o,r,i){return this.throwIfDisposed(),ql(this,t,e,n,a,s,o,r,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.sub=function(t){return this.throwIfDisposed(),vc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.sum=function(t,e){return this.throwIfDisposed(),Yi(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.tan=function(){return this.throwIfDisposed(),Xl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.tanh=function(){return this.throwIfDisposed(),Xr(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.tile=function(t){return this.throwIfDisposed(),nc(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.toBool=function(){return this.throwIfDisposed(),cr(this,"bool")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.toFloat=function(){return this.throwIfDisposed(),cr(this,"float32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.toInt=function(){return this.throwIfDisposed(),cr(this,"int32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.topk=function(t,e){return this.throwIfDisposed(),$l(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.transpose=function(t){return this.throwIfDisposed(),ou(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.unique=function(t){return this.throwIfDisposed(),eu(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),nu(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.unstack=function(t){return this.throwIfDisposed(),au(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.where=function(t,e){return this.throwIfDisposed(),Ei(t,this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
zs().prototype.zerosLike=function(){return this.throwIfDisposed(),Ri(this)};
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Xp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Xp.prototype)}}class Yp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Yp.prototype)}}class Zp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Zp.prototype)}}class Jp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Jp.prototype)}}class Qp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Qp.prototype)}}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class $p{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(t,"."));if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const t=this.cache.keys().next().value;this.cache.delete(t)}this.maxEntries=t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tf(t,e){if(Array.isArray(t)){let n=[];for(let a=0;a<e;a++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function ef(t,e){if(!t)throw new Qp(e)}function nf(t,e){let n=0;for(const a of t)a===e&&n++;return n}function af(t){return 1===t.length?t[0]:t}function sf(t){return Array.isArray(t)?t:[t]}function of(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function rf(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let cf={};function lf(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function uf(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>uf(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?uf(e):t[n]=e.value)}}}function hf(t,e={},n={},a="object",s=!1){if("string"==typeof t){const s=t;let o;if(s in n)o=n[s];else if(s in cf)o=cf[s];else if(o=e[s],null==o)throw new Zp("Unknown ".concat(a,": ").concat(t,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return o}{const o=t;if(null==o.className||null==o.config)throw new Zp("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(o),".\n")+"'className' and 'config' must set.");const r=o.className;let i,c;if(r in n?[i,c]=n[r]:r in cf?[i,c]=cf.className:r in e&&([i,c]=e[r]),null==i)throw new Zp("Unknown ".concat(a,": ").concat(r,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const t={};for(const n of Object.keys(cf))t[n]=cf[n];for(const s of Object.keys(n))t[s]=n[s];o.config.customObjects=t;const e=Object.assign({},cf);for(const s of Object.keys(n))cf[s]=n[s];uf(o.config);const a=c(i,o.config,n,s);return cf=Object.assign({},e),a}{const t=Object.assign({},cf);for(const a of Object.keys(n))cf[a]=n[a];const e=new i(o.config);return cf=Object.assign({},t),e}}}function df(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function pf(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function ff(t){if(null==t)throw new Zp("Invalid value in obj: ".concat(JSON.stringify(t)));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function gf(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Zp("".concat(n," is not a valid ").concat(e,".  Valid values are ").concat(t," or null/undefined."))}function mf(t,e,n=0,a=1/0){return ef(n>=0),ef(a>=n),Array.isArray(t)&&t.length>=n&&t.length<=a&&t.every((t=>typeof t===e))}function bf(t,e){Array.isArray(t)?(I(t.length>0,(()=>"".concat(e," is unexpectedly an empty array."))),t.forEach(((t,n)=>bf(t,"element ".concat(n+1," of ").concat(e))))):I(Number.isInteger(t)&&t>0,(()=>"Expected ".concat(e," to be a positive integer, but got ")+"".concat(xf(t),".")))}function xf(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>xf(t))).join(",")+"]":"string"==typeof t?'"'.concat(t,'"'):"".concat(t)}function yf(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let kf=0;function wf(){return kf++}const vf={};function If(t=""){return t in vf||(vf[t]=0),vf[t]+=1,t+vf[t].toString()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Cf=["channelsFirst","channelsLast"],Sf=["nearest","bilinear"],Nf=["valid","same","causal"],Tf=["max","avg"],Ef=["sum","mul","concat","ave"],Rf=new Map;function Af(t){gf(Cf,"DataFormat",t)}function Ff(t){gf(Nf,"PaddingMode",t)}function Df(t){gf(Tf,"PoolMode",t)}const _f=[],Of="/";function Lf(t,e){_f.push(t);try{const t=e();return _f.pop(),t}catch(nM){throw _f.pop(),nM}}function Mf(t){if(!Bf(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===_f.length?"":_f.join(Of)+Of)+t}function zf(t){if(!Bf(t))throw new Error("Not a valid tensor name: '"+t+"'");Rf.has(t)||Rf.set(t,0);const e=Rf.get(t);if(Rf.set(t,Rf.get(t)+1),e>0){const n="".concat(t,"_").concat(e);return Rf.set(n,1),n}return t}const Pf=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Bf(t){return!!t.match(Pf)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Wf(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let a=1;for(let s=e;s<n;++s)a*=t[s];return a}function Uf(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const a=t[n];a<e&&(e=a)}return e}function Vf(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const a=t[n];a>e&&(e=a)}return e}function Gf(t,e){if(e<t)throw new Zp("end (".concat(e,") < begin (").concat(t,") is forbidden."));const n=[];for(let a=t;a<e;++a)n.push(a);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Hf;function jf(){return null==Hf&&(Hf=io.backend.epsilon()),Hf}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Kf(t,e){return cr(t,e)}function qf(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),Ur(t,n)}function Xf(t,e,n){return So((()=>{switch(t.rank){case 1:return _l(t,e,n);case 2:return Ol(t,[e,0],[n,t.shape[1]]);case 3:return Ll(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Ml(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return qr(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return qr(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Zp("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function Yf(t,e,n){return So((()=>{switch(t.rank){case 1:return _l(t,e,n);case 2:return Ol(t,[0,e],[t.shape[0],n]);case 3:return Ll(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Ml(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Zp("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function Zf(t,e,n,a){return So((()=>{switch(t.rank){case 1:return _l(t,e,n);case 2:switch(a){case 1:return Xf(t,e,n);case 2:return Yf(t,e,n);default:throw new Zp("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return Xf(t,e,n);case 2:return Ll(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Yf(t,e,n);default:throw new Zp("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return Xf(t,e,n);case 2:return Ml(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Ml(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Yf(t,e,n);default:throw new Zp("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new Zp("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function Jf(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),Hr(t,e)}function Qf(t,e){switch(t.rank){case 1:return oi([t,e]);case 2:return ri([t,e],0);case 3:return ii([t,e],0);case 4:return ci([t,e],0);default:throw new Zp("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(t.rank))}}function $f(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Zp("The length of input n (".concat(e.length,") does not match ")+"the number of dimensions in input x (".concat(t.rank,")"));return nc(t,e)}function tg(t,e=0,n=1,a,s){return xl(t,e,n,a,s)}function eg(t,e,n,a){if(t.rank<2||e.rank<2)throw new Jp("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(t.shape," and y shape = ").concat(e.shape));if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Jp("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(t.shape," and ")+" y shape = ".concat(e.shape))}if(2===t.rank&&2===e.rank){return gu({a:t,b:e,transposeA:!1,transposeB:!1,bias:a?sg(t.rank,a,"channelsLast"):null,activation:n})}{const s=t.shape.slice(),o=s.pop();t=Ur(t,[-1,o]);const r=e.shape.slice(),i=r.pop(),c=r.pop(),l=[...r,i],u=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=Ur(ou(e,u),[c,-1]);const h=[...s,...l];return Ur(gu({a:t,b:e,transposeA:!1,transposeB:!1,bias:a?sg(t.rank,a,"channelsLast"):null,activation:n}),h)}}function ng(t,e,n){return So((()=>(e=Array.isArray(e)?Yl(e,"int32"):cr(e,"int32"),oc(t,e,n))))}function ag(t){return pr(t,t)}function sg(t,e,n){const a=e.shape;if(1!==e.rank&&e.rank!==t)throw new Zp("Unexpected bias dimensions: ".concat(e.rank)+"; expected it to be 1 or ".concat(t));if(5===t){if("channelsFirst"===n)return 1===a.length?Ur(e,[1,a[0],1,1,1]):Ur(e,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?Ur(e,[1,1,1,1,a[0]]):Ur(e,[1].concat(a))}else if(4===t){if("channelsFirst"===n)return 1===a.length?Ur(e,[1,a[0],1,1]):Ur(e,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?Ur(e,[1,1,1,a[0]]):Ur(e,[1].concat(a))}else if(3===t){if("channelsFirst"===n)return 1===a.length?Ur(e,[1,a[0],1]):Ur(e,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?Ur(e,[1,1,a[0]]):Ur(e,[1].concat(a))}else if(t<3)return e;throw new Zp("Unsupported input rank by biasAdd: ".concat(e.rank))}function og(t,e,n){return So((()=>(null==n&&(n="channelsLast"),Af(n),ur(t,sg(t.rank,e,n)))))}function rg(t,e,n,a){return So((()=>ru(t,e,n,a)))}function ig(t,e,n=!1){return n?t():e()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const cg=["fanIn","fanOut","fanAvg"],lg=["normal","uniform","truncatedNormal"];class ug extends Hu{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class hg extends ug{apply(t,e){return _c(t,e)}}hg.className="Zeros",Ku(hg);class dg extends ug{apply(t,e){return Oc(t,e)}}dg.className="Ones",Ku(dg);class pg extends ug{constructor(t){if(super(),"object"!=typeof t)throw new Zp("Expected argument of type ConstantConfig but got ".concat(t));if(void 0===t.value)throw new Zp("config must have value set but got ".concat(t));this.value=t.value}apply(t,e){return So((()=>pr(Ki(this.value),Oc(t,e))))}getConfig(){return{value:this.value}}}pg.className="Constant",Ku(pg);class fg extends ug{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return yl(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}fg.className="RandomUniform",Ku(fg);class gg extends ug{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Jp("randomNormal does not support dType ".concat(e,"."));return tg(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}gg.className="RandomNormal",Ku(gg);class mg extends ug{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Jp("truncatedNormal does not support dType ".concat(e,"."));return tu(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}mg.className="TruncatedNormal",Ku(mg);class bg extends ug{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return So((()=>{if(2!==t.length||t[0]!==t[1])throw new Zp("Identity matrix initializer can only be used for 2D square matrices.");return pr(this.gain,ac(t[0]))}))}getConfig(){return{gain:this.gain}}}bg.className="Identity",Ku(bg);class xg extends ug{constructor(t){if(super(),t.scale<0)throw new Zp("scale must be a positive float. Got: ".concat(t.scale));
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,gf(cg,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){gf(lg,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,a;if(Af(e),2===t.length)n=t[0],a=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Wf(t,2);n=t[1]*e,a=t[0]*e}else if("channelsLast"===e){const e=Wf(t,0,t.length-2);n=t[t.length-2]*e,a=t[t.length-1]*e}}else{const e=Wf(t);n=Math.sqrt(e),a=Math.sqrt(e)}return[n,a]}(t),a=n[0],s=n[1];let o=this.scale;if("fanIn"===this.mode?o/=Math.max(1,a):"fanOut"===this.mode?o/=Math.max(1,s):o/=Math.max(1,(a+s)/2),"normal"===this.distribution){const n=Math.sqrt(o);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Jp("".concat(this.getClassName()," does not support dType ").concat(e,"."));return tu(t,0,n,e,this.seed)}{const n=Math.sqrt(3*o);return yl(t,-n,n,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}xg.className="VarianceScaling",Ku(xg);class yg extends xg{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return xg.className}}yg.className="GlorotUniform",Ku(yg);class kg extends xg{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return xg.className}}kg.className="GlorotNormal",Ku(kg);class wg extends xg{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return xg.className}}wg.className="HeNormal",Ku(wg);class vg extends xg{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return xg.className}}vg.className="HeUniform",Ku(vg);class Ig extends xg{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return xg.className}}Ig.className="LeCunNormal",Ku(Ig);class Cg extends xg{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return xg.className}}Cg.className="LeCunUniform",Ku(Cg);class Sg extends ug{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return So((()=>{if(t.length<2)throw new Jp("Shape must be at least 2D.");if("int32"!==e&&"float32"!==e&&void 0!==e)throw new TypeError("Unsupported data type ".concat(e,"."));const n=N(t.slice(0,-1)),a=t[t.length-1],s=n*a;s>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(s,") elements: ")+"Slowness may result.");const o=tg([Math.max(a,n),Math.min(a,n)],0,1,e,this.seed),r=Uu.qr(o,!1);let i=r[0];const c=r[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return i=pr(i,c.sign()),n<a&&(i=i.transpose()),pr(Ki(this.gain),i.reshape(t))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Sg.className="Orthogonal",Ku(Sg);const Ng={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Tg(t,e={}){return hf(t,ju.getMap().classNameMap,e,"initializer")}function Eg(t){return lf(t)}function Rg(t){if("string"==typeof t){const e=t in Ng?Ng[t]:t;if("GlorotNormal"===e)return new kg;if("GlorotUniform"===e)return new yg;if("HeNormal"===e)return new wg;if("HeUniform"===e)return new vg;if("LeCunNormal"===e)return new Ig;if("LeCunUniform"===e)return new Cg;{const t={};return t.className=e,t.config={},Tg(t)}}return t instanceof ug?t:Tg(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ag(t){return Array.isArray(t)&&Array.isArray(t[0])}function Fg(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Dg(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Zp("Expected Tensor length to be 1; got ".concat(t.length));e=t[0]}else e=t;return e}function _g(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new Zp("Expected exactly 1 Shape; got ".concat(t.length))}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Og(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Lg="Variable";class Mg{constructor(t,e="float32",n=Lg,a=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=wf(),n=null==n?Lg:n,this.originalName=Mf(n),this.name=zf(this.originalName),this.trainable_=a,this.constraint=s,this.val=function(t,e=!0,n,a){return io.makeVariable(t,e,n,a)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function zg(t){return t.map((t=>t.read()))}function Pg(t){t.forEach((t=>{t[0].write(t[1])}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Bg{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Wg{constructor(t,e,n,a,s,o,r){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=a,this.callArgs=s,this.outputTensorIndex=r,this.id=wf(),null!=o&&(this.originalName=Mf(o),this.name=zf(this.originalName)),this.rank=e.length}}let Ug=0;class Vg{constructor(t,e){this.callArgs=e,this.id=Ug++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Gg=0;class Hg extends Hu{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Gg++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=of(t)+"_"+If(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Yp("The layer has never been called "+"and thus has no defined ".concat(e,"."));if(this.inboundNodes.length<=t)throw new Zp("Asked to get ".concat(e," at node ").concat(t,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[t]}getInputAt(t){return af(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return af(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Xp("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Xp("Layer ".concat(this.name)+" is not connected, no input to return.");return af(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Xp("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Xp("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return af(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=sf(t);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=sf(this.inputSpec);if(e.length!==n.length)throw new Zp("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(e.length," input tensors. ")+"Input received: ".concat(t));for(let a=0;a<e.length;a++){const t=e[a],s=n[a];if(null==s)continue;const o=t.rank;if(null!=s.ndim&&o!==s.ndim)throw new Zp("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(s.ndim,", found ndim=").concat(o));if(null!=s.maxNDim&&o>s.maxNDim)throw new Zp("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(s.maxNDim,", found ndim=").concat(o));if(null!=s.minNDim&&o<s.minNDim)throw new Zp("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(s.minNDim,", found ndim=").concat(o,"."));if(null!=s.dtype&&t.dtype!==s.dtype)throw new Zp("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(s.dtype,", found dtype=").concat(t.dtype,"."));if(s.axes){const e=t.shape;for(const t in s.axes){const n=Number(t),o=s.axes[t],r=n>=0?e[n]:e[e.length+n];if(null!=o&&-1===[o,null].indexOf(r))throw new Zp("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(o," but got shape ").concat(e,"."))}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const n=s.shape[e],o=t.shape[e];if(null!=n&&null!=o&&n!==o)throw new Zp("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(s.shape,", ")+"found shape=".concat(t.shape,"."))}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=sf(t),a=function(t){let e=!0;for(const n of sf(t))if(!(n instanceof Wg)){e=!1;break}return e}(t),s=function(t){let e=!0;for(const n of sf(t))if(n instanceof Wg){e=!1;break}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */(t);if(a===s)throw new Zp("Arguments to apply() must be all SymbolicTensors or all Tensors");return Lf(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of sf(t))e.push(n.shape);this.build(af(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let a=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,a);const s=sf(a),o=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),o.push(t);if(a=af(o),null!=this.activityRegularizer)throw new Jp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(t){t=sf(t);const e=[];for(const n of t)e.push(n.shape);return af(e)}(t),a=this.computeOutputShape(n);let s;const o="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new Wg(o,n,this,sf(t),e,this.name,a))):new Wg(o,a,this,sf(t),e,this.name),this.addInboundNode(t,s,null,null,n,a,e),this._refCount++,null!=this.activityRegularizer)throw new Jp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(t),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let e=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=t[a]&&t[a]!==n&&(e=!0)})),e&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(t),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Xp("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new Xp("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new Yp("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Og(this.weights)}build(t){this.built=!0}getWeights(t=!1){return zg(t?this.trainableWeights:this.weights)}setWeights(t){So((()=>{const e=this.weights;if(e.length!==t.length)throw new Zp('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(t.length,", ")+"but the layer was expecting ".concat(e.length," weights. ")+"Provided weights: ".concat(t,"..."));if(0===e.length)return;const n=[],a=zg(e);for(let s=0;s<a.length;++s){const o=a[s],r=e[s],i=t[s];if(!T(o.shape,i.shape))throw new Zp("Layer weight shape ".concat(o.shape," ")+"not compatible with provided weight shape ".concat(i.shape));n.push([r,i])}Pg(n)}))}addWeight(t,e,n,a,s,o,r,i){if(-1!==this._addedWeightNames.indexOf(t))throw new Zp("Duplicate weight name ".concat(t," for layer ").concat(this.name));this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():Rg("zeros"));const c=a.apply(e,n),l=new Mg(c,n,t,o,r);return c.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==o&&(o=!0),o?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=sf(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");e.forEach((t=>{if(null!=t)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return e}setMaskMetadata(t,e,n){if(!this.supportsMasking)return;const a=this.computeMask(t,n),s=sf(e),o=sf(a);if(s.length!==o.length)throw new Error("".concat(this.name," outputs ").concat(s.length," tensors ")+"but ".concat(s.length," masks for those tensors"));for(let r=0;r<s.length;r++)s[r].kerasMask=o[r]}addInboundNode(t,e,n,a,s,o,r=null){const i=sf(t);e=sf(e),n=sf(n),a=sf(a),s=Fg(s),o=Fg(o);const c=[],l=[],u=[];for(const h of i)c.push(h.sourceLayer),l.push(h.nodeIndex),u.push(h.tensorIndex);new Vg({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:e,inputMasks:n,outputMasks:a,inputShapes:s,outputShapes:o},r);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function jg(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const a=jg(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of a)-1===e.indexOf(t)&&e.push(t)}return e}}}class Kg extends Hg{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:If("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Zp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Zp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Zp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const a=new Wg(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Vg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Zp("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Kg.className="InputLayer",Ku(Kg);class qg{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof qg)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Zp("Duplicate key: name=".concat(t.name,", id=").concat(t.id));return this.id2Value[t.id]=
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return cr(e,t.dtype)}catch(aM){throw new Zp("The dtype of the feed (".concat(e.dtype,") can not be cast to the dtype ")+"of the key '".concat(t.name,"' (").concat(t.dtype,")."))}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Wg){if(null==this.id2Value[t.id])throw new Zp("Nonexistent key: ".concat(t.name));return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Zp("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Value[e]}}getMask(t){if(t instanceof Wg){if(null==this.id2Value[t.id])throw new Zp("Nonexistent key: ".concat(t.name));return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Zp("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&No(this.id2Mask)}}const Xg=new $p,Yg=new $p;function Zg(t,e,n,a){const s=null!=n&&n.training,o=Array.isArray(t),r=o?t:[t],i=r.map((t=>t.name)),c=[],l=e.names();for(const f of i)-1!==l.indexOf(f)?c.push(e.getValue(f)):c.push(null);const u=i.join(",")+"|"+e.names().sort().join(",");let h,d=Xg.get(u);if(null==d){const t=function(t,e){I(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===t.length){const s=Qg(t[0],e);n=s.sorted,a=s.recipientMap}else{const s=new Set;for(const o of t){const{sorted:t,recipientMap:r}=Qg(o,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const e in r)null==a[e]&&(a[e]=new Set),r[e].forEach((t=>a[e].add(t)))}}return{sorted:n,recipientCounts:Jg(a)}}(r,e);d=t.sorted,h=t.recipientCounts,Xg.put(u,d),Yg.put(u,h)}h={},s||Object.assign(h,Yg.get(u));const p=new qg(e);for(let f=0;f<d.length;++f){const t=d[f],a=t.sourceLayer;if(a instanceof Kg)continue;const o=[],r=[],l=[];let u=!1;for(const n of t.inputs){const t=p.getValue(n),a=p.getMask(n);o.push(t),r.push(a),null!=a&&(u=!0),s||(h[n.name]--,0!==h[n.name]||e.hasKey(n)||-1!==i.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||l.push(t))}u&&((n=n||{}).mask=r[0]);const g=sf(a.apply(o,n));let m=null;a.supportsMasking&&(m=a.computeMask(o,r));const b=$g(t),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(m)?m[0]:m);const t=i.indexOf(x[e].name);-1!==t&&(c[t]=g[e])}s||No(l)}return p.disposeMasks(),o?c:c[0]}function Jg(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Qg(t,e){const n=new Set,a=[],s={};for(const i of e.names())n.add(i);const o=[],r=[];for(o.push(t);o.length>0;){const t=o[o.length-1];if(n.has(t.name)){o.pop();continue}const e=r[r.length-1]===o.length-1;if(0===t.inputs.length||e)o.pop(),a.push(t),n.add(t.name),e&&r.pop();else{r.push(o.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||o.push(e)}}return{sorted:a,recipientMap:s}}function $g(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const a of t.sourceLayer.inboundNodes[e].outputTensors)if(a.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function tm(t,e){return So((()=>qi(Yi(pr(t,t),e,!0))))}at().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(t){null!=Xg&&Xg.setMaxEntries(t),null!=Yg&&Yg.setMaxEntries(t)}));class em extends Hu{getConfig(){return{}}}class nm extends em{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return So((()=>{const e=tm(t,this.axis),n=si(e,0,this.maxValue);return pr(t,dr(n,ur(jf(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}nm.className="MaxNorm",Ku(nm);class am extends em{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return So((()=>dr(t,ur(jf(),tm(t,this.axis)))))}getConfig(){return{axis:this.axis}}}am.className="UnitNorm",Ku(am);class sm extends em{apply(t){return Il(t)}}sm.className="NonNeg",Ku(sm);class om extends em{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return So((()=>{const e=tm(t,this.axis),n=ur(pr(this.rate,si(e,this.minValue,this.maxValue)),pr(1-this.rate,e));return pr(t,dr(n,ur(jf(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}om.className="MinMaxNorm",Ku(om);const rm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function im(t){return lf(t)}function cm(t,e={}){return hf(t,ju.getMap().classNameMap,e,"constraint")}function lm(t){if(null==t)return null;if("string"==typeof t){return cm({className:t in rm?rm[t]:t,config:{}})}return t instanceof em?t:cm(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function um(t){if(null==t)return;const e=[],n=[],a=[];for(const s in t){const o=t[s];if("number"!=typeof o){const t=o;e.push(t.data()),n.push(s),a.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];No(a)}}function hm(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var dm,pm;(pm=dm||(dm={}))[pm.SILENT=0]="SILENT",pm[pm.VERBOSE=1]="VERBOSE";class fm{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class gm{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class mm extends fm{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const a in e){const t=e[a];if("number"==typeof t)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+t*n;else{let e;a in this.totals?e=this.totals[a]:this.totals[a]=0;const s=So((()=>ur(this.totals[a],pr(t,n))));this.totals[a]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?e[n]=this.totals[n]/this.seen:So((()=>{const t=pr(dr(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),To(e[n])})))}}class bm extends fm{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const s in this.history){const a=this.history[s];for(let o=0;o<a.length;++o)if("number"!=typeof a[o]){const r=a[o];t.push(r.data()),e.push(s),n.push(o)}}const a=await Promise.all(t);for(let s=0;s<a.length;++s){this.history[e[s]][n[s]].dispose(),this.history[e[s]][n[s]]=a[s][0]}}}class xm extends fm{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Th,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");W(this.yieldEvery)&&(this.maybeWait=function(t,e,n){let a,s=null!=n?n():bs();return(...o)=>{const r=null!=n?n():bs();return r-s<e||(s=r,a=t(...o)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const a=[];null!=this.yield&&(await um(n),a.push(this.yield(t,e,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await um(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await um(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await um(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await um(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):W(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await um(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await um(t),await this.trainEnd(t))}}function ym(t,e){if(null==t&&(t={}),t instanceof fm)return[t];if(Array.isArray(t)&&t[0]instanceof fm)return t;return sf(t).map((t=>new xm(t,e)))}class km{constructor(){}static registerCallbackConstructor(t,e){I(t>=0&&Number.isInteger(t),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(t))),km.checkForDuplicate(e),null==km.constructors[t]&&(km.constructors[t]=[]),km.constructors[t].push(e)}static checkForDuplicate(t){for(const e in km.constructors){km.constructors[+e].forEach((e=>{if(e===t)throw new Zp("Duplicate callback constructor.")}))}}static clear(){km.constructors={}}static createCallbacks(t){const e=[];for(const n in km.constructors){const a=+n;t>=a&&e.push(...km.constructors[a])}return e.map((t=>new t))}}function wm(t,e,n,a,s,o,r,i,c){const l=new bm,u=[new mm,...km.createCallbacks(e)];null!=t&&u.push(...t),u.push(l);const h=new gm(u);return h.setParams({epochs:n,initialEpoch:a,samples:s,steps:o,batchSize:r,verbose:e,doValidation:i,metrics:c}),{callbackList:h,history:l}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vm(t,e={},n=!1){return hf(t,ju.getMap().classNameMap,e,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Im(t,e){return So((()=>{"float32"!==t.dtype&&(t=cr(t,"float32"));const n=Yi(ag(t),e,!0),a=ai(n.shape,jf()),s=qi(Fc(n,a));return dr(t,s)}))}function Cm(t,e){return So((()=>Dc(ag(vc(e,t)),-1)))}function Sm(t,e){return So((()=>Dc(fr(vc(e,t)),-1)))}function Nm(t,e){return So((()=>{const n=vc(t,e),a=si(fr(t),jf(),Number.MAX_VALUE),s=fr(dr(n,a));return pr(100,Dc(s,-1))}))}function Tm(t,e,n=!1){return So((()=>{if(n)e=zl(e);else{const t=Yi(e,e.shape.length-1,!0);e=dr(e,t)}return e=si(e,jf(),1-jf()),yc(Yi(pr(cr(t,"float32"),mc(e)),e.shape.length-1))}))}function Em(t,e,n=!1){return So((()=>{const a=cr(sc(function(t){const e=[Wf(t.shape)];return Ur(t,e)}(t)),"int32"),s=(e=si(e,jf(),1-jf())).shape;return Tm(Ur(Wc(a,s[s.length-1]),s),e,n)}))}function Rm(t,e){return So((()=>{let n;return n=si(e,jf(),1-jf()),n=mc(dr(n,vc(1,n))),Dc(function(t,e){if(!T(t.shape,e.shape))throw new Zp("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(t.shape)," and ").concat(JSON.stringify(e.shape)));return So((()=>{const n=Il(e),a=yc(fr(e));return ur(vc(n,pr(e,t)),bc($i(a)))}))}(t,n),-1)}))}function Am(t,e){return So((()=>{const n=Im(t,-1),a=Im(e,-1),s=pr(n,a);return yc(Yi(s,-1))}))}km.constructors={};const Fm={meanSquaredError:Cm,meanAbsoluteError:Sm,meanAbsolutePercentageError:Nm,meanSquaredLogarithmicError:function(t,e){return So((()=>{const n=si(e,jf(),Number.MAX_VALUE),a=mc(ur(1,n)),s=si(t,jf(),Number.MAX_VALUE),o=mc(ur(1,s));return Dc(ag(vc(a,o)),-1)}))},squaredHinge:function(t,e){return So((()=>{const n=Fc(0,vc(1,pr(t,e)));return Dc(ag(n),-1)}))},hinge:function(t,e){return So((()=>{const n=Fc(0,vc(1,pr(t,e)));return Dc(n,-1)}))},categoricalHinge:function(t,e){return So((()=>{const n=Yi(pr(t,e),-1),a=Gi(pr(vc(1,t),e),-1);return Fc(0,ur(1,vc(a,n)))}))},logcosh:function(t,e){return So((()=>{const n=Math.log(2),a=vc(e,t),s=vc(ur(a,kc(pr(-2,a))),n);return Dc(s,-1)}))},categoricalCrossentropy:Tm,sparseCategoricalCrossentropy:Em,binaryCrossentropy:Rm,kullbackLeiblerDivergence:function(t,e){return So((()=>{const n=si(t,jf(),1),a=si(e,jf(),1);return Yi(pr(t,mc(dr(n,a))),-1)}))},poisson:function(t,e){return So((()=>{const n=mc(ur(jf(),e));return Dc(vc(e,pr(t,n)),-1)}))},cosineProximity:Am};function Dm(t){if("string"==typeof t){if(t in Fm)return Fm[t];let e="Unknown loss ".concat(t);throw t.toLowerCase().includes("softmaxcrossentropy")&&(e="Unknown loss ".concat(t,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new Zp(e)}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _m(t,e){return So((()=>{const n=pr(.5,Uc(e)),a=Kf(rc(e,n),t.dtype);return Dc(Ti(t,a),-1)}))}function Om(t,e){return So((()=>Kf(Ti(yr(t,-1),yr(e,-1)),"float32")))}function Lm(t,e){return Rm(t,e)}function Mm(t,e){return t.rank===e.rank&&(t=Hl(t,[t.rank-1])),(e=yr(e,-1)).dtype!==t.dtype&&(e=cr(e,t.dtype)),cr(Ti(t,e),"float32")}const zm=Tm,Pm=Em,Bm={binaryAccuracy:_m,categoricalAccuracy:Om,precision:function(t,e){return So((()=>{const n=function(t,e){return So((()=>cr(Yi(Sc(Ti(t,1),Ti(e,1))),"float32")))}(t,e),a=function(t,e){return So((()=>cr(Yi(Sc(Ti(t,0),Ti(e,1))),"float32")))}(t,e),s=ur(n,a);return cr(Ei(rc(s,0),dr(n,s),0),"float32")}))},categoricalCrossentropy:zm,sparseCategoricalCrossentropy:Pm,mse:Cm,MSE:Cm,mae:Sm,MAE:Sm,mape:Nm,MAPE:Nm,cosine:Am};function Wm(t){if("string"==typeof t&&t in Bm)return Bm[t];if("string"!=typeof t&&null!=t)return t;throw new Zp("Unknown metric ".concat(t))}function Um(t){if(ef(null!==t,"Unknown LossOrMetricFn ".concat(t)),"string"==typeof t)return t;{let e;for(const n of Object.keys(Fm))if(Fm[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Bm))if(Bm[n]===t){e=n;break}return void 0!==e?e:t.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const Vm=1048576;function Gm(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Hm(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>Vm&&console.warn('User-defined metadata of model "'.concat(e,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(Vm,"."))}}function Hm(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Hm(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Hm(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jm(t,e,n,a=console.log){const s=function(t){let e=!0;const n=[],a=[];for(const s in t.nodesByDepth)n.push(t.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){e=!1;break}a.push(...s)}if(e)for(const s of t.layers){let t=!1;for(const n of s.inboundNodes)if(-1!==a.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),o=["Layer (type)","Input Shape","Output shape","Param #"];let r;if(s?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){o.push("Receives inputs"),r=[];for(const e in t.nodesByDepth)r.push(...t.nodesByDepth[e])}a("_".repeat(e)),Km(o,n,a),a("=".repeat(e));const i=t.layers;for(let u=0;u<i.length;++u)s?qm(i[u],n,a):Xm(i[u],n,r,a),a((u===i.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const c=function(t){let e;e=null!=t.collectedTrainableWeights?Og(t.collectedTrainableWeights):Og(t.trainableWeights);return e}(t),l=Og(t.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(e))}function Km(t,e,n=console.log){let a="";for(let s=0;s<t.length;++s)s>0&&(a=a.slice(0,a.length-1)+" "),a+=t[s],a=a.slice(0,e[s]),a+=" ".repeat(e[s]-a.length);n(a)}function qm(t,e,n){let a,s;try{s=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(aM){s="multiple"}try{a=JSON.stringify(t.outputShape)}catch(aM){a="multiple"}const o=t.name,r=t.getClassName();Km(["".concat(o," (").concat(r,")"),s,a,t.countParams().toString()],e,n)}function Xm(t,e,n,a){let s,o;try{o=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(aM){o="multiple"}try{s=JSON.stringify(t.outputShape)}catch(aM){s="multiple"}const r=[];for(const u of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let t=0;t<u.inboundLayers.length;++t){const e=u.inboundLayers[t].name,n=u.nodeIndices[t],a=u.tensorIndices[t];r.push("".concat(e,"[").concat(n,"][").concat(a,"]"))}const i=t.name,c=t.getClassName(),l=0===r.length?"":r[0];Km(["".concat(i," (").concat(c,")"),o,s,t.countParams().toString(),l],e,a);for(let u=1;u<r.length;++u)Km(["","","","",r[u]],e,a)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ym(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function Zm(t,e){if(null===t)return null;if("string"==typeof t)return rf(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],a=t.length;for(let s=0;s<a;++s){const a=t[s];Ym(e,s,a)?n.push(a):n.push(Zm(a,e))}return n}{const e={};for(const n of Object.keys(t)){const a=t[n];if("name"===n&&"string"==typeof a)e[n]=a;else{const t=rf(n);e[t]=Zm(a,t)}}return e}}function Jm(t,e){if(null==t)return null;if("string"==typeof t)return of(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],a=t.length;for(let s=0;s<a;++s){const a=t[s];Ym(e,s,a)?n.push(a):n.push(Jm(a,e))}return n}{const e={};for(const n of Object.keys(t)){const a=t[n],s=of(n);e[s]="name"!==n&&"className"!==n||"string"!=typeof a?Jm(a,n):a}return e}}
/** @license See the LICENSE file. */const Qm="4.21.0";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class $m extends Hg{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=If(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],pf(this.inputs).length!==this.inputs.length)throw new Zp("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((t=>t.name))));pf(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((t=>t.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const t=b.sourceLayer,e=b.nodeIndex,n=b.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const b of this.inputs){const t=b.sourceLayer,e=b.nodeIndex,n=b.tensorIndex;ef(0===e,"input layer has >1 nodes"),ef(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const e=this.inputLayers[b];if(!(e instanceof Kg))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(t.inputs,". ")+"Input ".concat(b," (0-based) originates ")+"from layer type ".concat(e.getClassName(),"."));this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},a={},s={},o={},r=[],i=(t,e,n,a,s,c)=>{null!=a&&null!=s&&null!=c||(a=t.sourceLayer,s=t.nodeIndex,c=t.tensorIndex);const l=a.inboundNodes[s];if(-1!==n.indexOf(l))throw new Yp("The tensor ".concat(t.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==e.indexOf(l))return;this.containerNodes.add($m.nodeKey(a,s)),a.id in o||(o[a.id]=Object.keys(o).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let o=0;o<u;o++){const t=l.inputTensors[o],a=l.inboundLayers[o],s=l.nodeIndices[o],r=l.tensorIndices[o];i(t,e,n,a,s,r)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);r.push(l)},c=[],l=[];for(const b of this.outputs)i(b,c,l);const u=r.slice().reverse();for(const b of u){n[b.id]=b,b.id in e||(e[b.id]=0);let t=e[b.id];const o=null==a[b.outboundLayer.id]?0:a[b.outboundLayer.id];t=Math.max(t,o),a[b.outboundLayer.id]=t,s[b.outboundLayer.id]=b.outboundLayer,e[b.id]=t;for(let a=0;a<b.inboundLayers.length;a++){const s=b.inboundLayers[a],o=b.nodeIndices[a],r=s.inboundNodes[o],i=null==e[r.id]?0:e[r.id];e[r.id]=Math.max(t+1,i),n[r.id]=r}}const h={};for(const b in e){const t=e[b];t in h||(h[t]=[]),h[t].push(n[b])}const d={};for(const b in a){const t=a[b];t in d||(d[t]=[]),d[t].push(s[b])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(df);this.layers=[];for(const b of p){const t=d[b];t.sort(((t,e)=>{const n=o[t.id],a=o[e.id];return n<a?-1:n>a?1:0}));for(const e of t)e instanceof $m&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((t=>parseInt(t,10))).sort(df);const f=this.inputs.slice(),g=[];for(const b of p)for(const t of h[b]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Yp("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(e.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(g));for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=h;const m=this.layers.map((t=>t.name));for(const b of m){const t=m.filter((t=>t===b)).length;if(1!==t)throw new Yp('The name "'.concat(b,'" is used ').concat(t," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new Vg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Zp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let a=0;const s=(t=>{const e=Object.keys(t);if(0===e.length)return!1;const n=e[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(t);s&&this.parseWeights(t);for(const r of this.layers)for(const[t,e]of r.weights.entries()){const o=s?"".concat(e.name.split("/").slice(0,-1).join("/")+"/").concat(t):e.originalName;if(null!=n[o])throw new Zp("Duplicate weight name: ".concat(o));n[o]=e,a++}const o=[];for(const r in t){let a=r;if(null==n[r]){const t=r.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])o.push([n[a],t[r]]);else if(e)throw new Zp("Provided weight data has no target variable: ".concat(r));delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Zp("".concat(t.length," of ").concat(a," weights are not set: ")+"".concat(t))}Pg(o)}parseWeights(t){for(const e in Object.keys(t)){const n=e.split("/"),a=["vars","layer_checkpoint_dependencies"],s=n.map((t=>t.startsWith("_")?t.slice(1):t)).filter((t=>!a.includes(t))).join("/");s!==e&&(t[s]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers ".concat(Qm),e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Jm(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return So((()=>{t=sf(t);const n=new qg;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Zg(this.outputs,n,e)}))}computeMask(t,e){return So((()=>{let n;return t=sf(t),n=null==e?tf(null,t.length):sf(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Fg(t);if(e.length!==this.inputLayers.length)throw new Zp("Invalid inputShape argument ".concat(t,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let r=0;r<e.length;r++){const t=this.inputLayers[r],a=e[r];n[t.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(df);if(a.length>1)for(const r of a){const t=this.nodesByDepth[r];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(t.id))continue;const a=[];for(let r=0;r<e.inboundLayers.length;r++){const t=e.inboundLayers[r],s=e.nodeIndices[r],o=e.tensorIndices[r],i=n["".concat(t.name,"_").concat(s,"_").concat(o)];a.push(i)}const s=Fg(t.computeOutputShape(af(a))),o=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++){n["".concat(t.name,"_").concat(o,"_").concat(e)]=s[e]}}}const s=[],o=[];for(let r=0;r<this.outputLayers.length;r++){const t=this.outputLayers[r],e=this.outputLayersNodeIndices[r],n=this.outputLayersTensorIndices[r],a="".concat(t.name,"_").concat(e,"_").concat(n);o.push(a)}for(let r=0;r<o.length;r++){const t=o[r];ef(t in n),s.push(n[t])}return af(s)}runInternalGraph(t,e){null==e&&(e=tf(null,t.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],s=t[i],o=e[i];n[a.id]=[s,o]}const a=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(df);for(const i of a){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer,a=e.inputTensors,s=e.outputTensors,o=new Array;for(const e of a)e.id in n&&o.push(n[e.id]);if(o.length===a.length){let a,r,i,c,l={};if(null!=e.callArgs&&(l=e.callArgs),1===o.length){const[e,n]=o[0];null==l.mask&&(l.mask=n),i=sf(t.call(e,l)),c=sf(t.computeMask(e,n)),a=[e],r=[n]}else a=o.map((t=>t[0])),r=o.map((t=>t[1])),null==l.mask&&(l.mask=r),i=sf(t.call(a,l)),c=sf(t.computeMask(a,r));if(t.activityRegularizer)throw new Jp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],a=i[t],o=c[t];n[e.id]=[a,o]}}}}const s=[],o=[],r=[];for(const i of this.outputs){ef(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[t,e]=n[i.id];r.push(t.shape),s.push(t),o.push(e)}return[s,o,r]}buildNodeConversionMap(t){const e={};let n;for(const a of this.layers){n=a instanceof $m?1:0;for(let t=0;t<a.inboundNodes.length;t++){const s=$m.nodeKey(a,t);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e)return this.findLayer(e);if(null==t)throw new Zp("Provide either a layer name or layer index");if("number"==typeof t)return this.findLayer(t);for(const n of this.layers)if(n.name===t)return n;throw new Zp("No such layer: ".concat(t))}findLayer(t){if(this.layers.length<=t)throw new Zp("Was asked to retrieve layer at index ".concat(t,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[t]}calculateLosses(){return So((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const a=$m.nodeKey(e,n);this.containerNodes.has(a)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const t=o.getClassName(),a=o.getConfig(),s=[];for(let n=0;n<o.inboundNodes.length;n++){const t=o.inboundNodes[n],a=$m.nodeKey(o,n);let r={};if(this.containerNodes.has(a)){if(t.callArgs)try{JSON.stringify(t.callArgs),r=t.callArgs}catch(aM){console.warn("Layer ".concat(o.name," was passed ")+"non-serializable keyword arguments: "+"".concat(t.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),r={}}if(t.inboundLayers.length>0){const n=[];for(let a=0;a<t.inboundLayers.length;a++){const s=t.inboundLayers[a],o=t.nodeIndices[a],i=t.tensorIndices[a];let c=e[$m.nodeKey(s,o)];null==c&&(c=0),n.push([s.name,c,i,r])}s.push(n)}}}const r={};r.name=o.name,r.className=t,r.config=a,r.inboundNodes=s,n.push(r)}t.layers=n;const a=[];for(let o=0;o<this.inputLayers.length;o++){const t=this.inputLayers[o],n=this.inputLayersNodeIndices[o],s=$m.nodeKey(t,n);if(!this.containerNodes.has(s))continue;let r=e[s];null==r&&(r=0);const i=this.inputLayersTensorIndices[o];a.push([t.name,r,i])}t.inputLayers=a;const s=[];for(let o=0;o<this.outputLayers.length;o++){const t=this.outputLayers[o],n=this.outputLayersNodeIndices[o],a=$m.nodeKey(t,n);if(!this.containerNodes.has(a))continue;let r=e[a];null==r&&(r=0);const i=this.outputLayersTensorIndices[o];s.push([t.name,r,i])}return t.outputLayers=s,t}static fromConfig(t,e,n={},a=!1){const s={},o={};function r(t,e){t.name in o?o[t.name].push(e):o[t.name]=[e]}function i(t,e){const n=[];let a;for(const o of e){const i=o[0],c=o[1],l=o[2];if(a=null==o[3]?{}:o[3],!(i in s))return void r(t,e);const u=s[i];if(u.inboundNodes.length<=c)return void r(t,e);const h=u.inboundNodes[c];n.push(h.outputTensors[l])}n.length>0&&t.apply(af(n),a)}function c(t){const n=t.name,o=vm(t,null!=e.customObjects?e.customObjects:{});o.setFastWeightInitDuringBuild(a),s[n]=o;t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new Zp("Corrupted configuration, expected array for nodeData: ".concat(t));r(o,t)}))}const l=e.name,u=e.layers;for(const g of u)c(g);for(;!ff(o);)for(const t of u){const e=s[t.name];if(e.name in o){const t=o[e.name];delete o[e.name];for(const n of t)i(e,n)}}const h=[],d=[],p=e.inputLayers;for(const g of p){const t=g[0],e=g[1],n=g[2];ef(t in s);const a=s[t].inboundNodes[e].outputTensors;h.push(a[n])}const f=e.outputLayers;for(const g of f){const t=g[0],e=g[1],n=g[2];ef(t in s);const a=s[t].inboundNodes[e].outputTensors;d.push(a[n])}return new t({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new Zp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){So((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tb(t,e){return function(t,e,n){const a=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===a)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(t.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(e," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(t)))}(t,e,"classWeight")}async function eb(t,e,n,a){if(null!=n){const e=So((()=>{if(1===t.shape.length)return lr(t);if(2===t.shape.length){if(t.shape[1]>1){return yr(t,1)}if(1===t.shape[1])return Ur(t,[t.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(t.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(t.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await e.data());No(e);const s=[];return a.forEach((t=>{if(null==n[t])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(t," exists in the data but not in ")+"classWeight");s.push(n[t])})),Yl(s,"float32")}return null}function nb(t,e){return pr(t,e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ab(t,e){let n,a;const s=e;n=s.xs,a=s.ys,I(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(e)));const o=sb("input",t.inputNames,n),r=sb("output",t.outputNames,a),i=o[0].shape[0];I(o.length===t.inputs.length,(()=>"LayersModel has ".concat(t.inputs.length," inputs, but the dataset ")+"provides ".concat(o.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(t.inputNames),")"))),I(r.length===t.outputs.length,(()=>"LayersModel has ".concat(t.outputs.length," outputs, but the dataset ")+"provides ".concat(r.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(t.outputNames),")")));for(let c=0;c<o.length;c++)I(o[c].shape[0]===i,(()=>"Batch size mismatch: input "+"".concat(t.inputNames[c]," has ").concat(o[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(t.inputNames[0],".")));for(let c=0;c<r.length;c++)I(r[c].shape[0]===i,(()=>"Batch size mismatch: output "+"".concat(t.outputNames[c]," has ").concat(r[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(t.inputNames[0],".")));return{xs:o,ys:r}}function sb(t,e,n){if(n instanceof Ms)return[n];if(Array.isArray(n))return I(n.length===e.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(e.length," to match the ").concat(t," keys ").concat(e,"."))),n;{const a=[];for(const s of e){if(null==n[s])throw new Zp("The feature data generated by the dataset lacks the required "+"".concat(t," key '").concat(s,"'."));a.push(n[s])}return a}}async function ob(t,e,n){const a=null!=n.batchesPerEpoch;if(I(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),I(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),I(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),I(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),I(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let o,r;if(s)if(rb(n.validationData))I(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const t=function(t){if(3===t.length)throw new Jp("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);o=t.xs,r=t.ys}const i=t.makeTrainFunction(),c=t.getDedupedMetricsNames();let l;l=s?c.slice().concat(c.map((t=>"val_"+t))):c.slice();const u=ym(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=wm(u,h,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,s,l);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let u=0,h=0;for(a||(g=await e.iterator());!a||u<n.batchesPerEpoch;){const e=await g.next();if(a&&e.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(u," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:a,ys:s}=ab(t,e.value),o={};o.batch=h,o.size=a[0].shape[0],await d.onBatchBegin(h,o);const r=[];if(null!=n.classWeight){const e=tb(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)r.push(await eb(s[t],0,e[t]))}const l=a.concat(s).concat(r),p=i(l);No(l);for(let t=0;t<c.length;++t){const e=c[t],n=p[t];o[e]=n,To(n)}await d.onBatchEnd(h,o),hm(o),h++,u++}if(a?u>=n.batchesPerEpoch:e.done){if(s){let e;e=rb(n.validationData)?sf(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):sf(t.evaluate(o,r,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l["val_".concat(t.metricsNames[n])]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function rb(t){return"function"==typeof t.iterator}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function ib(t){I(t>0&&Number.isInteger(t),(()=>"batchSize is required to be a positive integer, but got ".concat(t)))}function cb(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>Xf(t,e,n-e))):Xf(t,e,n-e)}function lb(t,e){return So((()=>null==t?null:Array.isArray(t)?t.map((t=>lb(t,e))):ng(t,"int32"===e.dtype?e:cr(e,"int32"))))}function ub(t,e){const n=[];let a=0,s=null;for(;a<t;)s=a+e,s>=t&&(s=t),n.push([a,s]),a=s;return n}function hb(t){const e=[];t instanceof Ms&&(t=[t]);for(let n=0;n<t.length;++n){const a=t[n];if(1===a.rank)e.push(qf(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(a)}}return e}function db(t,e){if(null==t)return;const n=[];if(e instanceof Ms)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const s in e){const t=e[s];n.push(t.id)}const a=[];if(t instanceof Ms)-1===n.indexOf(t.id)&&a.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&a.push(t)}));else if(null!=t)for(const s in t){const e=t[s];-1===n.indexOf(e.id)&&a.push(e)}a.forEach((t=>{t.isDisposed||t.dispose()}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pb(t){return Array.isArray(t)}function fb(t){return!function(t){return t instanceof Ms}(t)&&!pb(t)}function gb(t,e,n,a=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(pb(t)&&t.length>0)e=!0;else if(fb(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Zp("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(t))}return[]}if(null==t)return e.map((t=>null));let o;if(fb(t)){o=[];for(const n of e){if(null==t[n])throw new Zp('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(e));o.push(t[n])}}else if(pb(t)){if(t.length!==e.length)throw new Zp("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(e.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(t));o=t}else{if(e.length>1)throw new Zp("The model ".concat(s," expects ").concat(e.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(t.shape));o=[t]}if(o=hb(o),null!=n)for(let r=0;r<e.length;++r){if(null==n[r])continue;const t=o[r];if(t.shape.length!==n[r].length)throw new Zp("Error when checking ".concat(s,": expected ").concat(e[r]," ")+"to have ".concat(n[r].length," dimension(s). but got array with ")+"shape ".concat(t.shape));for(let e=0;e<n[r].length;++e){if(0===e&&!a)continue;const o=t.shape[e],i=n[r][e];if(null!=i&&i>=0&&o!==i)throw new Zp("".concat(s," expected a batch of elements where each ")+"example has shape [".concat(n[r].slice(1,n[r].length),"] ")+"(i.e.,tensor shape [*,".concat(n[r].slice(1,n[r].length),"])")+" but the ".concat(s," received an input with ").concat(t.shape[0])+" examples, each with shape [".concat(t.shape.slice(1,t.shape.length),"]")+" (tensor shape [".concat(t.shape,"])"))}}return o}function mb(t,e,n,a=!0,s=""){let o;if(Array.isArray(t)){if(t.length!==e.length)throw new Zp("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(e.length," Tensor(s),")+" but instead got ".concat(t.length," Tensors(s)."));o=t}else{if(e.length>1)throw new Zp("The model expects ".concat(e.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(t.shape),"."));o=[t]}if(null!=n)for(let r=0;r<e.length;++r){if(null==n[r])continue;const t=o[r];if(t.shape.length!==n[r].length)throw new Zp("Error when checking ".concat(s,": expected ").concat(e[r]," ")+"to have ".concat(n[r].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(t.shape)));for(let o=0;o<n[r].length;++o){if(0===o&&!a)continue;const i=t.shape[o],c=n[r][o];if(null!=c&&c!==i)throw new Zp("Error when checking ".concat(s,": expected ")+"".concat(e[r]," to have shape ").concat(JSON.stringify(n[r])," but ")+"got array with shape ".concat(JSON.stringify(t.shape),"."))}}}class bb extends $m{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Zp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");jm(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Sh.adagrad(.01),Adadelta:()=>Sh.adadelta(1,.95,jf()),Adam:()=>Sh.adam(.001,.9,.999,jf()),Adamax:()=>Sh.adamax(.002,.9,.999,jf(),0),RMSProp:()=>Sh.rmsprop(.001,.9,0,jf()),SGD:()=>Sh.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Zp("Unknown Optimizer ".concat(t))}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof qu))throw new Zp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Zp("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(t.loss,"."));const n=t.loss;e=n.map((t=>Dm(t)))}else{const n=Dm(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Zp('Unknown entry in loss dictionary: "'.concat(e,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==t.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),e.push(Dm(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const t=this.internalOutputShapes[o],e=this.outputNames[o];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[o])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Lf("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const a=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(t));n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const a of e){let e=n.hasOwnProperty(a)?n[a]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Lf("metric",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,a,o;for(const r of e){if("string"==typeof r&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(r)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===Rm?-1!==["accuracy","acc"].indexOf(r)?a=_m:-1!==["crossentropy","ce"].indexOf(r)&&(a=Lm):this.lossFunctions[t]===Em?-1!==["accuracy","acc"].indexOf(r)?a=Mm:-1!==["crossentropy","ce"].indexOf(r)&&(a=Pm):-1!==["accuracy","acc"].indexOf(r)?a=Om:-1!==["crossentropy","ce"].indexOf(r)&&(a=zm),-1!==["accuracy","acc"].indexOf(r)?s="acc":-1!==["crossentropy","ce"].indexOf(r)&&(s="ce"),o=a,n=""+s}else{const t=Wm(r);o=t,n=""+Um(r)}let e;Lf(n,(()=>{e=o})),s(t,n,e)}})(a[t])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const a=null==n.batchSize?32:n.batchSize;ib(a);const s=this.standardizeUserDataXY(t,e,!0,a);try{const t=s[0].concat(s[1]);this.makeTestFunction();const e=this.testFunction;return af(this.testLoop(e,t,a,n.verbose,n.steps))}finally{db(s[0],t),db(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const a=null!=(n=n||{}).batches,s=t.testFunction;let o=[];if(n.verbose>0)throw new Jp("Verbose mode is not implemented yet.");I(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const r="function"==typeof e.next?e:await e.iterator();let i=0,c=0;for(;!a||c<n.batches;){const e=await r.next();if(o=So((()=>{if(e.value){const{xs:n,ys:a}=ab(t,e.value),r=n.concat(a),l=So((()=>s(r)));if(No(r),0===c)for(let t=0;t<l.length;++t)o.push(Ki(0));const u=r[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=o[t];o[t]=So((()=>ur(o[t],pr(u,e)))),c>0&&No(n)}No(l),i+=u,++c}return o})),e.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<o.length;++l){const t=o[l];o[l]=dr(o[l],i),No(t)}return af(o)}(this,t,e)}checkNumSamples(t,e,n,a="steps"){let s;if(null!=n){if(s=null,null!=e)throw new Zp("If ".concat(a," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(e))}else{if(null==t)throw new Zp("Either the input data should have a defined shape, or "+"".concat(a," shoud be specified."));s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Zp("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),a=n?e:[e],s=this.retrieveSymbolicTensors(a),o=new qg;if(t instanceof Ms&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Zp("The number of inputs provided (".concat(t.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let e=0;e<this.inputs.length;++e)o.add(this.inputs[e],t[e])}else for(const i of this.inputs){const e=t[i.name];if(null==e)throw new Zp("No value is provided for the model's input ".concat(i.name));o.add(i,e)}const r=Zg(s,o);return n?r:r[0]}retrieveSymbolicTensors(t){const e=tf(null,t.length);let n=t.length;for(const a of this.layers){const s=Array.isArray(a.output)?a.output:[a.output],o=s.map((t=>t.name));for(let a=0;a<t.length;++a){const r=o.indexOf(t[a]);if(-1!==r&&(e[a]=s[r],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,a)=>{null==e&&n.push(t[a])})),new Zp("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return e}predictLoop(t,e=32,n=!1){return So((()=>{const a=this.checkNumSamples(t);if(n)throw new Jp("Verbose predictLoop() is not implemented yet.");const s=ub(a,e),o=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e){So((()=>{const n=s[e][0],a=s[e][1],o=cb(t,n,a),r=[];if(Array.isArray(o))for(let t=0;t<o.length;++t)r.push({key:this.inputs[t],value:o[t]});else r.push({key:this.inputs[0],value:o});const i=new qg(r);return Zg(this.outputs,i)})).forEach(((t,e)=>o[e].push(t)))}return af(o.map((t=>Hr(t,0))))}))}predict(t,e={}){const n=hb(t);mb(n,this.inputNames,this.feedInputShapes,!1);try{const t=null==e.batchSize?32:e.batchSize;return ib(t),this.predictLoop(n,t)}finally{db(n,t)}}predictOnBatch(t){mb(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,a){if(null==this.optimizer_)throw new Yp("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let o=0;o<this.feedOutputShapes.length;++o){const t=this.feedOutputShapes[o];this.feedLossFns[o]===Em?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(t,e){const n=pf(t.map((t=>t.shape[0])));n.sort();const a=pf(e.map((t=>t.shape[0])));if(a.sort(),n.length>1)throw new Zp("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((t=>t.shape)))));if(a.length>1)throw new Zp("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((t=>t.shape)))));if(n.length>0&&a.length>0&&!T(n,a))throw new Zp("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(n[0]," input sample(s) and ").concat(a[0]," target ")+"sample(s).")}(t=gb(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=gb(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const a=[Cm,Rm,Tm];for(let s=0;s<t.length;++s){const o=t[s],r=e[s],i=n[s];if(null!=r){if(r===Tm&&1===o.shape[o.shape.length-1])throw new Zp("You are passing a target array of shape ".concat(o.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(r)){const t=o.shape.slice(1),e=i.slice(1);for(let n=0;n<t.length;++n){const a=t[n],s=e[n];if(null!=s&&a!==s)throw new Zp("A target Tensor with shape ".concat(o.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&t[0].shape[0]%a!=0)throw new Zp("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(a,". Found: ").concat(t[0].shape[0]," sample(s)."));return[t,e]}async standardizeUserData(t,e,n,a,s=!0,o){const[r,i]=this.standardizeUserDataXY(t,e,s,o);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const t=tb(a,this.outputNames);c=[];for(let e=0;e<t.length;++e)c.push(await eb(i[e],0,t[e]))}return[r,i,c]}testLoop(t,e,n,a=0,s){return So((()=>{const o=this.checkNumSamples(e,n,s,"steps"),r=[];if(a>0)throw new Jp("Verbose mode is not implemented yet.");if(null!=s)throw new Jp("steps mode in testLoop() is not implemented yet");{const a=ub(o,n),s=Yl(Gf(0,o));for(let n=0;n<a.length;++n){const o=a[n][0],i=a[n][1],c=Xf(s,o,i-o),l=lb(e,c),u=t(l);if(0===n)for(let t=0;t<u.length;++t)r.push(Ki(0));for(let t=0;t<u.length;++t){const e=u[t];r[t]=ur(r[t],pr(i-o,e))}}for(let t=0;t<r.length;++t)r[t]=dr(r[t],o)}return r}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const a=t[n];let s=a;if(nf(t,a)>1){const e=nf(t.slice(0,n),a);s+="_".concat(e)}e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],r=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const r=new qg(t),i=Zg(this.outputs,r,{training:!0});let c;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(a[n],i[n]);null!=s[n]&&(t=nb(t,s[n]));const o=Dc(t);e.push(o),c=0===n?t:ur(c,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],s=this.metricsTensors[n][1];t=Dc(e(a[s],i[s]))}To(t),o.push(t)}return c=Dc(c),this.calculateLosses().forEach((t=>{c=ur(c,t)})),c}),!0,r)].concat(o)}}makeTestFunction(){this.testFunction=t=>So((()=>{const e=[];let n;const a=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let t=0;t<this.inputs.length;++t)o.push({key:this.inputs[t],value:a[t]});const r=new qg(o),i=Zg(this.outputs,r);for(let t=0;t<this.lossFunctions.length;++t){const a=this.lossFunctions[t],o=Dc(a(s[t],i[t]));n=0===t?o:ur(n,o),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],a=this.metricsTensors[t][1],o=Dc(n(s[a],i[a]));e.push(o)}return e}))}async fit(t,e,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,o,r,i,c,l,u,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;ib(d);const p=!1,f=await this.standardizeUserData(t,e,n.sampleWeight,n.classWeight,p,d);a=f[0],s=f[1],h=f[2];let g,m=!1;if(null!=n.validationData&&n.validationData.length>0){if(m=!0,2!==n.validationData.length)throw 3===n.validationData.length?new Jp("validationData including sample weights is not supported yet."):new Zp("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(n.validationData," is invalid."));i=n.validationData[0],c=n.validationData[1];const t=!0,e=await this.standardizeUserData(i,c,null,null,t,d);l=e[0],u=e[1],g=l.concat(u)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){m=!0;const t=Math.floor(a[0].shape[0]*(1-n.validationSplit)),e=a[0].shape[0];l=cb(a,t,e),o=a,a=cb(a,0,t),u=cb(s,t,e),r=s,s=cb(s,0,t),g=l.concat(u)}else null!=n.validationSteps&&(m=!0);const b=a.concat(s).concat(h);this.checkTrainableWeightsConsistency();const x=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let k,w;m?(this.makeTestFunction(),k=this.testFunction,w=y.slice().concat(y.map((t=>"val_"+t)))):(k=null,g=[],w=y.slice());const v=ym(n.callbacks,n.yieldEvery);return await this.fitLoop(x,b,y,d,n.epochs,n.verbose,v,k,g,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,db(a,t),db(s,e),db(o,t),db(r,e),db(l,i),db(u,c),null!=h&&No(h)}}async fitLoop(t,e,n,a,s,o,r,i,c,l,u,h,d,p){null==a&&(a=32),null==s&&(s=1),null==l&&(l=!0),null==h&&(h=0);let f=!1;if(null!=i&&null!=c&&(f=!0),null!=p&&(f=!0,null==d))throw new Zp("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(e,a,d,"steps_per_epoch");let m;null!=g&&(m=Gf(0,g)),null==o&&(o=1);const{callbackList:b,history:x}=wm(r,o,s,h,g,d,a,f,u);b.setModel(this),this.history=x,await b.onTrainBegin(),this.stopTraining_=!1;for(let k=h;k<s;++k){await b.onEpochBegin(k);const s={};if(null!=d)throw new Jp("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new Jp("batch shuffling is not implemneted yet");l&&y(m);const o=Yl(m),r=ub(g,a);for(let l=0;l<r.length;++l){const u={};if(await b.onBatchBegin(l,u),So((()=>{const h=r[l][0],d=r[l][1],p=Xf(o,h,d-h);u.batch=l,u.size=d-h;const g=lb(e,p),m=t(g);for(let t=0;t<n.length;++t){const e=n[t],a=m[t];u[e]=a,To(a)}if(l===r.length-1&&f){const t=this.testLoop(i,c,a);for(let e=0;e<n.length;++e){const a=n[e],o=t[e];To(o),s["val_"+a]=o}}})),await b.onBatchEnd(l,u),hm(u),this.stopTraining_)break}o.dispose()}if(await b.onEpochEnd(k,s),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return ob(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),a=n[0],s=n[1],o=this.makeTrainFunction()(a.concat(s)),r=[];for(const i of o){const t=await i.data();r.push(t[0])}return No(o),db(n[0],t),db(n[1],e),af(r)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,a=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let o=0;o<a.length;++o)n&&!a[o].trainable||e.push({name:a[o].originalName,tensor:s[o]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Co().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Co().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=of(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>of(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const a of e){if("string"!=typeof n[a])throw new Error("Serialization of non-string loss is not supported.");t[a]=of(n[a])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[of(Um(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>of(Um(t))));{const t={};for(const e in this.metrics)t[e]=of(Um(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=vm(Zm(t.optimizer_config));let n,a;if("string"==typeof t.loss)n=rf(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>rf(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=rf(t.loss[e])}if(Array.isArray(t.metrics))a=t.metrics.map((t=>rf(t)));else if(null!=t.metrics){a={};for(const e in t.metrics)a[e]=rf(t.metrics[e])}this.compile({loss:n,metrics:a,optimizer:e})}async save(t,e){if("string"==typeof t){const e=(n=t,Oo.getSaveHandlers(n));if(0===e.length)throw new Zp("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new Zp("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}var n;if(null==t.save)throw new Zp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const a=await Ro(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(Qm),convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await Ro(await this.optimizer.getWeights(),t);a.specs.push(...n),a.data=(o=[a.data,e],vo.join(o))}var o;if(null!=this.userDefinedMetadata){const t=!0;Gm(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=a.data,s.weightSpecs=a.specs,t.save(s)}setUserDefinedMetadata(t){Gm(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}bb.className="Model",Ku(bb);class xb extends bb{}xb.className="Functional",Ku(xb);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class yb extends bb{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:If("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new Zp("Negative dimension size caused by adding layer "+"".concat(t.name," with input shape [")+"".concat(t.inboundNodes[0].inputTensors[0].shape,"]"))}add(t){const e=t instanceof yb||t instanceof bb;let n;if(e){if(n=t,1!==n.outputs.length)throw new Zp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Zp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Zp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Zp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Kg({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Zp("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(t.name," ")+"which has ".concat(t.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==t.inboundNodes[0].outputTensors.length)throw new Zp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=jg(this.outputs[0])}this.inboundNodes=[],new Vg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:tf(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(_g(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new bb({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Yp("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Yp("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Yp("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Yp("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},a=!1){let s,o={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Zp("Legacy serialization format not supported yet.");s=e}else I(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,o=e;const r=new t(o);if(!(r instanceof yb))throw new Jp("Sequential.fromConfig called on non-Sequential input: ".concat(r));for(const i of s){const t=vm(i,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),r.add(t)}return r}set stopTraining(t){if(null==this.model)throw new Zp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Zp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}yb.className="Sequential",Ku(yb);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let kb=class extends Hu{getConfig(){return{}}};class wb extends kb{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Jp("Support for alpha values other than 1 (".concat(e,") is not implemented ")+"yet.");return _i(t)}(t,e)}}wb.className="elu",Ku(wb);class vb extends kb{apply(t){return El(t)}}vb.className="selu",Ku(vb);class Ib extends kb{apply(t){return Il(t)}}Ib.className="relu",Ku(Ib);class Cb extends kb{apply(t){return So((()=>Lc(6,Il(t))))}}Cb.className="relu6",Ku(Cb);class Sb extends kb{apply(t){return t}}Sb.className="linear",Ku(Sb);class Nb extends kb{apply(t){return Kr(t)}}Nb.className="sigmoid",Ku(Nb);class Tb extends kb{apply(t){return function(t){return So((()=>{const e=ur(.5,pr(.2,t));return si(e,0,1)}))}(t)}}Tb.className="hardSigmoid",Ku(Tb);class Eb extends kb{apply(t){return kc(t)}}Eb.className="softplus",Ku(Eb);class Rb extends kb{apply(t){return function(t){return So((()=>dr(t,ur(fr(t),1))))}(t)}}Rb.className="softsign",Ku(Rb);class Ab extends kb{apply(t){return Xr(t)}}Ab.className="tanh",Ku(Ab);let Fb=class extends kb{apply(t,e=-1){return zl(t,e)}};Fb.className="softmax",Ku(Fb);class Db extends kb{apply(t,e=-1){return Ic(t,e)}}Db.className="logSoftmax",Ku(Db);class _b extends kb{apply(t){return So((()=>So((()=>{const e=Math.sqrt(2),n=pr(.5,ur(1,Oi(dr(t,e))));return pr(t,n)}))))}}_b.className="gelu",Ku(_b);class Ob extends kb{apply(t){return So((()=>pr(.5,pr(t,ur(1,Xr(pr(qi(dr(2,Math.PI)),ur(t,pr(.044715,ji(t,3))))))))))}}Ob.className="gelu_new",Ku(Ob);class Lb extends kb{apply(t){return So((()=>pr(t,Xr(kc(t)))))}}Lb.className="mish",Ku(Lb);class Mb extends kb{apply(t,e=1){return So((()=>pr(Kr(pr(t,e)),t)))}}function zb(t){return t.getClassName()}function Pb(t,e={}){return hf(t,ju.getMap().classNameMap,e,"activation")}function Bb(t){if(null==t){const t={className:"linear",config:{}};return Pb(t)}if("string"==typeof t){const e={};return e.className=t,e.config={},Pb(e)}return t instanceof kb?t:Pb(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */Mb.className="swish",Ku(Mb);class Wb extends Hu{}class Ub extends Wb{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(t))}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return So((()=>{let e=_c([1]);return this.hasL1&&(e=ur(e,Yi(pr(this.l1,fr(t))))),this.hasL2&&(e=ur(e,Yi(pr(this.l2,ag(t))))),Ur(e,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Ub.className="L1L2",Ku(Ub);const Vb={l1l2:"L1L2"};function Gb(t){return lf(t)}function Hb(t,e={}){return hf(t,ju.getMap().classNameMap,e,"regularizer")}function jb(t){if(null==t)return null;if("string"==typeof t){return Hb({className:t in Vb?Vb[t]:t,config:{}})}return t instanceof Wb?t:Hb(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Kb extends Hg{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Dg(t);let n=Il(t);return null!=this.maxValue&&(n=si(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Kb.className="ReLU",Ku(Kb);class qb extends Hg{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Dg(t);return dc(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}qb.className="LeakyReLU",Ku(qb);class Xb extends Hg{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Rg(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=jb(t.alphaRegularizer),this.alphaConstraint=lm(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new Zp("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(t.sharedAxes));this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=_g(t)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)e[a-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<t.length;++a)n[a]=t[a];this.inputSpec=[new Bg({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Dg(t),jc(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Eg(this.alphaInitializer),alphaRegularizer:Gb(this.alphaRegularizer),alphaConstraint:im(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Xb.className="PReLU",Ku(Xb);let Yb=class extends Hg{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Jp("Non-default alpha value (".concat(t.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Dg(t);return _i(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};Yb.className="ELU",Ku(Yb);class Zb extends Hg{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Dg(t);return pr(n,cr(rc(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Zb.className="ThresholdedReLU",Ku(Zb);class Jb extends Hg{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Fb).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){return So((()=>{let n=Dg(t);const a=e.mask;if(null!=a){const t=pr(vc(Oc(n.shape),cr(a,n.dtype)),Ki(-1e9));n=ur(n,t)}return this.axis instanceof Array?this.axis.length>1?$i(vc(n,Cc(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Qb(t,e,n){if("number"==typeof t)return tf(t,e);if(t.length!==e)throw new Zp("The ".concat(n," argument must be an integer or tuple of ").concat(e," integers.")+" Received: ".concat(t.length," elements."));for(let s=0;s<e;++s){const o=t[s];if((a=o)!==parseInt(a.toString(),10))throw new Zp("The ".concat(n," argument must be an integer or tuple of ").concat(e)+" integers. Received: ".concat(JSON.stringify(t)," including a")+" non-integer number ".concat(o))}return t;var a}function $b(t,e,n,a,s=1){if(null==t)return t;let o;return o="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((o+a-1)/a)}function tx(t,e,n,a){if(null==t)return null;if("valid"===a)t=t*e+Vf([n-e,0]);else{if("same"!==a)throw new Zp("Unsupport padding mode: ".concat(a,"."));t*=e}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ex(t,e){return So((()=>(Af(e),"channelsFirst"===e?ou(t,[0,2,3,1]):t)))}function nx(t,e){return So((()=>(Af(e),"channelsFirst"===e?ou(t,[0,2,3,4,1]):t)))}function ax(t,e,n,a=[1,1],s="valid",o,r,i=null){return So((()=>{if(null==o&&(o="channelsLast"),Af(o),3!==t.rank&&4!==t.rank)throw new Zp("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));if(3!==e.rank&&4!==e.rank)throw new Zp("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));let c=ex(t,o);if("causal"===s)throw new Jp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=du({x:c,filter:e,strides:a,pad:"same"===s?"same":"valid",dilations:r,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===o&&(c=ou(c,[0,3,1,2])),c}))}Jb.className="Softmax",Ku(Jb);class sx extends Hg{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",sx.verifyArgs(e),this.rank=t,bf(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Jp("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=Qb(e.kernelSize,t,"kernelSize"),this.strides=Qb(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Ff(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Af(this.dataFormat),this.activation=Bb(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Rg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=lm(e.biasConstraint),this.biasRegularizer=jb(e.biasRegularizer),this.activityRegularizer=jb(e.activityRegularizer),this.dilationRate=Qb(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Zp("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Zp("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Zp("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(t){if(ef("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!mf(t.kernelSize,"number",1,3))throw new Zp("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(t.kernelSize),"."))}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:zb(this.activation),useBias:this.useBias,biasInitializer:Eg(this.biasInitializer),biasRegularizer:Gb(this.biasRegularizer),activityRegularizer:Gb(this.activityRegularizer),biasConstraint:im(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class ox extends sx{constructor(t,e){super(t,e),this.kernel=null,ox.verifyArgs(e),this.filters=e.filters,bf(this.filters,"filters"),this.kernelInitializer=Rg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=lm(e.kernelConstraint),this.kernelRegularizer=jb(e.kernelRegularizer)}build(t){t=_g(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Zp("The channel dimension of the input should be defined. "+"Found ".concat(t[e]));const n=t[e],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return So((()=>{let e;t=Dg(t);const n=null==this.bias?null:this.bias.read(),a=yf(this.activation.getClassName());if(null!=a&&2===this.rank)e=ax(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)e=function(t,e,n,a=1,s="valid",o,r=1){return So((()=>{if(null==o&&(o="channelsLast"),Af(o),3!==t.shape.length)throw new Zp("The input of a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead."));if(3!==e.shape.length)throw new Zp("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new Zp("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(n.shape.length," instead"));if("channelsFirst"===o&&(t=ou(t,[0,2,1])),"causal"===s)throw new Jp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=ui(t,e,a,"same"===s?"same":"valid","NWC",r);return null!=n&&(i=og(i,n)),i}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=ax(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Jp("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,a=[1,1,1],s="valid",o,r){return So((()=>{if(null==o&&(o="channelsLast"),Af(o),4!==t.rank&&5!==t.rank)throw new Zp("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(t.rank,"."));if(4!==e.rank&&5!==e.rank)throw new Zp("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(t.rank,"."));let i=nx(t,o);if("causal"===s)throw new Jp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=pi(i,e,a,"same"===s?"same":"valid","NDHWC",r),null!=n&&(i=og(i,n)),"channelsFirst"===o&&(i=ou(i,[0,4,1,2,3])),i}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=_g(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<n.length;++s){const t=$b(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);e.push(t)}let a=[t[0]];return"channelsLast"===this.dataFormat?(a=a.concat(e),a.push(this.filters)):(a.push(this.filters),a=a.concat(e)),a}getConfig(){const t={filters:this.filters,kernelInitializer:Eg(this.kernelInitializer),kernelRegularizer:Gb(this.kernelRegularizer),kernelConstraint:im(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new Zp("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(t.filters)))}}class rx extends ox{constructor(t){super(2,t),rx.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!mf(t.kernelSize,"number",1,2))throw new Zp("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(t.kernelSize),"."))}}rx.className="Conv2D",Ku(rx);class ix extends ox{constructor(t){super(3,t),ix.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Zp("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(t.kernelSize),"."))}}ix.className="Conv3D",Ku(ix);class cx extends rx{constructor(t){if(super(t),this.inputSpec=[new Bg({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Zp("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(t){if(4!==(t=_g(t)).length)throw new Zp("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Zp("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Bg({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return So((()=>{let e=Dg(t);if(4!==e.shape.length)throw new Zp("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(e.shape.length));const n=e.shape,a=n[0];let s,o;"channelsFirst"===this.dataFormat?(s=2,o=3):(s=1,o=2);const r=n[s],i=n[o],c=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],h=this.strides[1],d=[a,tx(r,u,c,this.padding),tx(i,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=ou(e,[0,2,3,1]));let p=di(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=ou(p,[0,3,1,2])),null!=this.bias&&(p=og(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=_g(t)).slice();let n,a,s;"channelsFirst"===this.dataFormat?(n=1,a=2,s=3):(n=3,a=1,s=2);const o=this.kernelSize[0],r=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return e[n]=this.filters,e[a]=tx(e[a],i,o,this.padding),e[s]=tx(e[s],c,r,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}cx.className="Conv2DTranspose",Ku(cx);class lx extends ix{constructor(t){if(super(t),this.inputSpec=[new Bg({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Zp("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(t){if(5!==(t=_g(t)).length)throw new Zp("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Zp("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Bg({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return So((()=>{let e=Dg(t);if(5!==e.shape.length)throw new Zp("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(e.shape.length));const n=e.shape,a=n[0];let s,o,r;"channelsFirst"===this.dataFormat?(r=2,s=3,o=4):(r=1,s=2,o=3);const i=n[r],c=n[s],l=n[o],u=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=[a,tx(i,p,u,this.padding),tx(c,f,h,this.padding),tx(l,g,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=ou(e,[0,2,3,4,1]));let b=gi(e,this.kernel.read(),m,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=ou(b,[0,4,1,2,3])),null!==this.bias&&(b=og(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(t){const e=(t=_g(t)).slice();let n,a,s,o;"channelsFirst"===this.dataFormat?(n=1,a=2,s=3,o=4):(n=4,a=1,s=2,o=3);const r=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],h=this.strides[2];return e[n]=this.filters,e[a]=tx(e[a],l,r,this.padding),e[s]=tx(e[s],u,i,this.padding),e[o]=tx(e[o],h,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}lx.className="Conv3DTranspose",Ku(lx);class ux extends ox{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Zp("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Zp("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Zp("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(e.padding)));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Rg(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=jb(e.depthwiseRegularizer),this.depthwiseConstraint=lm(e.depthwiseConstraint),this.pointwiseInitializer=Rg(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=jb(e.pointwiseRegularizer),this.pointwiseConstraint=lm(e.pointwiseConstraint)}build(t){if((t=_g(t)).length<this.rank+2)throw new Zp("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(t)));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Zp("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(t[e])));const n=t[e],a=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let r=0;r<this.rank;++r)s.push(1);s.push(n*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new Bg({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return So((()=>{let e;if(t=Dg(t),1===this.rank)throw new Jp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=ou(t,[0,2,3,1])),e=Rl(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=og(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=ou(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Eg(this.depthwiseInitializer),t.pointwiseInitializer=Eg(this.pointwiseInitializer),t.depthwiseRegularizer=Gb(this.depthwiseRegularizer),t.pointwiseRegularizer=Gb(this.pointwiseRegularizer),t.depthwiseConstraint=im(this.depthwiseConstraint),t.pointwiseConstraint=im(this.pointwiseConstraint),t}}ux.className="SeparableConv";class hx extends ux{constructor(t){super(2,t)}}hx.className="SeparableConv2D",Ku(hx);class dx extends ox{constructor(t){super(1,t),dx.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!mf(t.kernelSize,"number",1,1))throw new Zp("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(t.kernelSize),"."))}}dx.className="Conv1D",Ku(dx);class px extends Hg{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return So((()=>{if(t=Dg(t),"channelsLast"===this.dataFormat){const e=Zf(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Zf(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=Zf(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Zf(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}px.className="Cropping2D",Ku(px);class fx extends Hg{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Af(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,gf(Sf,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return So((()=>{let e=Dg(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=ou(e,[0,2,3,1]);const t=this.size[0]*n[2],a=this.size[1]*n[3],s="nearest"===this.interpolation?Wu.resizeNearestNeighbor(e,[t,a]):Wu.resizeBilinear(e,[t,a]);return ou(s,[0,3,1,2])}{const t=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?Wu.resizeNearestNeighbor(e,[t,a]):Wu.resizeBilinear(e,[t,a])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}fx.className="UpSampling2D",Ku(fx);class gx extends sx{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Rg(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=lm(t.depthwiseConstraint),this.depthwiseRegularizer=jb(t.depthwiseRegularizer)}build(t){if((t=_g(t)).length<4)throw new Zp("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(t),"."));const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Zp("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(t[e],")."));const n=t[e],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return So((()=>{let e=
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(t,e,n=[1,1],a="valid",s,o){return So((()=>{null==s&&(s="channelsLast"),Af(s);let r=ex(t,s);if(4!==t.rank)throw new Zp("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));if(4!==e.rank)throw new Zp("depthwiseKernel is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));return r=vi(r,e,n,"same"===a?"same":"valid","NHWC",o),"channelsFirst"===s&&(r=ou(r,[0,3,1,2])),r}))}(t=Dg(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=og(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=_g(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=$b(e,this.kernelSize[0],this.padding,this.strides[0]),o=$b(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],a,s,o]:[t[0],s,o,a]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Eg(this.depthwiseInitializer),t.depthwiseRegularizer=Gb(this.depthwiseRegularizer),t.depthwiseConstraint=im(this.depthwiseRegularizer),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function mx(t,e,n,a){if(Array.isArray(t)){if(null!=e||null!=n)throw new Zp("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=t.slice(t.length-a,t.length),t=t.slice(0,t.length-a)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function bx(t,e,n,a=!1,s,o,r=!1,i=!1){return So((()=>{const o=e.shape.length;if(o<3)throw new Zp("Input should be at least 3D, but is ".concat(o,"D."));const c=[1,0].concat(Gf(2,o));e=ou(e,c),r&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=cr(cr(s,"bool"),"float32")).rank===o-1&&(s=tc(s,-1)),s=ou(s,c)),a&&(e=Sl(e,0),null!=s&&(s=Sl(s,0)));const l=[];let u,h=n;const d=e.shape[0],p=au(e);let f,g;null!=s&&(f=au(s));for(let e=0;e<d;++e){const n=p[e],a=So((()=>t(n,h)));if(null==s)u=a[0],h=a[1];else{const t=So((()=>{const t=f[e],n=vc(Uc(t),t);return{output:ur(pr(a[0],t),pr(h[0],n)),newStates:h.map(((e,s)=>ur(pr(a[1][s],t),pr(e,n))))}}));u=t.output,h=t.newStates}i&&l.push(u)}if(i){g=jl(l,1)}return[u,g,h]}))}gx.className="DepthwiseConv2D",Ku(gx);class xx extends Hg{constructor(t){let e;if(super(t),null==t.cell)throw new Zp("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Nx({cells:t.cell}):t.cell,null==e.stateSize)throw new Zp("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Bg({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Gf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null))}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Ag(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let a;if(a=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const a of e)n.push([t[0],a]);return[a].concat(n)}return a}computeMask(t,e){return So((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Jp("Constants support is not implemented in RNN yet.");Ag(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Bg({shape:[e,null,...n]});const a=[t[0]].concat(t.slice(2));let s;if(this.cell.build(a),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!T(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new Zp("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=s.map((t=>new Bg({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){So((()=>{if(!this.stateful)throw new Xp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Zp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>_c([n,t]))):this.states_=[_c([n,this.cell.stateSize])];else if(null==t)No(this.states_),null!=this.keptStates&&(No(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>_c([n,t]))):this.states_[0]=_c([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Zp("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));!0===e?this.keptStates.push(this.states_.slice()):No(this.states_);for(let e=0;e<this.states_.length;++e){const a=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,o=[n,s];if(!T(a.shape,o))throw new Zp("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(o,", received shape=").concat(a.shape));this.states_[e]=a}}this.states_=this.states_.map((t=>To(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,a=null==e?null:e.constants;null==e&&(e={});const s=mx(t,n,a,this.numConstants);t=s.inputs,n=s.initialState,a=s.constants;let o=[],r=[];if(null!=n){e.initialState=n,o=o.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new Bg({shape:t.shape}));r=r.concat(this.stateSpec)}null!=a&&(e.constants=a,o=o.concat(a),this.numConstants=a.length);if(o[0]instanceof Wg){const n=[t].concat(o),a=this.inputSpec.concat(r),s=this.inputSpec;this.inputSpec=a;const i=super.apply(n,e);return this.inputSpec=s,i}return super.apply(t,e)}call(t,e){return So((()=>{const n=null==e?null:e.mask,a=null==e?null:e.training;let s=null==e?null:e.initialState;t=Dg(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==o)throw new Zp("RNN Layer has ".concat(o," state(s) but was passed ")+"".concat(s.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const r={training:a},i=bx(((t,e)=>{const n=this.cell.call([t].concat(e),r);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,0,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const h=this.returnSequences?l:c;return this.returnState?[h].concat(u):h}))}getInitialState(t){return So((()=>{let e=_c(t.shape);return e=Yi(e,[1,2]),e=qf(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?$f(e,[1,t]):e)):this.cell.stateSize>1?[$f(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===xx.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),t),e)}static fromConfig(t,e,n={}){const a=vm(e.cell,n);return new t(Object.assign(e,{cell:a}))}}xx.className="RNN",Ku(xx);class yx extends Hg{}class kx extends yx{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,bf(this.units,"units"),this.activation=Bb(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Rg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rg(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=jb(t.kernelRegularizer),this.recurrentRegularizer=jb(t.recurrentRegularizer),this.biasRegularizer=jb(t.biasRegularizer),this.kernelConstraint=lm(t.kernelConstraint),this.recurrentConstraint=lm(t.recurrentConstraint),this.biasConstraint=lm(t.biasConstraint),this.dropout=Uf([1,Vf([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Uf([1,Vf([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=_g(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return So((()=>{if(2!==t.length)throw new Zp("SimpleRNNCell expects 2 input Tensors, got ".concat(t.length,"."));let n=t[1];t=t[0];const a=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Tx({ones:()=>Uc(t),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Tx({ones:()=>Uc(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,r=this.recurrentDropoutMask;s=eg(null!=o?pr(t,o):t,this.kernel.read()),null!=this.bias&&(s=og(s,this.bias.read())),null!=r&&(n=pr(n,r));let i=ur(s,eg(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:zb(this.activation),useBias:this.useBias,kernelInitializer:Eg(this.kernelInitializer),recurrentInitializer:Eg(this.recurrentInitializer),biasInitializer:Eg(this.biasInitializer),kernelRegularizer:Gb(this.kernelRegularizer),recurrentRegularizer:Gb(this.recurrentRegularizer),biasRegularizer:Gb(this.biasRegularizer),activityRegularizer:Gb(this.activityRegularizer),kernelConstraint:im(this.kernelConstraint),recurrentConstraint:im(this.recurrentConstraint),biasConstraint:im(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}kx.className="SimpleRNNCell",Ku(kx);class wx extends xx{constructor(t){t.cell=new kx(t),super(t)}call(t,e){return So((()=>{null!=this.cell.dropoutMask&&(No(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(No(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:s})}))}static fromConfig(t,e){return new t(e)}}wx.className="SimpleRNN",Ku(wx);class vx extends yx{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Zp("GRUCell does not support reset_after parameter set to true.");this.units=t.units,bf(this.units,"units"),this.activation=Bb(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Bb(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Rg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rg(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=jb(t.kernelRegularizer),this.recurrentRegularizer=jb(t.recurrentRegularizer),this.biasRegularizer=jb(t.biasRegularizer),this.kernelConstraint=lm(t.kernelConstraint),this.recurrentConstraint=lm(t.recurrentConstraint),this.biasConstraint=lm(t.biasConstraint),this.dropout=Uf([1,Vf([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Uf([1,Vf([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=_g(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return So((()=>{if(2!==t.length)throw new Zp("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=null!=e.training&&e.training;let a=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Tx({ones:()=>Uc(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Tx({ones:()=>Uc(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let r,i,c;0<this.dropout&&this.dropout<1&&(t=pr(t,s[0]));let l=eg(t,this.kernel.read());this.useBias&&(l=og(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=pr(a,o[0]));const u=this.recurrentKernel.read(),[h,d]=Ul(u,[2*this.units,this.units],u.rank-1),p=eg(a,h),[f,g,m]=Ul(l,3,l.rank-1),[b,x]=Ul(p,2,p.rank-1);r=this.recurrentActivation.apply(ur(f,b)),i=this.recurrentActivation.apply(ur(g,x));const y=eg(pr(i,a),d);c=this.activation.apply(ur(m,y));const k=ur(pr(r,a),pr(ur(1,yc(r)),c));return[k,k]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:zb(this.activation),recurrentActivation:zb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Eg(this.kernelInitializer),recurrentInitializer:Eg(this.recurrentInitializer),biasInitializer:Eg(this.biasInitializer),kernelRegularizer:Gb(this.kernelRegularizer),recurrentRegularizer:Gb(this.recurrentRegularizer),biasRegularizer:Gb(this.biasRegularizer),activityRegularizer:Gb(this.activityRegularizer),kernelConstraint:im(this.kernelConstraint),recurrentConstraint:im(this.recurrentConstraint),biasConstraint:im(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}vx.className="GRUCell",Ku(vx);class Ix extends xx{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new vx(t),super(t)}call(t,e){return So((()=>{null!=this.cell.dropoutMask&&(No(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(No(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Ix.className="GRU",Ku(Ix);class Cx extends yx{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,bf(this.units,"units"),this.activation=Bb(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Bb(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Rg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rg(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=jb(t.kernelRegularizer),this.recurrentRegularizer=jb(t.recurrentRegularizer),this.biasRegularizer=jb(t.biasRegularizer),this.kernelConstraint=lm(t.kernelConstraint),this.recurrentConstraint=lm(t.recurrentConstraint),this.biasConstraint=lm(t.biasConstraint),this.dropout=Uf([1,Vf([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Uf([1,Vf([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=_g(t))[t.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;a=new((e=class extends ug{apply(e,a){const s=t.apply([n]),o=(new dg).apply([n]),r=t.apply([2*n]);return Qf(Qf(s,o),r)}}).className="CustomInit",e)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return So((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new Zp("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));let a=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Tx({ones:()=>Uc(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Tx({ones:()=>Uc(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,r=this.recurrentDropoutMask;let i,c,l,u;0<this.dropout&&this.dropout<1&&(t=pr(t,o[0]));let h=eg(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=pr(a,r[0])),h=ur(h,eg(a,this.recurrentKernel.read())),this.useBias&&(h=og(h,this.bias.read()));const[d,p,f,g]=Ul(h,4,h.rank-1);i=this.recurrentActivation.apply(d),c=this.recurrentActivation.apply(p),l=ur(pr(c,s),pr(i,this.activation.apply(f))),u=this.recurrentActivation.apply(g);const m=pr(u,this.activation.apply(l));return[m,m,l]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:zb(this.activation),recurrentActivation:zb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Eg(this.kernelInitializer),recurrentInitializer:Eg(this.recurrentInitializer),biasInitializer:Eg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Gb(this.kernelRegularizer),recurrentRegularizer:Gb(this.recurrentRegularizer),biasRegularizer:Gb(this.biasRegularizer),activityRegularizer:Gb(this.activityRegularizer),kernelConstraint:im(this.kernelConstraint),recurrentConstraint:im(this.recurrentConstraint),biasConstraint:im(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}Cx.className="LSTMCell",Ku(Cx);class Sx extends xx{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Cx(t),super(t)}call(t,e){return So((()=>{null!=this.cell.dropoutMask&&(No(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(No(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Sx.className="LSTM",Ku(Sx);class Nx extends yx{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return So((()=>{let n=t.slice(1);const a=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?a.push(n.splice(0,t.stateSize.length)):a.push(n.splice(0,1));a.reverse();const s=[];let o;for(let r=0;r<this.cells.length;++r){const i=this.cells[r];n=a[r],o=0===r?[t[0]].concat(n):[o[0]].concat(n),o=i.call(o,e),s.push(o.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[o[0]].concat(n)}))}build(t){let e;Ag(t)&&(t=t[0]),this.cells.forEach(((n,a)=>{Lf("RNNCell_".concat(a),(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign(Object.assign({},t),e)}static fromConfig(t,e,n={}){const a=[];for(const s of e.cells)a.push(vm(s,n));return new t({cells:a})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return zg(t)}setWeights(t){const e=[];for(const n of this.cells){const a=n.weights.length,s=t.splice(a);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Pg(e)}}function Tx(t){const{ones:e,rate:n,training:a=!1,count:s=1,dropoutFunc:o}=t,r=()=>null!=o?o(e(),n):rg(e(),n),i=()=>ig(r,e,a);if(!s||s<=1)return To(i().clone());return Array(s).fill(void 0).map(i).map((t=>To(t.clone())))}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */Nx.className="StackedRNNCells",Ku(Nx);class Ex extends xx{constructor(t){if(t.unroll)throw new Jp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Jp("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Bg({ndim:5})]}call(t,e){return So((()=>{if(null!=this.cell.dropoutMask&&(No(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(No(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Zp("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,a=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return So((()=>{const{stateSize:e}=this.cell,n=t.shape,a=this.computeSingleOutputShape(n),s=_c([a[0],...a.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){So((()=>{if(!this.stateful)throw new Xp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),s=[a[0],...a.slice(2)];if(null==n[0])throw new Zp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>_c(s))):this.states_=[_c(s)];else if(null==t)No(this.states_),null!=this.keptStates&&(No(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>_c(s))):this.states_[0]=_c(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Zp("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));e?this.keptStates.push(this.states_.slice()):No(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],a=s;if(!T(n.shape,a))throw new Zp("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[e]=n}}this.states_=this.states_.map((t=>To(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:a,padding:s,strides:o,dilationRate:r}=this.cell,i="channelsFirst"===e,c=t[i?3:2],l=t[i?4:3],u=$b(c,a[0],s,o[0],r[0]),h=$b(l,a[1],s,o[1],r[1]);return[...t.slice(0,2),...i?[n,u,h]:[u,h,n]]}}Ex.className="ConvRNN2D";class Rx extends Cx{constructor(t){const{filters:e,kernelSize:n,strides:a,padding:s,dataFormat:o,dilationRate:r}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,bf(this.filters,"filters"),this.kernelSize=Qb(n,2,"kernelSize"),this.kernelSize.forEach((t=>bf(t,"kernelSize"))),this.strides=Qb(a||1,2,"strides"),this.strides.forEach((t=>bf(t,"strides"))),this.padding=s||"valid",Ff(this.padding),this.dataFormat=o||"channelsLast",Af(this.dataFormat),this.dilationRate=Qb(r||1,2,"dilationRate"),this.dilationRate.forEach((t=>bf(t,"dilationRate")))}build(t){var e;t=_g(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Zp("The channel dimension of the input should be defined. "+"Found ".concat(t[n]));const a=t[n],s=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;t=new((e=class extends ug{apply(t,e){return Jf([n.apply([a]),Oc([a]),n.apply([2*a])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return So((()=>{if(3!==t.length)throw new Zp("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=e.training||!1,a=t[0],s=t[1],o=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Tx({ones:()=>Uc(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=(t,e,n)=>e&&e[n]?pr(e[n],t):t;let c=i(a,r,0),l=i(a,r,1),u=i(a,r,2),h=i(a,r,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Tx({ones:()=>Uc(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=i(s,d,0),f=i(s,d,1),g=i(s,d,2),m=i(s,d,3);const[b,x,y,k]=Ul(this.kernel.read(),4,3),[w,v,I,C]=this.useBias?Ul(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,b,w,this.padding),l=this.inputConv(l,x,v,this.padding),u=this.inputConv(u,y,I,this.padding),h=this.inputConv(h,k,C,this.padding);const[S,N,T,E]=Ul(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,N),g=this.recurrentConv(g,T),m=this.recurrentConv(m,E);const R=this.recurrentActivation.apply(ur(c,p)),A=this.recurrentActivation.apply(ur(l,f)),F=ur(pr(A,o),pr(R,this.activation.apply(ur(u,g)))),D=pr(this.recurrentActivation.apply(ur(h,m)),this.activation.apply(F));return[D,D,F]}))}getConfig(){const t=function(t,e){var n={};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&e.indexOf(a)<0&&(n[a]=t[a]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(a=Object.getOwnPropertySymbols(t);s<a.length;s++)e.indexOf(a[s])<0&&Object.prototype.propertyIsEnumerable.call(t,a[s])&&(n[a[s]]=t[a[s]])}return n}(super.getConfig(),["units"]),e={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),e)}inputConv(t,e,n,a){const s=li(t,e,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?og(s,n,this.dataFormat):s}recurrentConv(t,e){return li(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Rx.className="ConvLSTM2DCell",Ku(Rx);class Ax extends Ex{constructor(t){const e=new Rx(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}Ax.className="ConvLSTM2D",Ku(Ax);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Fx extends Hg{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?e[a]:this.noiseShape[a]);return n}call(t,e){return So((()=>{this.invokeCallHook(t,e);const n=Dg(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,a=this.getNoiseShape(n);return ig((()=>rg(n,this.rate,a,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Fx.className="Dropout",Ku(Fx);class Dx extends Fx{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Dx.className="SpatialDropout1D",Ku(Dx);class _x extends Hg{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,bf(this.units,"units"),this.activation=Bb(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Rg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Rg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=lm(t.kernelConstraint),this.biasConstraint=lm(t.biasConstraint),this.kernelRegularizer=jb(t.kernelRegularizer),this.biasRegularizer=jb(t.biasRegularizer),this.activityRegularizer=jb(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=_g(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=_g(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return So((()=>{this.invokeCallHook(t,e);const n=Dg(t),a=yf(this.activation.getClassName());let s;return null!=a?s=eg(n,this.kernel.read(),a,this.bias?this.bias.read():null):(s=eg(n,this.kernel.read()),null!=this.bias&&(s=og(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:zb(this.activation),useBias:this.useBias,kernelInitializer:Eg(this.kernelInitializer),biasInitializer:Eg(this.biasInitializer),kernelRegularizer:Gb(this.kernelRegularizer),biasRegularizer:Gb(this.biasRegularizer),activityRegularizer:Gb(this.activityRegularizer),kernelConstraint:im(this.kernelConstraint),biasConstraint:im(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}_x.className="Dense",Ku(_x);class Ox extends Hg{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=_g(t);for(const e of t.slice(1))if(null==e)throw new Zp('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(t.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[t[0],Wf(t,1)]}call(t,e){return So((()=>{this.invokeCallHook(t,e);let n=Dg(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=ou(n,t)}return function(t){if(t.rank<=1)throw new Zp("batchFlatten requires a minimum rank of 2. Got rank: ".concat(t.rank,"."));const e=[t.shape[0],Wf(t.shape,1)];return Ur(t,e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Ox.className="Flatten",Ku(Ox);class Lx extends Hg{constructor(t){super(t),this.supportsMasking=!0,this.activation=Bb(t.activation)}call(t,e){return So((()=>{this.invokeCallHook(t,e);const n=Dg(t);return this.activation.apply(n)}))}getConfig(){const t={activation:zb(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Lx.className="Activation",Ku(Lx);class Mx extends Hg{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return So((()=>{return t=Dg(t),e=t,n=this.n,So((()=>{if(2!==e.shape.length)throw new Zp("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(e.shape.length," tensor."));return $f(qf(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Mx.className="RepeatVector",Ku(Mx);class zx extends Hg{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",a=e.slice();let s=1,o=null;for(let i=0;i<a.length;++i){const t=a[i];if(this.isUnknown(t)){if(null!==o)throw new Zp("Can only specifiy one unknown dimension.");o=i}else s*=t}const r=Wf(t);if(null!==o){if(0===s||r%s!=0)throw new Zp(n);a[o]=r/s}else if(r!==s)throw new Zp(n);return a}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return So((()=>{this.invokeCallHook(t,e);const n=Dg(t),a=n.shape,s=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return Ur(n,s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}zx.className="Reshape",Ku(zx);class Px extends Hg{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(t.dims," instead."));const e=Gf(1,t.dims.length+1);if(!T(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Bg({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=_g(t)).slice();return this.dims.forEach(((n,a)=>{e[a+1]=t[n]})),e}call(t,e){return ou(Dg(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Px.className="Permute",Ku(Px);class Bx extends Hg{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Dg(t);return xr(Bc(n,this.maskValue),-1)}call(t,e){return So((()=>{this.invokeCallHook(t,e);const n=Dg(t),a=xr(Bc(n,this.maskValue),-1,!0);return pr(n,cr(a,n.dtype))}))}}Bx.className="Masking",Ku(Bx);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Wx extends Hg{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(sf(t.inputLength))}this.inputDim=t.inputDim,bf(this.inputDim,"inputDim"),this.outputDim=t.outputDim,bf(this.outputDim,"outputDim"),this.embeddingsInitializer=Rg(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=jb(t.embeddingsRegularizer),this.activityRegularizer=jb(t.activityRegularizer),this.embeddingsConstraint=lm(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return So((()=>this.maskZero?(t=Dg(t),Bc(t,Ri(t))):null))}computeOutputShape(t){if(t=_g(t),null==this.inputLength)return[...t,this.outputDim];const e=sf(this.inputLength);if(e.length!==t.length-1)throw new Zp('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));{let n=0;for(let a=0;a<e.length;++a){const s=e[a],o=t[a+1];if(null!=s&&null!=o&&s!==o)throw new Zp('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));null==s&&(e[n]=o),n++}}return[t[0],...e,this.outputDim]}call(t,e){return So((()=>{this.invokeCallHook(t,e);let n=Dg(t);"int32"!==n.dtype&&(n=Kf(n,"int32"));const a=ng(this.embeddings.read(),Ur(n,[n.size]));return Ur(a,_g(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Eg(this.embeddingsInitializer),embeddingsRegularizer:Gb(this.embeddingsRegularizer),activityRegularizer:Gb(this.activityRegularizer),embeddingsConstraint:im(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Wx.className="Embedding",Ku(Wx);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Ux extends Hg{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Jp}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let a=0;a<e.length;++a){const s=t[t.length-e.length+a],o=e[a];if(null==s||null==o||s<0||o<0)n.push(null);else if(1===s)n.push(o);else if(1===o)n.push(s);else{if(s!==o)throw new Zp("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[_g(t)]),t.length<2)throw new Zp("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(t.length," input(s)."));let e=[];for(const s of t)null!=s&&null!==s[0]&&e.push(s[0]);if(e=pf(e),e.length>1)throw new Zp("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(t),"."));let n=null==t[0]?null:t[0].slice(1);for(let s=1;s<t.length;++s){const e=null==t[s]?null:t[s].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const a=t.map((t=>t.length));-1===t.indexOf(null)&&1===pf(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return So((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const a=Vf(n);for(let n of t){const t=n.rank;for(let e=0;e<a-t;++e)n=qf(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const o of t){const t=o.rank;if(null==t){const t=o.shape,a=t[0],s=t.slice(1).concat([a]);let r=Ur(o,[a].concat(Wf(t.slice(1))));r=ou(r,[1,0]),r=Ur(r,s),e.push(r),n=!0}else if(t>1){const a=Gf(1,t).concat([0]);e.push(ou(o,a)),n=!0}else e.push(o)}let a=this.mergeFunction(e);const s=a.rank;if(n)if(null==s){const t=a.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));a=Ur(ou(Ur(a,[-1,e]),[1,0]),n)}else if(s>1){const t=[s-1].concat(Gf(0,s-1));a=ou(a,t)}return a}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const n=null==t[a]?null:t[a].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const a of t)null!=a&&null!==a[0]&&n.push(a[0]);return n=pf(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return So((()=>{if(null==e)return null;if(!Array.isArray(e))throw new Zp("`mask` should be an Array");if(!Array.isArray(t))throw new Zp("`inputs` should be an Array");if(e.length!==t.length)throw new Zp("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(t.length," vs ").concat(e.length,")"));if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:tc(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Sc(n,e[t]);return n}))}}class Vx extends Ux{constructor(t){super(t)}mergeFunction(t){return So((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=ur(e,t[n]);return e}))}}Vx.className="Add",Ku(Vx);class Gx extends Ux{constructor(t){super(t)}mergeFunction(t){return So((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=pr(e,t[n]);return e}))}}Gx.className="Multiply",Ku(Gx);class Hx extends Ux{constructor(t){super(t)}mergeFunction(t){return So((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=ur(e,t[n]);return pr(1/t.length,e)}))}}Hx.className="Average",Ku(Hx);class jx extends Ux{constructor(t){super(t)}mergeFunction(t){return So((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Fc(e,t[n]);return e}))}}jx.className="Maximum",Ku(jx);class Kx extends Ux{constructor(t){super(t)}mergeFunction(t){return So((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Lc(e,t[n]);return e}))}}Kx.className="Minimum",Ku(Kx);class qx extends Ux{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Zp("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const a of t)if(null!=a){e=!1;break}if(e)return;const n=[];for(let a=0;a<t.length;++a){const e=t[a].slice();e.splice(this.axis,1);let s=!1;for(const t of n)if(T(t,e)){s=!0;break}s||n.push(e)}if(n.length>1)throw new Zp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return So((()=>Jf(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Zp("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const s of e.slice(1)){if(null==n[a]||null==s[a]){n[a]=null;break}n[a]+=s[a]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Zp("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Zp("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Zp("Mismatch in the length of mask (".concat(e.length,") ")+"and the legnth of inputs (".concat(t.length,")"));return So((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const a=[];for(let o=0;o<t.length;++o)null==e[o]?a.push(cr(Uc(t[o]),"bool")):e[o].rank<t[o].rank?a.push(tc(e[o],-1)):a.push(e[o]);const s=Hr(a,this.axis);return br(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Xx(t,e){for(;t<0;)t+=e;return t}qx.className="Concatenate",Ku(qx);class Yx extends Ux{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){I(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Jp("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,n);if(e[a[0]]!==n[a[1]])throw new Zp("Dimension incompatibility: "+"".concat(e[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(t){if(2!==t.length)throw new Zp("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(t.length," input(s)."));let e,n=t[0],a=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>Xx(e,t[n].shape.length))):[Xx(this.axes,n.shape.length),Xx(this.axes,a.shape.length)],this.normalize&&(n=Im(n,e[0]),a=Im(a,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Jp("batchDot is not implemented for tensors of 4D or higher rank yet");if(I(t.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(t.shape.length))),I(t.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(e.shape.length))),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Jp("batchDot is not implemented for complex64-type Tensors yet.");const a=t.shape.length,s=e.shape.length;null==n&&(n=[a-1,s-2]);const o=n;return So((()=>{let n,r;if(a>s){n=a-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=Ur(e,e.shape.concat(t))}else if(s>a){n=s-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=Ur(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)r=o[0]===o[1]?Yi(pr(t,e),o[0]):Yi(pr(ou(t,[1,0]),e),o[1]);else{const n=o[0]!==t.shape.length-1,a=o[1]===e.shape.length-1;r=jr(t,e,n,a)}if(n>0){let t;t=a>s?a+s-3:a-1;const e=[];for(let a=t;a<t+n;++a)e.push(a);r=Hl(r,e)}return 1===r.shape.length&&(r=tc(r,1)),r}))}(n,a,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Xx(this.axes,t.length),Xx(this.axes,e.length)],n}computeOutputShape(t){I(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Jp("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,n);e.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Yx.className="Dot",Ku(Yx);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Zx extends Hg{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return So((()=>{this.invokeCallHook(t,e);const n=Dg(t);return ig((()=>ur(tg(n.shape,0,this.stddev),n)),(()=>n),e.training||!1)}))}}Zx.className="GaussianNoise",Ku(Zx);class Jx extends Hg{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return So((()=>{this.invokeCallHook(t,e);const n=Dg(t);if(this.rate>0&&this.rate<1){return ig((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return pr(n,tg(n.shape,1,t))}),(()=>n),e.training||!1)}return n}))}}Jx.className="GaussianDropout",Ku(Jx);class Qx extends Hg{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Dg(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return So((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return ig((()=>{const e=Dg(t),a=-1.7580993408473766;let s=ic(yl(n),this.rate);s=Kf(s,"float32");const o=((1-this.rate)*(1+this.rate*a**2))**-.5,r=-o*a*this.rate,i=ur(pr(e,s),pr(ur(s,-1),a));return ur(pr(i,o),r)}),(()=>Dg(t)),e.training||!1)}return t}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function $x(t,e,n,a,s,o=.001){let r;if(2===t.rank)r=Jr(t,e,n,a,s,o);else if(3===t.rank)r=Qr(t,e,n,a,s,o);else{if(4!==t.rank)throw new Jp("batchNormalization is not implemented for array of rank ".concat(t.rank," ")+"yet");r=$r(t,e,n,a,s,o)}return r}function ty(t,e,n,a,s=.001){return T(a.slice().sort(),Gf(0,t.rank-1))?function(t,e,n,a,s=.001){return So((()=>{const o=Pc(t,a),r=o.mean,i=o.variance;return[$x(t,r,i,n,e,s),r,i]}))}(t,e,n,a,s):function(t,e,n,a,s=.001){return So((()=>{const o=Pc(t,a),r=o.mean,i=o.variance,c=[];for(const e of Gf(0,t.rank))-1!==a.indexOf(e)?c.push(1):c.push(t.shape[e]);const l=Ur(r,c),u=Ur(i,c),h=null==e?null:Ur(e,c),d=null==n?null:Ur(n,c);return[$x(t,l,u,d,h,s),r,i]}))}(t,e,n,a,s)}Qx.className="AlphaDropout",Ku(Qx);class ey extends Hg{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Rg(t.betaInitializer||"zeros"),this.gammaInitializer=Rg(t.gammaInitializer||"ones"),this.movingMeanInitializer=Rg(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Rg(t.movingVarianceInitializer||"ones"),this.betaConstraint=lm(t.betaConstraint),this.gammaConstraint=lm(t.gammaConstraint),this.betaRegularizer=jb(t.betaRegularizer),this.gammaRegularizer=jb(t.gammaRegularizer)}build(t){t=_g(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Zp("Axis ".concat(e," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(t),"."));this.inputSpec=[new Bg({ndim:t.length,axes:{[e]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return So((()=>{const n=null!=e.training&&e.training,a=Dg(t),s=a.shape,o=s.length,r=Gf(0,o),i=this.axis>=0?this.axis:this.axis+o;r.splice(i,1);const c=tf(1,o);c[i]=s[i];const l=r.slice();l.sort();const u=!T(l,Gf(0,o).slice(0,o-1));if(!n)return(()=>{if(u){const t=Ur(this.movingMean.read(),c),e=Ur(this.movingVariance.read(),c),n=this.center?Ur(this.beta.read(),c):null,s=this.scale?Ur(this.gamma.read(),c):null;return $x(a,t,e,n,s,this.epsilon)}return $x(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=ty(a,this.gamma.read(),this.beta.read(),r,this.epsilon),f=(t,e,n)=>{So((()=>{const a=1-n,s=t.read(),o=pr(vc(s,e),a);t.write(vc(s,o))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Eg(this.betaInitializer),gammaInitializer:Eg(this.gammaInitializer),movingMeanInitializer:Eg(this.movingMeanInitializer),movingVarianceInitializer:Eg(this.movingVarianceInitializer),betaRegularizer:Gb(this.betaRegularizer),gammaRegularizer:Gb(this.gammaRegularizer),betaConstraint:im(this.betaConstraint),gammaConstraint:im(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}ey.className="BatchNormalization",Ku(ey);class ny extends Hg{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Rg(t.betaInitializer||"zeros"),this.gammaInitializer=Rg(t.gammaInitializer||"ones"),this.betaRegularizer=jb(t.betaRegularizer),this.gammaRegularizer=jb(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=_g(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=e);for(const s of this.axis)if(s<0||s>=e)throw new Error("Invalid axis: ".concat(s));if(this.axis.length!==pf(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((e=>t[e])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(t,e){const n=Dg(t),a=n.shape,s=a.length;return So((()=>{let{mean:t,variance:e}=Pc(n,this.axis,!0);const o=tf(1,s);for(const n of this.axis)o[n]=a[n];const r=t=>null!=t&&t.shape.length!==s?Ur(t,o):t;let i=this.scale?r(this.gamma.read()):null,c=this.center?r(this.beta.read()):null;const l=[],u=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(l.push(a[n]),u.push(1)):(l.push(1),u.push(a[n]));return t=nc(t,l),e=nc(e,l),null!=i&&(i=nc(i,u)),null!=c&&(c=nc(c,u)),$x(n,t,e,c,i,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Eg(this.betaInitializer),gammaInitializer:Eg(this.gammaInitializer),betaRegularizer:Gb(this.betaRegularizer),gammaRegularizer:Gb(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}ny.className="LayerNormalization",Ku(ny);class ay extends Hg{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Zp("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(t.padding.length," array."));let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Zp("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(t.padding[0].length," array."));if(e=t.padding[0],2!==t.padding[1].length)throw new Zp("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(t.padding[1].length," array."));n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Bg({ndim:4})]}computeOutputShape(t){let e,n;return t=_g(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return So((()=>{return e=Dg(t),n=this.padding,a=this.dataFormat,So((()=>{if(4!==e.rank)throw new Zp("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(e.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Zp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new Zp("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let t;return t="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Vc(e,t)}));
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var e,n,a}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function sy(t,e,n,a,s,o){return So((()=>{let r;Af(s),Df(o),Ff(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==s&&(s="channelsLast"),null==o&&(o="max"),t=ex(t,s);const i="same"===a?"same":"valid";return r="max"===o?Rc(t,e,n,i):Vr(t,e,n,i),"channelsFirst"===s&&(r=ou(r,[0,3,1,2])),r}))}function oy(t,e,n,a,s,o){return So((()=>{let r;Af(s),Df(o),Ff(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==s&&(s="channelsLast"),null==o&&(o="max"),t=nx(t,s);const i="same"===a?"same":"valid";return r="max"===o?Ac(t,e,n,i):Gr(t,e,n,i),"channelsFirst"===s&&(r=ou(r,[0,4,1,2,3])),r}))}ay.className="ZeroPadding2D",Ku(ay);class ry extends Hg{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new Zp("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.poolSize)));this.poolSize=t.poolSize}if(bf(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new Zp("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.strides)));this.strides=t.strides}bf(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Ff(this.padding),this.inputSpec=[new Bg({ndim:3})]}computeOutputShape(t){const e=$b((t=_g(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return So((()=>{this.invokeCallHook(t,e),t=qf(Dg(t),2);const n=this.poolingFunction(Dg(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Hl(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class iy extends ry{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Af(s),Ff(a),sy(t,e,n,a,s,"max")}}iy.className="MaxPooling1D",Ku(iy);class cy extends ry{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Af(s),Ff(a),sy(t,e,n,a,s,"avg")}}cy.className="AveragePooling1D",Ku(cy);class ly extends Hg{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Zp("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides];bf(this.poolSize,"poolSize"),bf(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Af(this.dataFormat),Ff(this.padding),this.inputSpec=[new Bg({ndim:4})]}computeOutputShape(t){t=_g(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=$b(e,this.poolSize[0],this.padding,this.strides[0]),n=$b(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return So((()=>(this.invokeCallHook(t,e),this.poolingFunction(Dg(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class uy extends ly{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Af(s),Ff(a),sy(t,e,n,a,s,"max")}}uy.className="MaxPooling2D",Ku(uy);class hy extends ly{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Af(s),Ff(a),sy(t,e,n,a,s,"avg")}}hy.className="AveragePooling2D",Ku(hy);class dy extends Hg{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Zp("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];bf(this.poolSize,"poolSize"),bf(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Af(this.dataFormat),Ff(this.padding),this.inputSpec=[new Bg({ndim:5})]}computeOutputShape(t){t=_g(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[4]:t[3];return e=$b(e,this.poolSize[0],this.padding,this.strides[0]),n=$b(n,this.poolSize[1],this.padding,this.strides[1]),a=$b(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,a]:[t[0],e,n,a,t[4]]}call(t,e){return So((()=>(this.invokeCallHook(t,e),this.poolingFunction(Dg(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class py extends dy{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Af(s),Ff(a),oy(t,e,n,a,s,"max")}}py.className="MaxPooling3D",Ku(py);class fy extends dy{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Af(s),Ff(a),oy(t,e,n,a,s,"avg")}}fy.className="AveragePooling3D",Ku(fy);class gy extends Hg{constructor(t){super(t),this.inputSpec=[new Bg({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Jp}}class my extends gy{constructor(t){super(t||{})}call(t,e){return So((()=>{const e=Dg(t);return Dc(e,1)}))}}my.className="GlobalAveragePooling1D",Ku(my);class by extends gy{constructor(t){super(t||{})}call(t,e){return So((()=>{const e=Dg(t);return Gi(e,1)}))}}by.className="GlobalMaxPooling1D",Ku(by);class xy extends Hg{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Af(this.dataFormat),this.inputSpec=[new Bg({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Jp}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class yy extends xy{call(t,e){return So((()=>{const e=Dg(t);return"channelsLast"===this.dataFormat?Dc(e,[1,2]):Dc(e,[2,3])}))}}yy.className="GlobalAveragePooling2D",Ku(yy);class ky extends xy{call(t,e){return So((()=>{const e=Dg(t);return"channelsLast"===this.dataFormat?Gi(e,[1,2]):Gi(e,[2,3])}))}}ky.className="GlobalMaxPooling2D",Ku(ky);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class wy extends Hg{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const a=vm(e.layer,n);delete e.layer;const s={layer:a};return Object.assign(s,e),new t(s)}}class vy extends wy{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=_g(t)).length<3)throw new Zp("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(t)));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=_g(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),a=t[1];return[n[0],a].concat(n.slice(1))}call(t,e){return So((()=>bx(((t,n)=>[Dg(this.layer.call(t,e)),[]]),t=Dg(t),[],!1,null,0,!1,!0)[1]))}}vy.className="TimeDistributed",Ku(vy);class Iy extends wy{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=vm(n),e.goBackwards=!0!==e.goBackwards;const a={};var s;if(a.className=t.layer.getClassName(),a.config=e,this.backwardLayer=vm(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,gf(Ef,"BidirectionalMergeMode",s),t.weights)throw new Jp("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,a,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(a=s.slice(1),e=s[0]):e=s[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[e].concat(a).concat(a.slice()):af(n)}apply(t,e){let n=null==e?null:e.initialState,a=null==e?null:e.constants;null==e&&(e={});const s=mx(t,n,a,this.numConstants);if(t=s.inputs,n=s.initialState,a=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==a)return super.apply(t,e);const o=[],r=[];if(null!=n){const t=n.length;if(t%2>0)throw new Zp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,o.push(...n);const a=n.map((t=>new Bg({shape:t.shape})));this.forwardLayer.stateSpec=a.slice(0,t/2),this.backwardLayer.stateSpec=a.slice(t/2),r.push(...a)}if(null!=a)throw new Jp("Support for constants in Bidirectional layers is not implemented yet.");const i=o[0]instanceof Wg;for(const c of o)if(c instanceof Wg!==i)throw new Zp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[t].concat(o),a=this.inputSpec.concat(r),s=this.inputSpec;this.inputSpec=a;const i=super.apply(n,e);return this.inputSpec=s,i}return super.apply(t,e)}call(t,e){return So((()=>{const n=e.initialState;let a,s,o,r;if(null==n)a=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const o=n.slice(0,n.length/2),r=n.slice(n.length/2);a=this.forwardLayer.call(t,Object.assign(e,{initialState:o})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:r}))}return this.returnState&&(Array.isArray(a)&&(o=a.slice(1).concat(s.slice(1))),a=a[0],s=s[0]),this.returnSequences&&(s=Sl(s,1)),"concat"===this.mergeMode?r=Jf([a,s]):"sum"===this.mergeMode?r=ur(a,s):"ave"===this.mergeMode?r=pr(.5,ur(a,s)):"mul"===this.mergeMode?r=pr(a,s):null==this.mergeMode&&(r=[a,s]),this.returnState?null==this.mergeMode?r.concat(o):[r].concat(o):r}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Lf(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Lf(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=vm(e.layer);if(delete e.layer,null!=e.numConstants)throw new Jp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=e;return a.layer=n,new t(a)}}Iy.className="Bidirectional",Ku(Iy);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Cy extends Hg{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return So((()=>("float32"!==(t=Dg(t)).dtype&&(t=Kf(t,"float32")),ur(pr(t,this.scale),this.offset))))}}Cy.className="Rescaling",Ku(Cy);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const{resizeBilinear:Sy,cropAndResize:Ny}=Wu;class Ty extends Hg{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,n,a,s,o,r,i){return So((()=>{let c,l=!1;const u=[e/o,n/r,(a+e)/o,(s+n)/r],h=[];3===t.rank?(l=!0,c=jl([t])):c=t;for(let t=0;t<c.shape[0];t++)h.push(u);const d=wo(h,[h.length,4]),p=kl(0,h.length,1,"int32"),f=Ny(c,d,p,[a,s],"nearest");return Kf(l?Dg(au(f)):f,i)}))}upsize(t,e,n,a){return So((()=>Kf(Sy(t,[e,n]),a)))}call(t,e){return So((()=>{const e=Dg(t),n=e.dtype,a=e.shape,s=a[a.length-3],o=a[a.length-2];let r=0;s!==this.height&&(r=Math.floor((s-this.height)/2));let i=0;return o!==this.width&&(i=Math.floor((o-this.width)/2),0===i&&(i=1)),r>=0&&i>=0?this.centerCrop(e,r,i,this.height,this.width,s,o,n):this.upsize(t,this.height,this.width,n)}))}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){const e=(t=_g(t)).length-3,n=t.length-2;return t[e]=this.height,t[n]=this.width,t}}Ty.className="CenterCrop",Ku(Ty);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Ey extends Hg{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return null==(t=_g(t))?[this.numTokens]:"oneHot"===this.outputMode&&1!==t[t.length-1]?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return So((()=>{let n;if("int32"!==(t=Dg(t)).dtype&&(t=Kf(t,"int32")),void 0!==e.countWeights){if("count"!==this.outputMode)throw new Zp("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(e.countWeights));n=Dg(e.countWeights)}const a=Gi(t),s=Hi(t),o=rc(this.numTokens,a).bufferSync().get(0),r=ic(s,0).bufferSync().get(0);if(!o||!r)throw new Zp("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
return function(t,e,n,a){let s=Dg(t);if("int32"!==s.dtype&&(s=Kf(s,"int32")),"int"===e)return s;const o=s.shape;if(0===s.rank&&(s=tc(s,-1)),"oneHot"===e&&1!==s.shape[s.shape.length-1]&&(s=tc(s,-1)),s.rank>2)throw new Zp("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(e," and input shape ").concat(o)+" which would result in output rank ".concat(s.rank,"."));const r=["multiHot","oneHot"].includes(e);let i;if(i=ki(s,void 0!==a&&"count"===e?a:[],n,r),"tfIdf"!==e)return i;if(a)return pr(i,a);throw new Zp("When outputMode is 'tfIdf', weights must be provided.")}(t,this.outputMode,this.numTokens,n)}))}}Ey.className="CategoryEncoding",Ku(Ey);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const Ry=new Set(["bilinear","nearest"]);class Ay extends Hg{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation){if(!Ry.has(t.interpolation))throw new Zp("Invalid interpolation parameter: ".concat(t.interpolation," is not implemented"));this.interpolation=t.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){const e=(t=_g(t))[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return So((()=>{const e=[this.height,this.width];if("bilinear"===this.interpolation)return Wu.resizeBilinear(t,e,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Wu.resizeNearestNeighbor(t,e,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Ry]," are supported"))}))}}Ay.className="Resizing",Ku(Ay);
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Fy{constructor(t){this.seed=t}next(){if(void 0!==this.seed)return this.seed++}}Fy.className="RandomSeed";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Dy extends Hg{constructor(t){super(t),this.randomGenerator=new Fy(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}Dy.className="BaseRandomLayer";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const _y=new Set(["bilinear","nearest"]);class Oy extends Dy{constructor(t){super(t);const{factor:e,interpolation:n="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Zp("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Zp("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new Zp("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!_y.has(n))throw new Zp("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){const e=(t=_g(t))[2];return[this.imgHeight,-1,e]}call(t,e){return So((()=>{const e=Dg(t);this.imgHeight=e.shape[e.shape.length-3];const n=e.shape[e.shape.length-2];this.widthFactor=yl([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const s=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return Wu.resizeBilinear(t,s);case"nearest":return Wu.resizeNearestNeighbor(t,s);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([..._y]," are supported"))}}))}}Oy.className="RandomWidth",Ku(Oy);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var Ly,My,zy,Py,By,Wy,Uy;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vy(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&I("complex64"!==t.dtype,(()=>"".concat(e," does not support complex64 tensors in the CPU backend.")))}))}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),(My=Ly||(Ly={}))[My.DT_INVALID=0]="DT_INVALID",My[My.DT_FLOAT=1]="DT_FLOAT",My[My.DT_DOUBLE=2]="DT_DOUBLE",My[My.DT_INT32=3]="DT_INT32",My[My.DT_UINT8=4]="DT_UINT8",My[My.DT_INT16=5]="DT_INT16",My[My.DT_INT8=6]="DT_INT8",My[My.DT_STRING=7]="DT_STRING",My[My.DT_COMPLEX64=8]="DT_COMPLEX64",My[My.DT_INT64=9]="DT_INT64",My[My.DT_BOOL=10]="DT_BOOL",My[My.DT_QINT8=11]="DT_QINT8",My[My.DT_QUINT8=12]="DT_QUINT8",My[My.DT_QINT32=13]="DT_QINT32",My[My.DT_BFLOAT16=14]="DT_BFLOAT16",My[My.DT_QINT16=15]="DT_QINT16",My[My.DT_QUINT16=16]="DT_QUINT16",My[My.DT_UINT16=17]="DT_UINT16",My[My.DT_COMPLEX128=18]="DT_COMPLEX128",My[My.DT_HALF=19]="DT_HALF",My[My.DT_RESOURCE=20]="DT_RESOURCE",My[My.DT_VARIANT=21]="DT_VARIANT",My[My.DT_UINT32=22]="DT_UINT32",My[My.DT_UINT64=23]="DT_UINT64",My[My.DT_FLOAT_REF=101]="DT_FLOAT_REF",My[My.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",My[My.DT_INT32_REF=103]="DT_INT32_REF",My[My.DT_UINT8_REF=104]="DT_UINT8_REF",My[My.DT_INT16_REF=105]="DT_INT16_REF",My[My.DT_INT8_REF=106]="DT_INT8_REF",My[My.DT_STRING_REF=107]="DT_STRING_REF",My[My.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",My[My.DT_INT64_REF=109]="DT_INT64_REF",My[My.DT_BOOL_REF=110]="DT_BOOL_REF",My[My.DT_QINT8_REF=111]="DT_QINT8_REF",My[My.DT_QUINT8_REF=112]="DT_QUINT8_REF",My[My.DT_QINT32_REF=113]="DT_QINT32_REF",My[My.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",My[My.DT_QINT16_REF=115]="DT_QINT16_REF",My[My.DT_QUINT16_REF=116]="DT_QUINT16_REF",My[My.DT_UINT16_REF=117]="DT_UINT16_REF",My[My.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",My[My.DT_HALF_REF=119]="DT_HALF_REF",My[My.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",My[My.DT_VARIANT_REF=121]="DT_VARIANT_REF",My[My.DT_UINT32_REF=122]="DT_UINT32_REF",My[My.DT_UINT64_REF=123]="DT_UINT64_REF",Py=zy||(zy={}),(By=Py.CheckpointFormatVersion||(Py.CheckpointFormatVersion={}))[By.LEGACY=0]="LEGACY",By[By.V1=1]="V1",By[By.V2=2]="V2",(Uy=Wy||(Wy={}))[Uy.FAIL=0]="FAIL",Uy[Uy.SHORTEST=1]="SHORTEST",Uy[Uy.LONGEST=2]="LONGEST";const Gy=su;class Hy extends b{nextDataId(){return Hy.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new m(this,Io())}write(t,e,n){this.firstUse&&(this.firstUse=!1,at().get("IS_NODE")&&ka("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:t,dtype:n,refCount:1}),a}makeTensorInfo(t,e,n){let a;if("string"===e&&null!=n&&n.length>0&&B(n[0])){const s=n.map((t=>xs(t)));a=this.write(s,t,e)}else a=this.write(n,t,e);return{dataId:a,shape:t,dtype:e}}refCount(t){if(this.data.has(t)){return this.data.get(t).refCount}return 0}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,a,s){this.data.set(t,{values:e,dtype:a,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){return Qh(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(t,e){if(Array.isArray(t))return t;if("float32"===e)return t instanceof Float32Array?t:new Float32Array(t);if("int32"===e)return t instanceof Int32Array?t:new Int32Array(t);if("bool"===e||"string"===e)return Uint8Array.from(new Int32Array(t));throw new Error("Unknown dtype ".concat(e))}(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>ys(t)));return ir(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return ir(t.shape,t.dtype,e)}makeOutput(t,e,n){return Io().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=bs();t();return{kernelMs:bs()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Vy([t],"where");const e=this.readSync(t.dataId);return Gy(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jy(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}Hy.nextDataId=0;const Ky={kernelName:ct,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;Vy(e,"abs");let a=new Float32Array(N(e.shape));return a=jy(n.data.get(e.dataId).values),n.makeOutput(a,e.shape,e.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qy(t){return(e,n,a,s,o)=>{const r=Ni(e,n),i=r.length,c=H(r),l=L(o,N(r)),u=e.length,h=n.length,d=H(e),p=H(n),f=Ci(e,r),g=Ci(n,r);if(f.length+g.length===0)for(let m=0;m<l.length;++m)l[m]=t(a[m%a.length],s[m%s.length]);else for(let m=0;m<l.length;++m){const e=Q(m,i,c),n=e.slice(-u);f.forEach((t=>n[t]=0));const o=J(n,u,d),r=e.slice(-h);g.forEach((t=>r[t]=0));const b=J(r,h,p);l[m]=t(a[o],s[b])}return[l,r]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xy(t){const{inputs:e,backend:n}=t,{real:a,imag:s}=e,o=n.data.get(a.dataId).values,r=n.data.get(s.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",o),imag:n.makeTensorInfo(s.shape,"float32",r)},i}const Yy={kernelName:Ot,backendName:"cpu",kernelFunc:Xy};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zy(t,e,n="float32"){if("complex64"===n){return Xy({inputs:{real:Zy(t,e,"float32"),imag:Zy(t,e,"float32")},backend:t})}const a=X(N(e),n);return t.makeTensorInfo(e,n,a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jy(t){const{inputs:e,backend:n}=t,{x:a}=e;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Qy={kernelName:Ie,backendName:"cpu",kernelFunc:Jy};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $y(t){const{inputs:e,backend:n}=t,{input:a}=e,s=n.data.get(a.dataId).complexTensorInfos.real,o=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,o)}const tk={kernelName:bn,backendName:"cpu",kernelFunc:$y};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ek(t,e,n,a){if("int32"===a){return[e,"int32",Int32Array.from(t)]}if("bool"===a){const a=ms([0],n),[s,o]=qy(((t,e)=>t!==e?1:0))(e,[],t,a,"bool");return[o,"bool",s]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function nk(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{dtype:o}=a;if("complex64"===o){if("complex64"===s.dtype)return Jy({inputs:{x:s},backend:n});const t=Zy(n,s.shape,s.dtype),e=nk({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),a=Xy({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),a}if("complex64"===s.dtype){const t=$y({inputs:{input:s},backend:n}),e=nk({inputs:{x:t},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(t),e}if(!z(s.dtype,o)){const t=Jy({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:o}}const r=n.data.get(s.dataId).values,[i,c,l]=ek(r,s.shape,s.dtype,o);return n.makeTensorInfo(i,c,l)}const ak={kernelName:Ft,backendName:"cpu",kernelFunc:nk};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(t,e,n,a){return null==n?({inputs:n,backend:s})=>{const{a:o,b:r}=n,i=s;Vy([o,r],t);const c=i.data.get(o.dataId).values,l=i.data.get(r.dataId).values,u="string"===o.dtype?_d(c):c,h="string"===o.dtype?_d(l):l,d=a||o.dtype,[p,f]=e(o.shape,r.shape,u,h,d);return i.makeTensorInfo(f,d,p)}:({inputs:t,backend:s})=>{const{a:o,b:r}=t,i=s;if("complex64"===o.dtype||"complex64"===r.dtype){const t=nk({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),e=i.data.get(t.dataId),a=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,c=i.data.get(a.dataId).values,l=i.data.get(s.dataId).values,u=nk({inputs:{x:r},backend:i,attrs:{dtype:"complex64"}}),h=i.data.get(u.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=i.data.get(d.dataId).values,g=i.data.get(p.dataId).values,[m,b,x]=n(o.shape,r.shape,c,l,f,g),y=i.makeTensorInfo(x,"float32",m),k=i.makeTensorInfo(x,"float32",b),w=Xy({inputs:{real:y,imag:k},backend:i});return i.disposeIntermediateTensorInfo(t),i.disposeIntermediateTensorInfo(u),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(k),w}{const t=i.data.get(o.dataId).values,n=i.data.get(r.dataId).values,s=a||o.dtype,[c,l]=e(o.shape,r.shape,t,n,s);return i.makeTensorInfo(l,s,c)}}}function ok(t){return(e,n,a,s,o,r)=>{const i=Ni(e,n),c=N(i),l=i.length,u=H(i),h=L("float32",c),d=L("float32",c),p=Ci(e,i),f=Ci(n,i),g=Qh(a,s),m=Qh(o,r),b=e.length,x=H(e),y=n.length,k=H(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const e=w%g.length,n=w%m.length,a=t(g[2*e],g[2*e+1],m[2*n],m[2*n+1]);h[w]=a.real,d[w]=a.imag}else for(let w=0;w<h.length;w++){const e=Q(w,l,u),n=e.slice(-b);p.forEach((t=>n[t]=0));const a=J(n,b,x),s=e.slice(-y);f.forEach((t=>s[t]=0));const o=J(s,y,k),r=t(g[2*a],g[2*a+1],m[2*o],m[2*o+1]);h[w]=r.real,d[w]=r.imag}return[h,d,i]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rk=qy(((t,e)=>t+e)),ik=ok(((t,e,n,a)=>({real:t+n,imag:e+a}))),ck=sk(ht,rk,ik),lk={kernelName:ht,backendName:"cpu",kernelFunc:ck};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uk(t,e,n,a,s){const o=N(a),r=X(s,n);for(let i=0;i<t.length;i++){const n=t[i];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(r[n]+=o>0?e[i]:1)}return r}function hk(t,e,n,a=!1){const s=t.shape[0],o=t.shape[1],r=ir([s,n],e.dtype);for(let i=0;i<s;i++)for(let s=0;s<o;s++){const o=t.get(i,s);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(a?r.set(1,i,o):e.size>0?r.set(r.get(i,o)+e.get(i,s),i,o):r.set(r.get(i,o)+1,i,o))}return r}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dk=qy(((t,e)=>t&e)),pk={kernelName:Rt,backendName:"cpu",kernelFunc:sk(Rt,dk)};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fk(t){return(e,n,a)=>{const s=M(n,e.length);for(let o=0;o<e.length;++o)s[o]=t(e[o],a);return s}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gk(t,e,n){return mk(t,fk(e),n)}function mk(t,e,n){return({inputs:a,attrs:s,backend:o})=>{const{x:r}=a;Vy(r,t);const i=o,c=i.data.get(r.dataId).values;let l;if("string"===r.dtype){if(!Array.isArray(c))throw new Error("String tensor's value was not an instance of Array");l=_d(c)}else l=c;const u=n||r.dtype,h=e(l,u,s);return i.makeTensorInfo(r.shape,u,h)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bk=fk((t=>Math.ceil(t))),xk=mk(Dt,bk),yk={kernelName:Dt,backendName:"cpu",kernelFunc:xk};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kk(t,e,n,a){const s=M(n,N(e));if(a&&"string"!==n){let e=0;t.forEach((t=>{const n=N(t.shape);s.set(t.vals,e),e+=n}))}else{let a=0;t.forEach((t=>{const o="string"===n?_d(t.vals):t.vals;let r=0;for(let n=0;n<t.shape[0];++n){const i=n*e[1]+a;for(let e=0;e<t.shape[1];++e)s[i+e]=o[r++]}a+=t.shape[1]}))}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk=qy(((t,e)=>t===e?1:0)),vk=sk(le,wk,null,"bool"),Ik={kernelName:le,backendName:"cpu",kernelFunc:vk},Ck=fk((t=>Math.exp(t))),Sk=mk(ue,Ck,"float32"),Nk={kernelName:ue,backendName:"cpu",kernelFunc:Sk},Tk=fk((t=>Math.expm1(t))),Ek=mk(de,Tk),Rk={kernelName:de,backendName:"cpu",kernelFunc:Ek},Ak=fk((t=>Math.floor(t))),Fk=mk(me,Ak),Dk={kernelName:me,backendName:"cpu",kernelFunc:Fk},_k=qy(((t,e)=>Math.floor(t/e))),Ok=sk(be,_k,null,"int32"),Lk={kernelName:be,backendName:"cpu",kernelFunc:Ok};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mk(t,e,n,a,s,o,r,i,c){const l=ir([a,o],n);for(let u=0;u<a;u++){const n=[];let a=0;for(let e=0;e<s;e++){const o=t[u*s+e];a+=o*r[e],n.push(o)}if(a<0||a>=c/o)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(i));for(let t=0;t<o;t++)l.values[u*o+t]=e.get(...e.indexToLoc(a*o+t))}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zk(t,e,n){const a=ir(n,t.dtype);for(let s=0;s<a.size;++s){const n=a.indexToLoc(s).slice(),o=n[0],r=n[2],i=e.locToIndex([o,r]);n[2]=e.values[i];const c=t.locToIndex(n);0<=c&&c<t.values.length&&(a.values[s]=t.values[c])}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pk=qy(((t,e)=>t>e?1:0)),Bk=sk(we,Pk,null,"bool"),Wk={kernelName:we,backendName:"cpu",kernelFunc:Bk},Uk=qy(((t,e)=>t>=e?1:0)),Vk=sk(ve,Uk,null,"bool"),Gk={kernelName:ve,backendName:"cpu",kernelFunc:Vk},Hk=qy(((t,e)=>t<e?1:0)),jk=sk(Ae,Hk,null,"bool"),Kk={kernelName:Ae,backendName:"cpu",kernelFunc:jk},qk=qy(((t,e)=>t<=e?1:0)),Xk=sk(Fe,qk,null,"bool"),Yk={kernelName:Fe,backendName:"cpu",kernelFunc:Xk};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zk(t,e,n){const a=(e-t)/(n-1),s=X(n,"float32");s[0]=t;for(let o=1;o<s.length;o++)s[o]=s[o-1]+a;return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jk=fk((t=>Math.log(t))),Qk=mk(_e,Jk),$k={kernelName:_e,backendName:"cpu",kernelFunc:Qk};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tw(t,e,n,a){const s=L(a,N(n));for(let o=0;o<s.length;++o){const n=o*e;let a=t[n];for(let s=0;s<e;++s){const e=t[n+s];(Number.isNaN(e)||e>a)&&(a=e)}s[o]=a}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ew=qy(((t,e)=>Math.max(t,e))),nw=sk(Ue,ew),aw={kernelName:Ue,backendName:"cpu",kernelFunc:nw},sw=qy(((t,e)=>Math.min(t,e))),ow=sk(Ye,sw),rw={kernelName:Ye,backendName:"cpu",kernelFunc:ow},iw=qy(((t,e)=>t*e)),cw=ok(((t,e,n,a)=>({real:t*n-e*a,imag:t*a+e*n}))),lw=sk($e,iw,cw),uw={kernelName:$e,backendName:"cpu",kernelFunc:lw};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hw(t,e,n){const a=gs(-1,n);return iw([],e,a,t,n)}const dw={kernelName:tn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;Vy(a,"neg");const s=n.data.get(a.dataId).values,[o,r]=hw(s,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,o)}},pw=qy(((t,e)=>t!==e?1:0)),fw=sk(en,pw,null,"bool"),gw={kernelName:en,backendName:"cpu",kernelFunc:fw};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mw(t,e,n,a,s){const o=e.length,r=N(e),i=H(e),c=H(s),l=L(n,N(s));for(let u=0;u<r;++u){const e=Q(u,o,i),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[a[t]];l[J(n,o,c)]=t[u]}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bw(t){const{inputs:e,attrs:n,backend:a}=t,{x:s}=e,{perm:o}=n;Vy(s,"transpose");const r=s.shape.length,i=new Array(r);for(let l=0;l<i.length;l++)i[l]=s.shape[o[l]];const c=mw(a.data.get(s.dataId).values,s.shape,s.dtype,o,i);return{dataId:a.write(c,i,s.dtype),shape:i,dtype:s.dtype}}const xw={kernelName:la,backendName:"cpu",kernelFunc:bw};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yw(t,e,n,a){const[s,o]=zi(t,a),r=Zs(e,"int32"),i=X(N(s),r),c=N(o);for(let l=0;l<i.length;++l){const t=l*c;let e=1;for(let a=0;a<c;++a)e*=n[t+a];i[l]=e}return{outVals:i,outShape:s,outDtype:r}}const kw={kernelName:dn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:r}=a;Vy(s,"prod");const i=s.shape.length,c=_(o,s.shape),l=Wi(c,i);let u=c,h=s;const d=[];null!=l&&(h=bw({inputs:{x:s},backend:n,attrs:{perm:l}}),d.push(h),u=Vi(u.length,i));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=yw(h.shape,h.dtype,p,u);let b=g;return r&&(b=Pi(g,c)),d.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(b,m,f)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ww(t,e,n,a){const s=[];let o=0;const r=e.length-1+n.length,i=new Array(r).fill(null).map((()=>[0]));!function(t,e){for(let n=0;n<t.length;++n){const a=t[n],s=n===t.length-1?e:t[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>s)throw new Error("Ragged splits must not point past values");for(let t=1;t<a.length;++t)if(a[t-1]>a[t])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<e.length-1;++l){c*=e[l];const t=e[l+1];for(let e=1;e<c+1;++e)i[l].push(e*t)}for(let l=0;l<t.length;++l){let a=t[l],r=t[l]+1;for(let t=0;t<n.length;++t){const s=n[t],o=t+e.length-1;if(o>=0){const t=i[o],e=t[t.length-1]-s[a];for(let n=a;n<r;++n)i[o].push(s[n+1]+e)}a=s[a],r=s[r]}r!==a&&(s.push([a,r]),o+=r-a)}return{outSplits:i,valueSlices:s,numValues:o}}function vw(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let a=e;a<t.length;a++)n[e-1]*=t[a];return n}function Iw(t,e,n,a,s){const o=e.slice();o[0]=s;const r=M(n,N(o)),i=t.length;return function(t,e,n,a,s,o){const r=vw(e,2)[1],i=vw(o,2)[1];let c=0;for(const l of n)for(let e=l[0];e<l[1];++e){for(let n=0;n<a;++n)s[c*i+n]=t[e*r+n];++c}}(t,e,a,0===i?0:i/e[0],r,o),[r,o]}function Cw(t,e,n,a,s,o,r,i){if(0===t.length)throw new Error("paramsNestedSplits must be non empty");if(0===e[0].length)throw new Error("Split tensors must not be scalars");if(function(t,e,n){t.forEach(((t,a)=>{if(t<0||t>=n){const s=Q(a,e.length,H(e)).join(",");throw new Error("indices[".concat(s,"] = ").concat(t," is not in [0, ").concat(n,")"))}}))}(o,r,e[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const c=a[0],{outSplits:l,valueSlices:u,numValues:h}=ww(o,r,t,c),d=function(t){const e=[];for(let n=0;n<t.length;++n){const a=M("int32",t[n].length);e.push(a),t[n].forEach(((t,e)=>a[e]=t))}return e}(l),p=Iw(n,a,s,u,h);return[d,p[0],p[1]]}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sw=2147483647;function Nw(t,e,n,a,s,o,r){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(r.length>1)throw new Error("deltas must be a scalar or vector");const i=0===e.length,c=0===s.length,l=0===r.length,u=[];i||u.push(e[0]),c||u.push(s[0]),l||u.push(r[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===u.length?1:u[0],d=M("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const e=i?t[0]:t[g],n=c?a[0]:a[g],s=l?o[0]:o[g];if(0===s)throw new Error("Requires delta != 0");let r;if(s>0&&n<e||s<0&&n>e)r=0;else if(r=Math.ceil(Math.abs((n-e)/s)),r>Sw)throw new Error("Requires ((limit - start) / delta) <= ".concat(Sw));d[g+1]=d[g]+r}const p=M(n,d[h]);let f=0;for(let g=0;g<h;++g){const e=d[g+1]-d[g];let n=i?t[0]:t[g];const a=l?o[0]:o[g];for(let t=0;t<e;++t)p[f++]=n,n+=a}return[d,p]}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Tw=Ah;class Ew{constructor(t,e,n,a,s,o,r,i,c,l){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=a,this.valuesDType=s,this.defaultValue=o,this.defaultValueShape=r,this.rowPartitionValues=i,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=_h(l),this.raggedRank=Oh(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Tw.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Tw.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Tw.VALUE_ROWIDS:return Ew.getMaxWidthValueRowID(e);case Tw.ROW_SPLITS:return Ew.getMaxWidthRowSplit(e);default:throw new Error("Cannot handle partition type ".concat(Tw[this.getRowPartitionTypeByDimension(t-1)]))}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let n=0;for(let a=0;a<e-1;++a){const e=t[a+1]-t[a];e>n&&(n=e)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let n=0,a=t[0],s=0;for(let o=1;o<e;++o){const e=t[o];e!==a&&(a=e,s=Math.max(o-n,s),n=o)}return Math.max(e-n,s)}tensorShapeFromTensor(t,e,n=!0){if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Aw(t,n)}calculateOutputSize(t){const e=this.valuesShape;Lh(this.defaultValueShape,e);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Dh(this.raggedRank,n,e);a[0]<0&&(a[0]=t);for(let s=1;s<=this.raggedRank;++s)a[s]<0&&(a[s]=this.getMaxWidth(s));return a}calculateFirstParentOutputIndex(t,e,n){const a=Math.min(t,n),s=[];let o=0;for(let r=0;r<a;++r,o+=e)s.push(o);for(let r=a;r<t;++r)s.push(-1);return I(s.length===t,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(t,e,n,a){const s=t.length,o=[];for(let r=0;r<s-1;++r){const s=t[r+1]-t[r];let i=Math.min(a,s),c=e[r];-1===c&&(i=0);for(let t=0;t<i;++t)o.push(c),c+=n;for(let t=0;t<s-i;++t)o.push(-1)}if(s>0&&o.length!==t[s-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(t,e,n,a){const s=t.length,o=[];if(0===s)return[];let r=0,i=t[0];if(i>=e.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(e.length));let c=e[i];o.push(c);for(let l=1;l<s;++l){const s=t[l];if(s===i)c>=0&&(++r,r<a?c+=n:c=-1);else{if(r=0,i=s,s>=e.length)throw new Error("Got nextValueRowId=".concat(s," which is not less than ").concat(e.length));c=e[s]}o.push(c)}if(o.length!==t.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(t,e,n,a){const s=this.getRowPartitionTensor(t),o=this.getRowPartitionTypeByDimension(t);switch(o){case Tw.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,n,a);case Tw.ROW_SPLITS:if(s.length-1>e.length)throw new Error("Row partition size is greater than output size: ".concat(s.length-1," > ").concat(e.length));return this.calculateOutputIndexRowSplit(s,e,n,a);default:throw new Error("Unsupported partition type: ".concat(Tw[o]))}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case Tw.FIRST_DIM_SIZE:return t[0];case Tw.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Tw.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(Tw[e]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),e=this.calculateOutputSize(t),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let o=n.length-2;o>=0;--o)n[o]=n[o+1]*e[o+1];const a=Aw(e,!1),s=M(this.valuesDType,N(a));if(n[0]*e[0]>0){let o=this.calculateFirstParentOutputIndex(t,n[0],e[0]);for(let t=1;t<=this.raggedRank;++t){o=this.calculateOutputIndex(t-1,o,n[t],e[t])}this.setOutput(this.raggedRank,o,s,a)}return[a,s]}setOutput(t,e,n,a){if(0===n.length)return;const s=this.values,o=n;let r=a.slice();r=r.slice(t+1);const i=N(r),c=e.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const t=this.defaultValueShape;So((()=>{const e=Ur(l,t),n=ei(e,r);l=n.dataSync()}))}let u=0,h=0,d=0;for(let p=0;p<=c;++p){let t=p<c?e[p]:-1;if(t!==d){if(h<d){const t=s.subarray(u*i);Rw(o.subarray(h*i),t,(d-h)*i)}if(p>=c){const e=n.length;t=Math.floor(e/i)}if(t>d)if(1===this.defaultValue.length)o.subarray(d*i,t*i).fill(this.defaultValue[0]),d=t;else for(;t>d;){Rw(o.slice(d*i),l,i),++d}t<0?(u=p+1,h=d):(u=p,h=d,d=h+1)}else++d}}}function Rw(t,e,n){for(let a=0;a<n;a++)t[a]=e[a]}function Aw(t,e){const n=[];for(let a of t){if(a<0){if(!e)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function Fw(t,e,n,a,s,o,r,i,c,l){return new Ew(t,e,n,a,s,o,r,i,c,l).compute()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dw(t,e,n,a){if(t===e||t<e&&n<0||e<t&&n>1)return X(0,a);const s=X(Math.abs(Math.ceil((e-t)/n)),a);e<t&&1===n&&(n=-1),s[0]=t;for(let o=1;o<s.length;o++)s[o]=s[o-1]+n;return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _w=fk((t=>1/Math.sqrt(t))),Ow=mk(En,_w),Lw={kernelName:En,backendName:"cpu",kernelFunc:Ow};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mw(t,e,n,a,s,o,r,i,c,l){const u=[a/s,s],h=t.values,d=e.values;if(0===a)return ir(n,e.dtype);const p=c instanceof _s?c:ir(u,e.dtype);"string"==typeof c||"number"==typeof c?p.values.fill(c):"boolean"==typeof c&&p.values.fill(+c);for(let f=0;f<o;f++){const t=[];let o=0;for(let e=0;e<r;e++){const n=h[f*r+e];t.push(n),o+=n*i[e]}if(o<0||o>=a/s)throw new Error("Invalid indices: ".concat(t," does not index into ").concat(n));for(let n=0;n<s;n++)l?p.values[o*s+n]+=d[f*s+n]:p.values[o*s+n]=0===e.rank?d[0]:d[f*s+n]}return p}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zw=fk((t=>1/(1+Math.exp(-t)))),Pw=gk(Pn,(t=>1/(1+Math.exp(-t)))),Bw={kernelName:Pn,backendName:"cpu",kernelFunc:Pw};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ww(t,e,n,a,s){const o=yh(a,e,n),r=N(n),i=H(a);if(o){const n=kh(e,i);return"string"===s?t.slice(n,n+r):t.subarray(n,n+r)}const c=ir(a,s,"string"===s?_d(t):t),l=ir(n,s);for(let u=0;u<l.size;++u){const t=l.indexToLoc(u),n=t.map(((t,n)=>t+e[n]));l.set(c.get(...n),...t)}return"string"===s?Od(l.values):l.values}function Uw(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{begin:o,size:r}=a;Vy(s,"slice");const[i,c]=wh(s,o,r);lh(s,i,c);const l=Ww(n.data.get(s.dataId).values,i,c,s.shape,s.dtype);return n.makeTensorInfo(c,s.dtype,l)}const Vw={kernelName:On,backendName:"cpu",kernelFunc:Uw};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gw(t,e,n,a,s,o,r){const i=e[0],c=o[0],l=new Array(c),u=new Array(i),h=e[1];if(0===c){if(0!==i)throw new Error(bd(i));return[M(n,0),[0,h],M(s,0),l,u]}let d=!0,p=0;const f=new Array(c).fill(0);for(let m=0;m<i;++m){const e=t[m*h];if(e<0)throw new Error(xd(m,e));if(e>=c)throw new Error(yd(m,e,c));++f[e],d=d&&e>=p,p=e}let g=!0;for(let m=0;m<c;++m){const t=0===f[m];l[m]=t,g=g&&!t,f[m]=Math.max(f[m],1),m>0&&(f[m]+=f[m-1])}if(g&&d){const e=t,n=a;for(let t=0;t<i;++t)u[t]=t;return[e,[i,h],n,l,u]}{const e=f[c-1],o=M(n,e*h),d=M(s,e),p=new Array(c).fill(0);for(let n=0;n<i;++n){const e=t[n*h],s=p[e],r=(0===e?0:f[e-1])+s;p[e]++;for(let a=0;a<h;++a)o[r*h+a]=t[n*h+a];d[r]=a[n],u[n]=r}for(let t=0;t<c;++t){if(0===p[t]){const e=0===t?0:f[t-1];o[e*h+0]=t;for(let t=1;t<h;++t)o[e*h+t]=0;d[e]=r}}return[o,[e,h],d,l,u]}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hw(t,e,n,a,s){const o=N(a),r=e[0],i=s.length,c=[];let l=1,u=-1;for(let g=0;g<i;++g){const t=s[g];if(-1===t){if(-1!==u)throw new Error(kd(u,g));u=g,c.push(1)}else{if(t<0)throw new Error(wd(g,t));l*=t,c.push(t)}}if(-1!==u){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(o/l);if(l*t!==o)throw new Error(Id(a,c));c[u]=t}if(N(c)!==o)throw new Error(Cd(a,c));const h=a.length,d=[];if(h>0){d[h-1]=1;for(let t=h-2;t>=0;--t)d[t]=d[t+1]*a[t+1]}const p=[];if(i>0){p[i-1]=1;for(let t=i-2;t>=0;--t)p[t]=p[t+1]*c[t+1]}const f=M(n,r*i);for(let g=0;g<r;++g){let e=0;for(let n=0;n<h;++n)e+=t[g*h+n]*d[n];for(let t=0;t<i;++t)f[g*i+t]=Math.trunc(e/p[t]),e%=p[t]}return[f,[r,i],c]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jw(t,e,n,a,s,o=!1,r=0){const i=a.length,c=[e[0],t.length/e[0]],l=c[1],u=i>0?s[i-1]+1:0;if(u<0)throw new Error("segment ids must be >= 0");const h=e.slice();h[0]=u;const d=M(n,h.reduce(((t,e)=>t*e),1));if(0===i)return u>0&&d.fill(r),[d,h];if(u<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,g=0,m=s[p];for(;;){let e=0;if(f<i){if(e=s[f],m===e){++f;continue}if(m>=e)throw new Error("segment ids are not increasing")}if(m<0||m>=u)throw new Error(Td(m,u));m>g&&d.fill(r,g*l,m*l);for(let n=p;n<f;++n){const e=a[n];if(e<0||e>=c[0])throw new Error(Ed(n,a[n],c[0]));for(let n=0;n<l;n++)d[m*l+n]+=t[e*l+n]}if(o)for(let t=0;t<l;t++)d[m*l+t]/=f-p;if(p=f,++f,g=m+1,m=e,f>i)break}return g<u&&d.fill(r,g*l,u*l),[d,h]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kw=fk((t=>Math.sqrt(t))),qw=gk(Wn,(t=>Math.sqrt(t))),Xw={kernelName:Wn,backendName:"cpu",kernelFunc:qw},Yw=qy(((t,e)=>{const n=t-e;return n*n})),Zw=sk(Zn,Yw),Jw={kernelName:Zn,backendName:"cpu",kernelFunc:Zw},Qw=fk(((t,e)=>{const{pattern:n,replaceGlobal:a,rewrite:s}=e;return t.replace(new RegExp(n,a?"g":""),s)})),$w={kernelName:Qn,backendName:"cpu",kernelFunc:mk(Qn,Qw)};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tv(t,e,n,a){const s=ir(t,e.dtype);for(let o=0;o<s.size;o++){const t=s.indexToLoc(o),r=new Array(t.length);for(let e=0;e<r.length;e++)r[e]=t[e]*n[e]+a[e];s.set(e.get(...r),...t)}return s}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ev{constructor(t,e,n,a,s,o){this.separator=xs(t),this.nGramWidths=e,this.leftPad=xs(n),this.rightPad=xs(a),this.padWidth=s,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,a,s,o){for(let r=0;r<s;++r){const i=this.getPadWidth(o),c=Math.max(0,i-r),l=Math.max(0,i-(s-(r+1))),u=o-(c+l),h=e+(c>0?0:r-i);let d=0;d+=c*this.leftPad.length;for(let e=0;e<u;++e)d+=t[h+e].length;d+=l*this.rightPad.length;d+=(c+l+u-1)*this.separator.length,n[a+r]=new Uint8Array(d);const p=n[a+r];let f=0;const g=t=>t.forEach((t=>p[f++]=t));for(let t=0;t<c;++t)g(this.leftPad),g(this.separator);for(let e=0;e<u-1;++e)g(t[h+e]),g(this.separator);if(u>0){g(t[h+u-1]);for(let t=0;t<l;++t)g(this.separator),g(this.rightPad)}else{for(let t=0;t<l-1;++t)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(t,e){const n=t.length,a=e.length;if(a>0){let t=e[0];if(0!==t)throw new Error("First split value must be 0, got ".concat(t));for(let s=1;s<a;++s){let a=e[s]>=t;if(a=a&&e[s]<=n,!a)throw new Error("Invalid split value ".concat(e[s],", must be in [").concat(t,", ").concat(n,"]"));t=e[s]}if(t!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(t))}const s=a-1,o=M("int32",a);if(0===n||0===a){const t=new Array(n);for(let e=0;e<=s;++e)o[e]=0;return[t,o]}o[0]=0;for(let i=1;i<=s;++i){const t=e[i]-e[i-1];let n=0;this.nGramWidths.forEach((e=>{n+=this.getNumNGrams(t,e)})),this.preserveShort&&t>0&&0===n&&(n=1),o[i]=o[i-1]+n}const r=new Array(o[s]);for(let i=0;i<s;++i){const n=e[i];let a=o[i];if(this.nGramWidths.forEach((s=>{const o=e[i+1]-e[i],c=this.getNumNGrams(o,s);this.createNGrams(t,n,r,a,c,s),a+=c})),this.preserveShort&&a===o[i]){const s=e[i+1]-e[i];if(0===s)continue;const o=s+2*this.padWidth,c=1;this.createNGrams(t,n,r,a,c,o)}}return[r,o]}}function nv(t,e,n,a,s,o,r,i){return new ev(n,a,s,o,r,i).compute(t,e)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function av(t,e,n,a){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)a.push(t.subarray(e,e+1));return}if(1===e.length){const s=e[0];let o=t.indexOf(s);for(;-1!==o;){const e=t.subarray(0,o);n&&0===e.length||a.push(e),o=(t=t.subarray(o+1)).indexOf(s)}return void(n&&0===t.length||a.push(t))}let s=0;for(let o=0;o<t.length+1;o++)if(o===t.length||-1!==e.indexOf(t[o])){const e=t.subarray(s,o);n&&0===e.length||a.push(e),s=o+1}}function sv(t,e,n){const a=t.length,s=[];let o=0,r=0;const i=new Array(a);for(let d=0;d<a;++d){const a=s.length;av(t[d],e,n,s);const c=s.length-a;i[d]=c,o+=c,r=Math.max(r,c)}const c=M("int32",2*o),l=new Array(o),u=[a,r];let h=0;for(let d=0;d<a;++d)for(let t=0;t<i[d];++t)c[2*h]=d,c[2*h+1]=t,l[h]=s[h],++h;return[c,l,u]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ov(t,e){const n=M("int32",t.length);for(let a=0;a<t.length;++a)n[a]=fs(t[a]).modulo(e).getLowBitsUnsigned();return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rv=qy(((t,e)=>t-e)),iv=ok(((t,e,n,a)=>({real:t-n,imag:e-a}))),cv=sk(aa,rv,iv),lv={kernelName:aa,backendName:"cpu",kernelFunc:cv};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uv(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const a=ir(n,t.dtype);for(let s=0;s<a.values.length;++s){const e=a.indexToLoc(s),n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=e[a]%t.shape[a];const o=t.locToIndex(n);a.values[s]=t.values[o]}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hv=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n};function dv(t,e,n=0,a=t.length-1){for(;a>n;){if(a-n>600){const s=a-n+1,o=e-n+1,r=Math.log(s),i=.5*Math.exp(2*r/3),c=.5*Math.sqrt(r*i*(s-i)/s)*Math.sign(o-s/2);dv(t,e,Math.max(n,Math.floor(e-o*i/s+c)),Math.min(a,Math.floor(e+(s-o)*i/s+c)))}const s=t[e];let o=n,r=a;for(v(t,n,e),hv(t[a],s)>0&&v(t,n,a);o<r;){for(v(t,o,r),o++,r--;hv(t[o],s)<0;)o+=1;for(;hv(t[r],s)>0;)r-=1}0===hv(t[n],s)?v(t,n,r):(r+=1,v(t,r,a)),r<=e&&(n=r+1),e<=r&&(a=r-1)}}function pv(t,e,n,a,s){const o=e[e.length-1],[r,i]=[t.length/o,o],c=L(n,r*a),l=L("int32",r*a);for(let h=0;h<r;h++){const e=h*i,n=t.subarray(e,e+i);let o=new Array(n.length);n.forEach(((t,e)=>o[e]={value:t,index:e})),a<o.length&&(dv(o,a),o=o.slice(0,a)),s&&o.sort(hv);const r=h*a,u=c.subarray(r,r+a),d=l.subarray(r,r+a);for(let t=0;t<a;t++)u[t]=o[t].value,d[t]=o[t].index}const u=e.slice();return u[u.length-1]=a,[ir(u,n,c),ir(u,"int32",l)]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fv(t,e,n,a){const s=_(e,n)[0],o=[1,n[0],1];for(let f=0;f<s;f++)o[0]*=n[f];o[1]=n[s];for(let f=s+1;f<n.length;f++)o[2]*=n[f];const r=new Map,i=new Int32Array(n[s]),c=new _s(o,a,t),l=[],u=1===o[0]&&1===o[2];for(let f=0;f<n[s];f++){let e;if(u)e=t[f].toString();else{const t=[];for(let e=0;e<o[0];e++)for(let n=0;n<o[2];n++)t.push(c.get(e,f,n));e=t.join(",")}const n=r.get(e);if(null!=n)i[f]=n;else{const t=r.size;r.set(e,t),i[f]=t,l.push(f)}}const h=o.slice();h[1]=r.size;const d=new _s(h,a);l.forEach(((t,e)=>{for(let n=0;n<o[0];n++)for(let a=0;a<o[2];a++)d.set(c.get(n,t,a),n,e,a)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:i}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gv=Object.freeze(Object.defineProperty({__proto__:null,addImpl:rk,bincountImpl:uk,bincountReduceImpl:hk,bitwiseAndImpl:dk,castImpl:ek,ceilImpl:bk,concatImpl:kk,equalImpl:wk,expImpl:Ck,expm1Impl:Tk,floorDivImpl:_k,floorImpl:Ak,gatherNdImpl:Mk,gatherV2Impl:zk,greaterEqualImpl:Uk,greaterImpl:Pk,lessEqualImpl:qk,lessImpl:Hk,linSpaceImpl:Zk,logImpl:Jk,maxImpl:tw,maximumImpl:ew,minimumImpl:sw,multiplyImpl:iw,negImpl:hw,notEqualImpl:pw,prodImpl:yw,raggedGatherImpl:Cw,raggedRangeImpl:Nw,raggedTensorToTensorImpl:Fw,rangeImpl:Dw,rsqrtImpl:_w,scatterImpl:Mw,sigmoidImpl:zw,simpleAbsImpl:jy,sliceImpl:Ww,sparseFillEmptyRowsImpl:Gw,sparseReshapeImpl:Hw,sparseSegmentReductionImpl:jw,sqrtImpl:Kw,squaredDifferenceImpl:Yw,staticRegexReplaceImpl:Qw,stridedSliceImpl:tv,stringNGramsImpl:nv,stringSplitImpl:sv,stringToHashBucketFastImpl:ov,subImpl:rv,tileImpl:uv,topKImpl:pv,transposeImpl:mw,uniqueImpl:fv},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Eo("cpu",(()=>new Hy),1);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const mv=gk(re,(t=>t>=0?t:Math.exp(t)-1)),bv={kernelName:re,backendName:"cpu",kernelFunc:mv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xv(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{alpha:o}=a;Vy([s],"leakyRelu");const r=N(s.shape),i=n.data.get(s.dataId).values,c=L("float32",r);for(let l=0;l<i.length;l++)c[l]=i[l]<0?o*i[l]:i[l];return n.makeTensorInfo(s.shape,"float32",c)}const yv={kernelName:Re,backendName:"cpu",kernelFunc:xv},kv=qy(((t,e)=>t<0?e*t:t));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wv(t){const{inputs:e,backend:n}=t,{x:a,alpha:s}=e;Vy([a,s],"prelu");const o=n.data.get(a.dataId).values,r=n.data.get(s.dataId).values,[i,c]=kv(a.shape,s.shape,o,r,"float32");return n.makeTensorInfo(c,"float32",i)}const vv={kernelName:hn,backendName:"cpu",kernelFunc:wv},Iv=gk(yn,(t=>Math.max(0,t))),Cv={kernelName:yn,backendName:"cpu",kernelFunc:Iv},Sv=gk(Sn,(t=>Math.min(Math.max(0,t),6))),Nv={kernelName:Sn,backendName:"cpu",kernelFunc:Sv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tv(t,e,n,a,s){if("linear"===n)return Jy({inputs:{x:e},backend:t});if("relu"===n)return Iv({inputs:{x:e},backend:t});if("elu"===n)return mv({inputs:{x:e},backend:t});if("relu6"===n)return Sv({inputs:{x:e},backend:t});if("prelu"===n)return wv({inputs:{x:e,alpha:a},backend:t});if("leakyrelu"===n)return xv({inputs:{x:e},backend:t,attrs:{alpha:s}});if("sigmoid"===n)return Pw({inputs:{x:e},backend:t});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ev(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{shape:o}=a,r=N(s.shape),i=D(o,r),c=N(i);I(r===c,(()=>"The new shape (".concat(i,") has ").concat(c," elements and the old ")+"shape (".concat(s.shape,") has ").concat(r," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=i,e.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const Rv={kernelName:kn,backendName:"cpu",kernelFunc:Ev};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Av(t){const{inputs:e,backend:n,attrs:a}=t,{a:s,b:o}=e,{transposeA:r,transposeB:i}=a;Vy([s,o],"matMul");const c=s.shape.length,l=o.shape.length,u=r?s.shape[c-2]:s.shape[c-1],h=i?o.shape[l-1]:o.shape[l-2],d=r?s.shape[c-1]:s.shape[c-2],p=i?o.shape[l-2]:o.shape[l-1],f=s.shape.slice(0,-2),g=o.shape.slice(0,-2),m=N(f),b=N(g),x=Ni(s.shape.slice(0,-2),o.shape.slice(0,-2)).concat([d,p]);I(u===h,(()=>"Error in matMul: inner shapes (".concat(u,") and (")+"".concat(h,") of Tensors with shapes ").concat(s.shape," and ")+"".concat(o.shape," and transposeA=").concat(r)+" and transposeB=".concat(i," must match.")));const y=i?[b,p,h]:[b,h,p],k=Ev({inputs:{x:s},backend:n,attrs:{shape:r?[m,u,d]:[m,d,u]}}),w=Ev({inputs:{x:o},backend:n,attrs:{shape:y}}),v=r?k.shape[1]:k.shape[2],C=r?k.shape[2]:k.shape[1],S=i?w.shape[1]:w.shape[2],T=Math.max(m,b),E=n.data.get(k.dataId).values,R=n.data.get(w.dataId).values,A=H(k.shape),F=H(w.shape),[D,_,O]=r?[A[0],1,A[1]]:[A[0],A[1],1],[L,M,z]=i?[1,F[1],F[0]]:[F[1],1,F[0]],P=C*S,B=ir([T,C,S],k.dtype),W=B.values,U=n.blockSize;for(let I=0;I<T;I++){const t=I%m,e=I%b;for(let n=0;n<C;n+=U){const a=Math.min(n+U,C);for(let s=0;s<S;s+=U){const o=Math.min(s+U,S);for(let r=0;r<v;r+=U){const i=Math.min(r+U,v);for(let c=n;c<a;c++)for(let n=s;n<o;n++){let a=0;for(let s=r;s<i;s++){a+=E[t*D+c*_+s*O]*R[s*L+n*M+e*z]}W[I*P+(c*S+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(x,B.dtype,B.values)}const Fv={kernelName:Nt,backendName:"cpu",kernelFunc:Av};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dv={kernelName:ba,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:s,b:o,bias:r,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;let d,p,f;const g=[];d=Av({inputs:{a:s,b:o},attrs:{transposeA:c,transposeB:l},backend:n}),r&&(p=ck({inputs:{a:d,b:r},backend:n}),g.push(d),d=p),u&&(f=Tv(n,d,u,i,h),g.push(d),d=f);for(const m of g)n.disposeIntermediateTensorInfo(m);return d}},_v=gk(lt,(t=>Math.acos(t))),Ov={kernelName:lt,backendName:"cpu",kernelFunc:_v},Lv=gk(ut,(t=>Math.acosh(t))),Mv={kernelName:ut,backendName:"cpu",kernelFunc:Lv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zv={kernelName:dt,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n}=t,a=e;Vy(e,"addN");const s=a.map((t=>n.data.get(t.dataId).values)),o=ir(a[0].shape,a[0].dtype),r=o.values;for(let i=0;i<a.length;i++){const t=s[i];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pv={kernelName:pt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:r}=a;Vy(s,"all");const i=_(o,s.shape);let c=i;const l=Wi(c,s.shape.length);let u=s;null!=l&&(u=bw({inputs:{x:s},backend:n,attrs:{perm:l}}),c=Vi(c.length,s.shape.length)),Bi("all",c,u.shape.length);const[h,d]=zi(u.shape,c),p=N(d),f=X(N(h),u.dtype),g=n.data.get(u.dataId).values;for(let b=0;b<f.length;++b){const t=b*p;let e=g[t];for(let n=0;n<p;++n){const a=g[t+n];e=e&&a}f[b]=e}null!=l&&n.disposeIntermediateTensorInfo(u);const m=n.makeTensorInfo(h,u.dtype,f);if(r){const t=Ev({inputs:{x:m},backend:n,attrs:{shape:Pi(h,i)}});return n.disposeIntermediateTensorInfo(m),t}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bv={kernelName:ft,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:r}=a;Vy(s,"any");const i=_(o,s.shape);let c=i;const l=Wi(c,s.shape.length);let u=s;null!=l&&(u=bw({inputs:{x:s},backend:n,attrs:{perm:l}}),c=Vi(c.length,s.shape.length)),Bi("any",c,u.shape.length);const[h,d]=zi(u.shape,c),p=N(d),f=X(N(h),u.dtype),g=n.data.get(u.dataId).values;for(let b=0;b<f.length;++b){const t=b*p;let e=g[t];for(let n=0;n<p;++n){const a=g[t+n];e=e||a}f[b]=e}null!=l&&n.disposeIntermediateTensorInfo(u);const m=n.makeTensorInfo(h,u.dtype,f);if(r){const t=Ev({inputs:{x:m},backend:n,attrs:{shape:Pi(h,i)}});return n.disposeIntermediateTensorInfo(m),t}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wv={kernelName:gt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o}=a;Vy(s,"argMax");let r=_(o,s.shape);const i=Wi(r,s.shape.length);let c=s;const l=[];null!=i&&(c=bw({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(c),r=Vi(r.length,c.shape.length)),r=[r[0]],Bi("argMax",r,c.shape.length);const[u,h]=zi(c.shape,r),d=X(N(u),"int32"),p=N(h),f=n.data.get(c.dataId).values;for(let g=0;g<d.length;++g){const t=g*p;let e=f[t],n=0;for(let a=0;a<p;++a){const s=f[t+a];s>e&&(e=s,n=a)}d[g]=n}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(u,"int32",d)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uv={kernelName:mt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o}=a;Vy(s,"argMin");let r=_(o,s.shape);const i=Wi(r,s.shape.length);let c=s;const l=[];null!=i&&(c=bw({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(c),r=Vi(r.length,c.shape.length)),r=[r[0]],Bi("argMin",r,c.shape.length);const[u,h]=zi(c.shape,r),d=X(N(u),"int32"),p=N(h),f=n.data.get(c.dataId).values;for(let g=0;g<d.length;++g){const t=g*p;let e=f[t],n=0;for(let a=0;a<p;++a){const s=f[t+a];s<e&&(e=s,n=a)}d[g]=n}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(u,"int32",d)}},Vv=gk(bt,(t=>Math.asin(t))),Gv={kernelName:bt,backendName:"cpu",kernelFunc:Vv},Hv=gk(xt,(t=>Math.asinh(t))),jv={kernelName:xt,backendName:"cpu",kernelFunc:Hv},Kv=gk(yt,(t=>Math.atan(t))),qv={kernelName:yt,backendName:"cpu",kernelFunc:Kv},Xv=qy(((t,e)=>Math.atan2(t,e))),Yv=sk(wt,Xv),Zv={kernelName:wt,backendName:"cpu",kernelFunc:Yv},Jv=gk(kt,(t=>Math.atanh(t))),Qv={kernelName:kt,backendName:"cpu",kernelFunc:Jv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $v(t,e,n,a,s,o){const r=s.strideHeight,i=s.strideWidth,c=s.dilationHeight,l=s.dilationWidth,u=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=ir(s.outShape,n),m=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],y=s.outShape[3];for(let k=0;k<s.batchSize;++k){const e=k*b,n=k*a[0];for(let g=0;g<s.inChannels;++g)for(let b=0;b<s.outHeight;++b){const k=b*r-d,w=Math.max(0,k),v=Math.min(s.inHeight,u+k),I=e+b*x;for(let e=0;e<s.outWidth;++e){const r=e*i-p,u=Math.max(0,r),d=Math.min(s.inWidth,h+r);let b=f,x=0,k=0;for(let e=w;e<v;e+=c){const s=n+e*a[1];for(let e=u;e<d;e+=l){const n=t[s+e*a[2]+g];"max"===o&&n>b?b=n:"avg"===o&&(x+=n,k++)}if(isNaN(b))break}m[I+e*y+g]="avg"===o?x/k:b}}}return g}function tI(t,e,n,a,s=!1,o=!1){const r=ir(a.outShape,"int32"),i=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,g=ir(e,n,t);for(let m=0;m<a.batchSize;++m)for(let t=0;t<a.inChannels;++t)for(let e=0;e<a.outHeight;++e){const n=e*i-p;let b=n;for(;b<0;)b+=l;const x=Math.min(a.inHeight,h+n);for(let i=0;i<a.outWidth;++i){const h=i*c-f;let p=h;for(;p<0;)p+=u;const y=Math.min(a.inWidth,d+h);let k=Number.NEGATIVE_INFINITY,w=-1;for(let e=b;e<x;e+=l){const r=e-n;for(let n=p;n<y;n+=u){const i=n-h,c=g.get(m,e,n,t);c>k&&(k=c,w=s?o?((m*a.inHeight+e)*a.inWidth+n)*a.inChannels+t:(e*a.inWidth+n)*a.inChannels+t:r*d+i)}}r.set(w,m,e,i,t)}}return r}function eI(t,e,n,a,s,o){const r=s.strideDepth,i=s.strideHeight,c=s.strideWidth,l=s.dilationDepth,u=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,g=s.padInfo.front,m=s.padInfo.top,b=s.padInfo.left,x="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=ir(s.outShape,n),k=y.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],v=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],C=s.outShape[4];for(let S=0;S<s.batchSize;++S){const e=S*w,n=S*a[0];for(let y=0;y<s.inChannels;++y)for(let w=0;w<s.outDepth;++w){const S=w*r-g;let N=S;for(;N<0;)N+=l;const T=Math.min(s.inDepth,d+S),E=e+w*v;for(let e=0;e<s.outHeight;++e){const r=e*i-m;let d=r;for(;d<0;)d+=u;const g=Math.min(s.inHeight,p+r),w=E+e*I;for(let e=0;e<s.outWidth;++e){const r=e*c-b;let i=r;for(;i<0;)i+=h;const p=Math.min(s.inWidth,f+r),m=w+e*C;let v=x,I=0,S=0;for(let e=N;e<T;e+=l){const s=n+e*a[1];for(let e=d;e<g;e+=u){const n=s+e*a[2];for(let e=i;e<p;e+=h){const s=t[n+e*a[3]+y];if("max"===o&&s>v?v=s:"avg"===o&&(I+=s,S++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}k[m+y]="avg"===o?I/Math.max(S,1):v}}}}return y}const nI={kernelName:vt,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e;Vy(s,"avgPool");const{filterSize:o,strides:r,pad:i,dimRoundingMode:c}=a;I(zr(r,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(1,"'")));const l=Tr(s.shape,o,r,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&T(l.inShape,l.outShape))u=Jy({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=H(s.shape),a=$v(t,s.shape,s.dtype,e,l,"avg");u=n.makeTensorInfo(l.outShape,s.dtype,a.values)}return u}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aI={kernelName:Ct,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{filterSize:o,strides:r,pad:i,dimRoundingMode:c,dataFormat:l}=a;Vy(s,"avgPool3d");const u=Er(s.shape,o,r,1,i,c,l),h=eI(n.data.get(s.dataId).values,s.shape,s.dtype,H(s.shape),u,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sI={kernelName:St,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o}=e,{filterSize:r,strides:i,pad:c,dimRoundingMode:l}=a;Vy([s,o],"avgPool3DGrad");const u=Er(o.shape,r,i,1,c,l),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,f=u.filterDepth,g=u.filterHeight,m=u.filterWidth,b=u.dilationDepth,x=u.dilationHeight,y=u.dilationWidth,k=u.effectiveFilterDepth,w=u.effectiveFilterHeight,v=u.effectiveFilterWidth,I=k-1-u.padInfo.front,C=v-1-u.padInfo.left,S=w-1-u.padInfo.top,N=ir(o.shape,"float32"),T=1/(f*g*m),E=n.bufferSync(s);for(let R=0;R<u.batchSize;++R)for(let t=0;t<u.inChannels;++t)for(let e=0;e<u.inDepth;++e)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const s=e-I,o=n-S,r=a-C;let i=0;for(let e=0;e<k;e+=b){const n=(s+e)/h;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let e=0;e<w;e+=x){const a=(o+e)/d;if(!(a<0||a>=u.outHeight||Math.floor(a)!==a))for(let e=0;e<v;e+=y){const s=(r+e)/p;if(s<0||s>=u.outWidth||Math.floor(s)!==s)continue;i+=E.get(R,n,a,s,t)}}}N.set(i*T,R,e,n,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oI={kernelName:It,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o}=e,r=o;Vy([s,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=Tr(r.shape,i,c,1,l),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,f=u.filterWidth,g=u.dilationHeight,m=u.dilationWidth,b=u.effectiveFilterHeight,x=u.effectiveFilterWidth,y=x-1-u.padInfo.left,k=b-1-u.padInfo.top,w=ir(r.shape,"float32"),v=1/(p*f),I=n.data.get(s.dataId).values,C=ir(s.shape,"float32",I);for(let S=0;S<u.batchSize;++S)for(let t=0;t<u.inChannels;++t)for(let e=0;e<u.inHeight;++e)for(let n=0;n<u.inWidth;++n){const a=e-k,s=n-y;let o=0;for(let e=0;e<b;e+=g){const n=(a+e)/h;if(!(n<0||n>=u.outHeight||Math.floor(n)!==n))for(let e=0;e<x;e+=m){const a=(s+e)/d;if(a<0||a>=u.outWidth||Math.floor(a)!==a)continue;o+=C.get(S,n,a,t)}}w.set(o*v,S,e,n,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rI={kernelName:xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,scale:o,offset:r,mean:i,variance:c}=e;I(i.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),I(null==r||i.shape.length===r.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),I(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Vy([s,i,c,o,r],"batchNorm");let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=n.data.get(c.dataId).values,p=o?n.data.get(o.dataId).values:new Float32Array([1]),f=r?n.data.get(r.dataId).values:new Float32Array([0]),g=new Float32Array(u.length),m=f.length,b=p.length,x=d.length,y=h.length;let k=0,w=0,v=0,C=0;for(let I=0;I<u.length;++I)g[I]=f[k++]+(u[I]-h[w++])*p[v++]/Math.sqrt(d[C++]+l),k>=m&&(k=0),w>=y&&(w=0),v>=b&&(v=0),C>=x&&(C=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iI={kernelName:Tt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockShape:o,crops:r}=a;Vy([s],"batchToSpaceND");const i=o.reduce(((t,e)=>t*e)),c=Bh(s.shape,o,i),l=Wh(c.length,o.length),u=Uh(s.shape,o,i),h=Vh(r,o.length),d=Gh(u,r,o.length),p=Ev({inputs:{x:s},backend:n,attrs:{shape:c}}),f=bw({inputs:{x:p},backend:n,attrs:{perm:l}}),g=Ev({inputs:{x:f},backend:n,attrs:{shape:u}}),m=Uw({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cI={kernelName:Et,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,weights:o}=e,{size:r}=a,i=uk(n.data.get(s.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,r);return n.makeTensorInfo([r],o.dtype,i)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lI={kernelName:At,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:a,s1:s}=e,o=n.data.get(a.dataId).values,r=n.data.get(s.dataId).values,i=Ni(Array.from(o),Array.from(r));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},uI=gk(_t,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),hI={kernelName:_t,backendName:"cpu",kernelFunc:uI},dI={kernelName:Lt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,a=new Float32Array(N(e.shape)),s=n.data.get(e.dataId),o=s.complexTensorInfos.real,r=s.complexTensorInfos.imag,i=n.data.get(o.dataId).values,c=n.data.get(r.dataId).values;for(let l=0;l<i.length;l++){const t=i[l],e=c[l];a[l]=Math.hypot(t,e)}return n.makeOutput(a,e.shape,"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pI(t){const{inputs:e,backend:n}=t,{input:a}=e,s=n.data.get(a.dataId).complexTensorInfos.imag,o=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,o)}const fI={kernelName:Se,backendName:"cpu",kernelFunc:pI};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gI(t){const{inputs:e,backend:n,attrs:a}=t,{axis:s}=a,o=_(s,e[0].shape)[0];Eh(e.map((t=>t.shape)),o);let r=Rh(e.map((t=>t.shape)),o);if(0===N(r))return n.makeTensorInfo(r,e[0].dtype,[]);const i=e.filter((t=>N(t.shape)>0));if(1===i.length)return Jy({inputs:{x:i[0]},backend:n});if("complex64"===i[0].dtype){const t=i.map((t=>$y({inputs:{input:t},backend:n}))),e=i.map((t=>pI({inputs:{input:t},backend:n}))),a=gI({inputs:t,backend:n,attrs:{axis:o}}),s=gI({inputs:e,backend:n,attrs:{axis:o}}),r=Xy({inputs:{real:a,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),r}const c=i.map((t=>{const e=N(t.shape.slice(o));return Ev({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),l=c.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));r=Rh(c.map((t=>t.shape)),1);const u=1===c[0].shape[0],h=kk(l,r,e[0].dtype,u),d=Rh(i.map((t=>t.shape)),o),p=n.makeTensorInfo(d,e[0].dtype,h);return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}const mI={kernelName:Mt,backendName:"cpu",kernelFunc:gI};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bI(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:r,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a;Vy([s,o],"conv2d");const h=Br(c),d=Rr(s.shape,o.shape,r,l,i,u,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,y="channelsLast"===d.dataFormat,k=new _s(d.outShape,s.dtype),w=H(s.shape),v=H(o.shape),I=w[0],C=y?w[1]:w[2],S=y?w[2]:1,N=y?1:w[1],T=k.strides[0],E=y?k.strides[1]:k.strides[2],R=y?k.strides[2]:1,A=y?1:k.strides[1],F=n.data.get(s.dataId).values,D=n.data.get(o.dataId).values,_=k.values;for(let O=0;O<d.batchSize;++O){const t=O*I,e=O*T;for(let n=0;n<d.outHeight;++n){const a=e+n*E,s=n*d.strideHeight-x;for(let e=0;e<p;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const o=e*v[0],r=t+n*C;for(let t=0;t<d.outWidth;++t){const e=a+t*R,n=t*d.strideWidth-b;for(let t=0;t<f;++t){const a=n+t*m;if(a<0||a>=d.inWidth)continue;const s=r+a*S;let i=o+t*v[1];for(let t=0;t<d.inChannels;++t){const n=F[s+t*N];for(let t=0;t<d.outChannels;++t)_[e+t*A]+=n*D[i+t];i+=d.outChannels}}}}}}return n.makeTensorInfo(k.shape,k.dtype,_)}const xI={kernelName:zt,backendName:"cpu",kernelFunc:bI};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yI={kernelName:Pt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,dy:o}=e,{strides:r,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a;Vy([s,o],"conv2dBackpropFilter");const h=Br(c),d=Rr(s.shape,u,r,1,i,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,x=new _s(d.filterShape,"float32"),y=d.padInfo.left,k=d.padInfo.top,w=n.data.get(s.dataId).values,v=n.data.get(o.dataId).values,I=new _s(s.shape,s.dtype,w),C=new _s(o.shape,o.dtype,v);for(let S=0;S<g;++S){const t=Math.max(0,Math.ceil((k-S)/p)),e=Math.min(d.outHeight,(d.inHeight+k-S)/p);for(let n=0;n<m;++n){const a=Math.max(0,Math.ceil((y-n)/f)),s=Math.min(d.outWidth,(d.inWidth+y-n)/f);for(let o=0;o<d.inChannels;++o)for(let r=0;r<d.outChannels;++r){let i=0;for(let c=0;c<d.batchSize;++c)for(let l=t;l<e;++l){const t=S+l*p-k;for(let e=a;e<s;++e){const a=n+e*f-y;i+=b?I.get(c,t,a,o)*C.get(c,l,e,r):I.get(c,o,t,a)*C.get(c,r,l,e)}}x.set(i,S,n,o,r)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kI={kernelName:Bt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,filter:o}=e,{inputShape:r,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a;Vy([s,o],"conv2dBackpropInput");const h=H(o.shape),d=H(s.shape);let p=Br(l);const f=Rr(r,o.shape,i,1,c,u,!1,p),g=new _s(f.inShape,"float32"),m=g.values,b=n.data.get(s.dataId).values,x=n.data.get(o.dataId).values,[y,k,w]=h,{batchSize:v,filterHeight:I,filterWidth:C,inChannels:S,inHeight:N,inWidth:T,outChannels:E,outHeight:R,outWidth:A,strideHeight:F,strideWidth:D}=f;p=f.dataFormat;const _=I-1-f.padInfo.top,O=C-1-f.padInfo.left,L="channelsLast"===p,M=g.strides[0],z=L?g.strides[1]:g.strides[2],P=L?g.strides[2]:1,B=L?1:g.strides[1],W=d[0],U=L?d[1]:d[2],V=L?d[2]:1,G=L?1:d[1];for(let H=0;H<v;++H)for(let t=0;t<S;++t)for(let e=0;e<N;++e){const n=e-_,a=Math.max(0,Math.ceil(n/F)),s=Math.min(R,(I+n)/F);for(let o=0;o<T;++o){const r=o-O,i=Math.max(0,Math.ceil(r/D)),c=Math.min(A,(C+r)/D);let l=0;for(let e=a;e<s;++e){const a=e*F-n;for(let n=i;n<c;++n){const s=W*H+U*e+V*n,o=y*(I-1-a)+k*(C-1-(n*D-r))+w*t;for(let t=0;t<E;++t){l+=b[s+G*t]*x[o+t]}}}m[M*H+z*e+P*o+B*t]=l}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wI={kernelName:Wt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:r,pad:i,dilations:c}=a;Vy([s,o],"conv3d");const l=Ar(s.shape,o.shape,r,c,i),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=l,b=m.front,x=m.left,y=m.top,k=new _s(l.outShape,s.dtype),w=n.data.get(s.dataId).values,v=n.data.get(o.dataId).values,I=k.values,C=H(s.shape),S=H(o.shape);for(let N=0;N<l.batchSize;++N){const t=N*C[0],e=N*k.strides[0];for(let n=0;n<l.outDepth;++n){const a=e+n*k.strides[1],s=n*l.strideDepth-b;for(let e=0;e<u;++e){const n=s+e*p;if(n<0||n>=l.inDepth)continue;const o=e*S[0],r=t+n*C[1];for(let t=0;t<l.outHeight;++t){const e=a+t*k.strides[2],n=t*l.strideHeight-y;for(let t=0;t<h;++t){const a=n+t*f;if(a<0||a>=l.inHeight)continue;const s=o+t*S[1],i=r+a*C[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,a=t*l.strideWidth-x;for(let t=0;t<d;++t){const e=a+t*g;if(e<0||e>=l.inWidth)continue;const o=s+t*S[2],r=i+e*l.inChannels;let c=o;for(let t=0;t<l.inChannels;++t){const e=w[r+t];for(let t=0;t<l.outChannels;++t)I[n+t]+=e*v[c+t];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vI={kernelName:Ut,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,dy:o}=e,{strides:r,pad:i,filterShape:c}=a;Vy([s,o],"conv3dBackpropFilterV2");const l=H(s.shape),u=H(o.shape),h=Ar(s.shape,c,r,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,x=new _s(h.filterShape,"float32"),y=x.values,[k,w,v,I]=x.strides,C=n.data.get(o.dataId).values,[S,N,T,E]=u,R=n.data.get(s.dataId).values,[A,F,D,_]=l,O=h.padInfo.front,L=h.padInfo.left,M=h.padInfo.top;for(let z=0;z<g;++z){const t=Math.max(0,Math.ceil((O-z)/d)),e=Math.min(h.outDepth,(h.inDepth+O-z)/d),n=z*k;for(let a=0;a<m;++a){const s=Math.max(0,Math.ceil((M-a)/p)),o=Math.min(h.outHeight,(h.inHeight+M-a)/p),r=a*w+n;for(let n=0;n<b;++n){const i=Math.max(0,Math.ceil((L-n)/f)),c=Math.min(h.outWidth,(h.inWidth+L-n)/f),l=n*v+r;for(let r=0;r<h.inChannels;++r){const u=r*I+l;for(let l=0;l<h.outChannels;++l){let g=0;for(let u=0;u<h.batchSize;++u){const h=u*A,m=u*S;for(let u=t;u<e;++u){const t=(z+u*d-O)*F+h,e=u*N+m;for(let u=s;u<o;++u){const s=(a+u*p-M)*D+t,o=u*T+e;for(let t=i;t<c;++t){const e=t*E+o;g+=R[(n+t*f-L)*_+s+r]*C[e+l]}}}}y[u+l]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const II={kernelName:Vt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,filter:o}=e,{pad:r,strides:i,inputShape:c}=a;Vy([s],"conv3dBackpropInputV2");const l=H(s.shape),u=H(o.shape),h=Ar(c,o.shape,i,1,r),d=new _s(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,x=n.data.get(s.dataId).values,[y,k,w,v]=l,I=n.data.get(o.dataId).values,[C,S,N,T]=u,{batchSize:E,filterDepth:R,filterHeight:A,filterWidth:F,inChannels:D,inDepth:_,inHeight:O,inWidth:L,outChannels:M,outDepth:z,outHeight:P,outWidth:B,strideDepth:W,strideHeight:U,strideWidth:V}=h,G=R-1-h.padInfo.front,j=A-1-h.padInfo.top,K=F-1-h.padInfo.left;for(let H=0;H<E;++H)for(let t=0;t<D;++t)for(let e=0;e<_;++e){const n=e-G,a=Math.max(0,Math.ceil(n/W)),s=Math.min(z,(R+n)/W);for(let o=0;o<O;++o){const r=o-j,i=Math.max(0,Math.ceil(r/U)),c=Math.min(P,(A+r)/U);for(let l=0;l<L;++l){const u=l-K,h=Math.max(0,Math.ceil(u/V)),d=Math.min(B,(F+u)/V);let E=0;for(let e=a;e<s;++e){const a=e*W-n;for(let n=i;n<c;++n){const s=n*U-r;for(let o=h;o<d;++o){const r=y*H+k*e+w*n+v*o,i=C*(R-1-a)+S*(A-1-s)+N*(F-1-(o*V-u))+T*t;for(let t=0;t<M;++t){E+=x[r+t]*I[i+t]}}}}p[f*H+g*e+m*o+b*l+t]=E}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},CI=gk(Gt,(t=>Math.cos(t))),SI={kernelName:Gt,backendName:"cpu",kernelFunc:CI},NI=gk(Ht,(t=>Math.cosh(t))),TI={kernelName:Ht,backendName:"cpu",kernelFunc:NI};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EI={kernelName:qt,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{image:s,boxes:o,boxInd:r}=e,{cropSize:i,method:c,extrapolationValue:l}=a,[u,h,d,p]=s.shape,f=o.shape[0],[g,m]=i,b=ir([f,g,m,p],"float32"),x=n.data.get(o.dataId).values,y=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,w=H(s.shape),v=H(b.shape);for(let I=0;I<f;I++){const t=4*I,e=x[t],n=x[t+1],a=x[t+2],s=x[t+3],o=y[I];if(o>=u)continue;const r=g>1?(a-e)*(h-1)/(g-1):0,i=m>1?(s-n)*(d-1)/(m-1):0;for(let u=0;u<g;u++){const t=g>1?e*(h-1)+u*r:.5*(e+a)*(h-1);if(t<0||t>h-1)for(let e=0;e<m;e++)for(let t=0;t<p;t++){const n=t+e*v[2]+u*v[1]+I*v[0];b.values[n]=l}else if("bilinear"===c){const e=Math.floor(t),a=Math.ceil(t),r=t-e;for(let t=0;t<m;t++){const c=m>1?n*(d-1)+t*i:.5*(n+s)*(d-1);if(c<0||c>d-1){for(let e=0;e<p;e++){const n=e+t*v[2]+u*v[1]+I*v[0];b.values[n]=l}continue}const h=Math.floor(c),f=Math.ceil(c),g=c-h;for(let n=0;n<p;n++){let s=n+h*w[2]+e*w[1]+o*w[0];const i=k[s];s=n+f*w[2]+e*w[1]+o*w[0];const c=k[s];s=n+h*w[2]+a*w[1]+o*w[0];const l=k[s];s=n+f*w[2]+a*w[1]+o*w[0];const d=i+(c-i)*g,p=l+(k[s]-l)*g;s=n+t*v[2]+u*v[1]+I*v[0],b.values[s]=d+(p-d)*r}}}else for(let e=0;e<m;++e){const a=m>1?n*(d-1)+e*i:.5*(n+s)*(d-1);if(a<0||a>d-1){for(let t=0;t<p;t++){const n=t+e*v[2]+u*v[1]+I*v[0];b.values[n]=l}continue}const r=Math.round(a),c=Math.round(t);for(let t=0;t<p;t++){const n=t+r*w[2]+c*w[1]+o*w[0],a=t+e*v[2]+u*v[1]+I*v[0];b.values[a]=k[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RI={kernelName:jt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,exclusive:r,reverse:i}=a;Vy(s,"cumprod");const c=Wi([o],s.shape.length);let l=s;null!=c&&(l=bw({inputs:{x:s},backend:n,attrs:{perm:c}}));const u=Vi(1,s.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const h=Zs(l.dtype,"int32"),d=q(N(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],g=i?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let b=0;b<p.length;b+=f)for(let t=0;t<f;t++){const e=g(b,t);if(0===t)d[e]=r?1:p[e];else{const n=g(b,t-1);d[e]=r?p[n]*d[n]:p[e]*d[n]}}const m=n.makeTensorInfo(l.shape,h,d);if(null!=c){const t=bw({inputs:{x:m},backend:n,attrs:{perm:Ui(c)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(l),t}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI={kernelName:Kt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,exclusive:r,reverse:i}=a;Vy(s,"cumsum");const c=Wi([o],s.shape.length);let l=s;null!=c&&(l=bw({inputs:{x:s},backend:n,attrs:{perm:c}}));const u=Vi(1,s.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const h=Zs(l.dtype,"int32"),d=X(N(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],g=i?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let b=0;b<p.length;b+=f)for(let t=0;t<f;t++){const e=g(b,t);if(0===t)d[e]=r?0:p[e];else{const n=g(b,t-1);d[e]=r?p[n]+d[n]:p[e]+d[n]}}const m=n.makeTensorInfo(l.shape,h,d);if(null!=c){const t=bw({inputs:{x:m},backend:n,attrs:{perm:Ui(c)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(l),t}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FI={kernelName:Xt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,weights:o}=e,{size:r,binaryOutput:i}=a;if(1===s.shape.length){const t=uk(n.data.get(s.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,r);return n.makeTensorInfo([r],o.dtype,t)}if(2===s.shape.length){const t=hk(n.bufferSync(s),n.bufferSync(o),r,i);return n.makeTensorInfo(t.shape,o.dtype,t.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(s.shape.length,"."))}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DI={kernelName:Yt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockSize:o,dataFormat:r}=a;I("NHWC"===r,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(r)));const i=s.shape[0],c=s.shape[1],l=s.shape[2],u=s.shape[3],h=c*o,d=l*o,p=u/(o*o),f=n.data.get(s.dataId).values,g=new Float32Array(i*h*d*p);let m=0;for(let b=0;b<i;++b)for(let t=0;t<h;++t){const e=Math.floor(t/o),n=t%o;for(let t=0;t<d;++t){const a=Math.floor(t/o),s=(n*o+t%o)*p;for(let t=0;t<p;++t){const n=t+s+u*(a+l*(e+c*b));g[m++]=f[n]}}}return n.makeTensorInfo([i,h,d,p],s.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _I(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:r,pad:i,dilations:c,dimRoundingMode:l}=a;Vy([s,o],"depthwiseConv2DNative");const u=H(s.shape),h=H(o.shape);let d=c;null==d&&(d=[1,1]),I(zr(r,d),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(r," and dilations '").concat(d,"'")));const p=Rr(s.shape,o.shape,r,d,i,l,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:b,padInfo:x}=p,y=x.left,k=x.top,w=p.outChannels/p.inChannels,v=new _s(p.outShape,s.dtype),C=n.data.get(s.dataId).values,S=n.data.get(o.dataId).values,N=v.values;for(let I=0;I<p.batchSize;++I){const t=I*u[0],e=I*v.strides[0];for(let n=0;n<p.outHeight;++n){const a=e+n*v.strides[1],s=n*p.strideHeight-k;for(let e=0;e<f;++e){const n=s+e*m;if(n<0||n>=p.inHeight)continue;const o=e*h[0],r=t+n*u[1];for(let t=0;t<p.outWidth;++t){const e=a+t*v.strides[2],n=t*p.strideWidth-y;for(let t=0;t<g;++t){const a=n+t*b;if(a<0||a>=p.inWidth)continue;const s=o+t*h[1],i=r+a*p.inChannels;let c=e,l=s;for(let t=0;t<p.inChannels;++t){const e=C[i+t];for(let t=0;t<w;++t)N[c+t]+=e*S[l+t];c+=w,l+=w}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const OI={kernelName:Zt,backendName:"cpu",kernelFunc:_I};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LI={kernelName:Jt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,dy:o}=e,{strides:r,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a;Vy([s,o],"depthwiseConv2dNativeBackpropFilter");const h=Rr(s.shape,u,r,i,c,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new _s(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,y=h.outChannels/h.inChannels,k=n.data.get(s.dataId).values,w=new _s(s.shape,s.dtype,k),v=n.data.get(o.dataId).values,I=new _s(o.shape,o.dtype,v);for(let C=0;C<f;++C){const t=Math.max(0,Math.ceil((x-C)/d)),e=Math.min(h.outHeight,(h.inHeight+x-C)/d);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((b-n)/p)),s=Math.min(h.outWidth,(h.inWidth+b-n)/p);for(let o=0;o<h.outChannels;++o){const r=Math.trunc(o/y),i=o%y;let c=0;for(let l=0;l<h.batchSize;++l)for(let i=t;i<e;++i){const t=C+i*d-x;for(let e=a;e<s;++e){const a=n+e*p-b;c+=w.get(l,t,a,r)*I.get(l,i,e,o)}}m.set(c,C,n,r,i)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MI={kernelName:Qt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,filter:o}=e,{strides:r,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a;Vy([s,o],"depthwiseConv2DNativeBackpropInput");const h=H(s.shape),d=H(o.shape),p=Rr(u,o.shape,r,i,c,l,!0),f=new _s(p.inShape,"float32"),g=f.values,[m,b,x]=f.strides,y=n.data.get(s.dataId).values,[k,w,v]=h,I=n.data.get(o.dataId).values,[C,S,N]=d,{batchSize:T,filterHeight:E,filterWidth:R,inChannels:A,inHeight:F,inWidth:D,outChannels:_,outHeight:O,outWidth:L,strideHeight:M,strideWidth:z}=p,P=E-1-p.padInfo.top,B=R-1-p.padInfo.left,W=_/A;for(let U=0;U<T;++U)for(let t=0;t<A;++t)for(let e=0;e<F;++e){const n=e-P,a=Math.max(0,Math.ceil(n/M)),s=Math.min(O,(E+n)/M);for(let o=0;o<D;++o){const r=o-B,i=Math.max(0,Math.ceil(r/z)),c=Math.min(L,(R+r)/z);let l=0;for(let e=a;e<s;++e){const a=e*M-n;for(let n=i;n<c;++n){const s=k*U+w*e+v*n,o=C*(E-1-a)+S*(R-1-(n*z-r))+N*t;for(let e=0;e<W;++e){l+=y[s+(t*W+e)]*I[o+e]}}}g[m*U+b*e+x*o+t]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zI={kernelName:$t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,s=N(a.shape),o=n.data.get(a.dataId).values,r=ir([s,s],a.dtype),i=r.values;for(let l=0;l<o.length;l++)i[l*s+l]=o[l];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,r.dtype,r.values)}},PI={kernelName:te,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:a,filter:s}=t,{strides:o,pad:r,dilations:i}=n,c=e,l=c.data.get(a.dataId).values,u=a.shape.length,h=c.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:x,padInfo:y,strideHeight:k,strideWidth:w,filterHeight:v,filterWidth:I,dilationHeight:C,dilationWidth:S,outShape:T}=Nr(a.shape,s.shape,o,r,"NHWC",i),E=N(T),R=T.length,A=M(a.dtype,E);for(let N=0;N<p;++N)for(let t=0;t<b;++t){const e=t*k-y.top;for(let n=0;n<x;++n){const o=n*w-y.left;for(let r=0;r<m;++r){let i=Number.MIN_SAFE_INTEGER;for(let t=0;t<v;++t){const n=e+t*C;if(n>=0&&n<f)for(let e=0;e<I;++e){const c=o+e*S;if(c>=0&&c<g){const o=J([N,n,c,r],u,H(a.shape)),p=J([t,e,r],d,H(s.shape)),f=l[o]+h[p];f>i&&(i=f)}}}A[J([N,t,n,r],R,H(T))]=i}}}return{dataId:c.write(ms(A,a.dtype),T,a.dtype),shape:T,dtype:a.dtype}}},BI={kernelName:ne,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:a,filter:s,dy:o}=t,{strides:r,pad:i,dilations:c}=n,l=e,u=K(a.shape,l.data.get(a.dataId).values),h=K(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:x,strideHeight:y,strideWidth:k,filterHeight:w,filterWidth:v,dilationHeight:C,dilationWidth:S,outShape:N}=Nr(a.shape,s.shape,r,i,"NHWC",c);I(o.rank===N.length,(()=>"Error in ".concat(ne,", dy ")+"must have the same rank as output ".concat(N.length,", but got ")+"".concat(o.rank)));const T=K(N,l.data.get(o.dataId).values),E=Y(s.shape,s.dtype);for(let I=0;I<d;++I)for(let t=0;t<m;++t){const e=t*y-x.top;for(let n=0;n<b;++n){const a=n*k-x.left;for(let s=0;s<g;++s){let o=Number.MIN_SAFE_INTEGER,r=0,i=0;for(let t=0;t<w;++t){const n=e+t*C;if(n>=0&&n<p)for(let e=0;e<v;++e){const c=a+e*S;if(c>=0&&c<f){const a=u[I][n][c][s]+h[t][e][s];a>o&&(o=a,r=t,i=e)}}}E[r][i][s]+=T[I][t][n][s]}}}return{dataId:l.write(ms(E,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},WI={kernelName:ee,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:a,filter:s,dy:o}=t,{strides:r,pad:i,dilations:c}=n,l=e,u=K(a.shape,l.data.get(a.dataId).values),h=K(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:x,strideHeight:y,strideWidth:k,filterHeight:w,filterWidth:v,dilationHeight:C,dilationWidth:S,outShape:N}=Nr(a.shape,s.shape,r,i,"NHWC",c);I(o.rank===N.length,(()=>"Error in ".concat(ee,", dy ")+"must have the same rank as output ".concat(N.length,", but got ")+"".concat(o.rank)));const T=K(N,l.data.get(o.dataId).values),E=Y(a.shape,a.dtype);for(let I=0;I<d;++I)for(let t=0;t<m;++t){const e=t*y-x.top;for(let n=0;n<b;++n){const a=n*k-x.left;for(let s=0;s<g;++s){let o=Number.MIN_SAFE_INTEGER,r=e<0?0:e,i=a<0?0:a;for(let t=0;t<w;++t){const n=e+t*C;if(n>=0&&n<p)for(let e=0;e<v;++e){const c=a+e*S;if(c>=0&&c<f){const a=u[I][n][c][s]+h[t][e][s];a>o&&(o=a,r=n,i=c)}}}E[I][r][i][s]+=T[I][t][n][s]}}}return{dataId:l.write(ms(E,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UI={kernelName:ae,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{image:s}=e,{canvas:o,options:r}=a,{contextOptions:i,imageOptions:c}=r||{},l=(null==c?void 0:c.alpha)||1,u=(null==i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const h=o.getContext(u,(null==i?void 0:i.contextAttributes)||{});if(null==h)throw new Error("Could not get the context with ".concat(u," type."));const[d,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],g=n.data.get(s.dataId).values,m="float32"===s.dtype?255:1,b=new Uint8ClampedArray(p*d*4);for(let y=0;y<d*p;++y){const t=[0,0,0,255*l];for(let n=0;n<f;n++){const e=g[y*f+n];if("float32"===s.dtype){if(e<0||e>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(e,"."))}else if("int32"===s.dtype&&(e<0||e>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(e,"."));1===f?(t[0]=e*m,t[1]=e*m,t[2]=e*m):t[n]=e*m}const e=4*y;b[e+0]=Math.round(t[0]),b[e+1]=Math.round(t[1]),b[e+2]=Math.round(t[2]),b[e+3]=Math.round(t[3])}o.width=p,o.height=d;const x=new ImageData(b,p,d);return h.putImageData(x,0,0),s}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VI(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:r}=a;let i;Vy(s,"sum"),i="bool"===s.dtype?nk({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):Jy({inputs:{x:s},backend:n});const c=i.shape.length,l=_(o,i.shape),u=Wi(l,c);let h=l,d=i;null!=u&&(d=bw({inputs:{x:i},backend:n,attrs:{perm:u}}),h=Vi(h.length,c)),Bi("sum",h,d.shape.length);const[p,f]=zi(d.shape,h);let g=Zy(n,p,Zs(d.dtype,"int32"));const m=N(f),b=n.data.get(g.dataId).values,x=n.data.get(d.dataId).values;for(let y=0;y<b.length;++y){const t=y*m;let e=0;for(let n=0;n<m;++n)e+=x[t+n];b[y]=e}if(r){const t=g;g=Ev({inputs:{x:g},backend:n,attrs:{shape:Pi(g.shape,l)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(i),null!=u&&n.disposeIntermediateTensorInfo(d),g}const GI={kernelName:Un,backendName:"cpu",kernelFunc:VI};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HI={kernelName:oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{equation:s}=a,o=e,{allDims:r,summedDims:i,idDims:c}=ud(s,o.length);dd(r.length,c,o);const{path:l,steps:u}=pd(i,c),h=u.length;let d=null,p=r.length;const f=[];for(let g=0;g<h;++g){for(const t of u[g]){const{permutationIndices:e,expandDims:a}=hd(p,c[t]);let s;fd(e)?s=o[t]:(s=bw({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),f.push(s));const r=s.shape.slice();for(let t=0;t<a.length;++t)r.splice(a[t],0,1);T(s.shape,r)||(s=Ev({inputs:{x:s},backend:n,attrs:{shape:r}}),f.push(s)),null===d?d=s:(d=lw({inputs:{a:s,b:d},backend:n}),f.push(d))}g<h-1&&(l[g]>=0&&(d=VI({inputs:{x:d},backend:n,attrs:{axis:l[g]-(r.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&n.disposeIntermediateTensorInfo(g);return d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jI={kernelName:ie,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:a,y:s}=e;Vy([a,s],"eluGrad");const o=new Float32Array(N(s.shape)),r=n.data.get(s.dataId).values,i=n.data.get(a.dataId).values;for(let c=0;c<r.length;++c){const t=r[c];o[c]=t>=0?i[c]:i[c]*(t+1)}return n.makeTensorInfo(s.shape,"float32",o)}},KI=Kh,qI=qh,XI=Xh,YI=Yh,ZI=Zh,JI=Jh,QI=gk(ce,(t=>{const e=Math.sign(t),n=Math.abs(t),a=1/(1+KI*n);return e*(1-((((JI*a+ZI)*a+YI)*a+XI)*a+qI)*a*Math.exp(-n*n))})),$I={kernelName:ce,backendName:"cpu",kernelFunc:QI};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tC(t){const{inputs:e,backend:n,attrs:a}=t,{input:s}=e,{dim:o}=a,r=s.shape.length,i=s.shape.slice();let c=o;return o<0&&(I(-(r+1)<=o,(()=>"Axis must be in the interval [".concat(-(r+1),", ").concat(r,"]"))),c=r+o+1),i.splice(c,0,1),Ev({inputs:{x:s},backend:n,attrs:{shape:i}})}const eC={kernelName:he,backendName:"cpu",kernelFunc:tC},nC=qy(((t,e)=>t/e)),aC=sk(se,nC),sC={kernelName:se,backendName:"cpu",kernelFunc:aC};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oC(t,e,n){const a=t.shape,s=a[0],o=a[1],r=n.data.get(t.dataId),i=r.complexTensorInfos.real,c=r.complexTensorInfos.imag,l=[s,o],u=N(l),h=L("float32",u),d=L("float32",u);for(let m=0;m<s;m++){const t=Uw({inputs:{x:i},backend:n,attrs:{begin:[m,0],size:[1,o]}}),a=Uw({inputs:{x:c},backend:n,attrs:{begin:[m,0],size:[1,o]}}),s=Xy({inputs:{real:t,imag:a},backend:n}),{real:r,imag:l}=rC(s,e,n),u=Qh(r,l);for(let e=0;e<o;e++){const t=nd(u,e);h[m*o+e]=t.real,d[m*o+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),g=Xy({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function rC(t,e,n){const a=N(t.shape),s=n.data.get(t.dataId),o=n.data.get(s.complexTensorInfos.real.dataId).values,r=n.data.get(s.complexTensorInfos.imag.dataId).values;if((i=a)&i-1){const t=function(t,e,n){const a=new Float32Array(2*e);for(let s=0;s<e;s++){let o=0,r=0;for(let a=0;a<e;a++){const i=od(s*a,e,n),c=nd(t,a);o+=c.real*i.real-c.imag*i.imag,r+=c.real*i.imag+c.imag*i.real}n&&(o/=e,r/=e),ad(a,o,r,s)}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(Qh(o,r),a,e);return $h(t)}{const s=iC(o,r,a,e,n),i=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(i,"float32",s.real),e=n.makeTensorInfo(i,"float32",s.imag),o=n.makeTensorInfo([],"float32",gs(a,"float32")),r=Jy({inputs:{x:o},backend:n}),c=sC.kernelFunc({inputs:{a:t,b:o},backend:n}),l=sC.kernelFunc({inputs:{a:e,b:r},backend:n}),u=n.data.get(c.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:u,imag:h}}return s}var i}function iC(t,e,n,a,s){if(1===n)return{real:t,imag:e};const o=Qh(t,e),r=n/2,i=td(o),c=i.real,l=i.imag,u=[c.length],h=s.makeTensorInfo(u,"float32",c),d=s.makeTensorInfo(u,"float32",l),p=Xy({inputs:{real:h,imag:d},backend:s}),f=ed(o),g=f.real,m=f.imag,b=[g.length],x=s.makeTensorInfo(b,"float32",g),y=s.makeTensorInfo(b,"float32",m),k=Xy({inputs:{real:x,imag:y},backend:s}),w=iC(c,l,r,a,s),v=w.real,I=w.imag,C=[v.length],S=s.makeTensorInfo(C,"float32",v),N=s.makeTensorInfo(C,"float32",I),T=Xy({inputs:{real:S,imag:N},backend:s}),E=iC(g,m,r,a,s),R=E.real,A=E.imag,F=[R.length],D=s.makeTensorInfo(F,"float32",R),_=s.makeTensorInfo(F,"float32",A),O=Xy({inputs:{real:D,imag:_},backend:s}),L=sd(n,a),M=[L.real.length],z=s.makeTensorInfo(M,"float32",L.real),P=s.makeTensorInfo(M,"float32",L.imag),B=Xy({inputs:{real:z,imag:P},backend:s}),W=lw({inputs:{a:B,b:O},backend:s}),U=ck({inputs:{a:T,b:W},backend:s}),V=cv({inputs:{a:T,b:W},backend:s}),G=$y({inputs:{input:U},backend:s}),H=$y({inputs:{input:V},backend:s}),j=pI({inputs:{input:U},backend:s}),K=pI({inputs:{input:V},backend:s}),q=gI({inputs:[G,H],backend:s,attrs:{axis:0}}),X=gI({inputs:[j,K],backend:s,attrs:{axis:0}}),Y=s.data.get(q.dataId).values,Z=s.data.get(X.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(X),{real:Y,imag:Z}}const cC={kernelName:pe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e,s=N(a.shape),o=a.shape[a.shape.length-1],r=Ev({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),i=oC(r,!1,n),c=Ev({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lC(t){const{backend:e,attrs:n}=t,{shape:a,value:s,dtype:o}=n,r=o||U(s),i=M(r,N(a));return function(t,e){t.fill(e)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(i,s),e.makeTensorInfo(a,r,i)}const uC={kernelName:fe,backendName:"cpu",kernelFunc:lC};const hC={kernelName:ge,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:a}=t,s=n,o=L(a.dtype,N(a.shape)),[r,i,c,l]=a.shape,u=s.data.get(a.dataId).values;for(let h=0;h<r;h++){const t=h*c*i*l;for(let e=0;e<i;e++){const n=e*(c*l);for(let e=0;e<c;e++){const a=e*l;for(let s=0;s<l;s++){const r=Math.round(c-e-1),i=t+n+a+s;let h=u[i];if(r>=0&&r<c){h=u[t+n+r*l+s]}o[i]=h}}}}return{dataId:s.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dC={kernelName:xa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o,bias:r,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let g=bI({inputs:{x:s,filter:o},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(r){const t=g;if("NCHW"===u&&1===r.shape.length&&1!==r.shape[0]){const t=Ev({inputs:{x:r},backend:n,attrs:{shape:[r.shape[0],1,1]}});g=ck({inputs:{a:g,b:t},backend:n}),n.disposeIntermediateTensorInfo(t)}else g=ck({inputs:{a:g,b:r},backend:n});n.disposeIntermediateTensorInfo(t)}if(p){const t=g;if("NCHW"===u&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const t=Ev({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});g=Tv(n,g,p,t,f),n.disposeIntermediateTensorInfo(t)}else g=Tv(n,g,p,i,f);n.disposeIntermediateTensorInfo(t)}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pC={kernelName:ya,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o,bias:r,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let g=_I({inputs:{x:s,filter:o},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(r){const t=g;g=ck({inputs:{a:g,b:r},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=g;g=Tv(n,g,p,i,f),n.disposeIntermediateTensorInfo(t)}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fC={kernelName:ke,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:a,indices:s}=e,o=N(a.shape),r=s.shape,i=r[r.length-1],[c,l,u,h]=rh(a,s);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const d=Mk(n.data.get(s.dataId).values,n.bufferSync(a),a.dtype,l,i,u,h,a.shape,o);return n.makeTensorInfo(c,a.dtype,d.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gC={kernelName:ye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,indices:o}=e,{axis:r,batchDims:i}=a;Vy([s,o],"gatherV2");const c=_(r,s.shape)[0],l=n.data.get(o.dataId).values,u=s.shape[c];for(let y=0;y<l.length;++y){const t=l[y];I(t<=u-1&&t>=0,(()=>"GatherV2: the index value ".concat(t," is not in [0, ").concat(u-1,"]")))}let h=i;null==i&&(h=0);const d=N(o.shape),p=Fd(s,o,c,h),f=Ev({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=Ev({inputs:{x:o},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],b=n.bufferSync(g),x=zk(n.bufferSync(f),b,m);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(p.outputShape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mC={kernelName:Ce,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e,s=N(a.shape),o=a.shape[a.shape.length-1],r=Ev({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),i=oC(r,!0,n),c=Ev({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),c}},bC=gk(Ne,(t=>Number.isFinite(t)?1:0),"bool"),xC={kernelName:Ne,backendName:"cpu",kernelFunc:bC},yC=gk(Te,(t=>Math.abs(t)===1/0?1:0),"bool"),kC={kernelName:Te,backendName:"cpu",kernelFunc:yC},wC=gk(Ee,(t=>Number.isNaN(t)?1:0),"bool"),vC={kernelName:Ee,backendName:"cpu",kernelFunc:wC};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IC={kernelName:De,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{backend:e,attrs:n}=t,{start:a,stop:s,num:o}=n,r=Zk(a,s,o);return e.makeTensorInfo([r.length],"float32",r)}},CC=gk(Oe,(t=>Math.log1p(t))),SC={kernelName:Oe,backendName:"cpu",kernelFunc:CC},NC=qy(((t,e)=>t&&e)),TC=sk(Le,NC,null,"bool"),EC={kernelName:Le,backendName:"cpu",kernelFunc:TC},RC=gk(Me,(t=>t?0:1),"bool"),AC={kernelName:Me,backendName:"cpu",kernelFunc:RC},FC=qy(((t,e)=>t||e)),DC=sk(ze,FC,null,"bool"),_C={kernelName:ze,backendName:"cpu",kernelFunc:DC};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OC={kernelName:Pe,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{depthRadius:o,bias:r,alpha:i,beta:c}=a;Vy(s,"LRN");const l=s.shape[3],u=l-1,h=n.data.get(s.dataId).values,d=N(s.shape),p=new Float32Array(d);function f(t){const e=t%l;let n=t-e+Math.max(0,e-o);const a=t-e+Math.min(e+o,u);let s=0;for(;n<=a;n++){const t=h[n];s+=t*t}return s}for(let g=0;g<d;g++){const t=f(g),e=h[g]*Math.pow(r+i*t,-c);p[g]=e}return n.makeTensorInfo(s.shape,s.dtype,p)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LC={kernelName:Be,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,y:o,dy:r}=e,{depthRadius:i,bias:c,alpha:l,beta:u}=a;Vy(r,"LRNGrad");const h=N(r.shape),d=r.shape[3],p=n.data.get(r.dataId).values,f=n.data.get(s.dataId).values,g=n.data.get(o.dataId).values,m=new Float32Array(h),b=h;for(let x=0;x<b;x++){const t=x%d,e=x-t+Math.max(0,t-i),n=x-t+Math.min(d,t+i+1);let a=0;for(let s=e;s<n;s++)a+=Math.pow(f[s],2);a=l*a+c;for(let s=e;s<n;s++){let t=-2*l*u*f[s]*g[x]/a;x===s&&(t+=Math.pow(a,-u)),t*=p[x],m[s]+=t}}return n.makeTensorInfo(r.shape,s.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MC(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{reductionIndices:o,keepDims:r}=a,i=n;let c=s.shape;const l=c.length,u=_(o,c);let h=u;const d=Wi(h,l);let p=i.data.get(s.dataId).values;if(null!=d){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=c[d[e]];p=mw(p,c,s.dtype,d,t),h=Vi(h.length,l),c=t}Vy(s,"max"),Bi("max",h,l);const[f,g]=zi(c,h),m=tw(p,N(g),f,s.dtype),b=i.write(m,f,s.dtype);let x=f;if(r){x=Pi(f,u)}return{dataId:b,shape:x,dtype:s.dtype}}const zC={kernelName:We,backendName:"cpu",kernelFunc:MC};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PC={kernelName:Ve,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e;Vy(s,"maxPool");const{filterSize:o,strides:r,pad:i,dimRoundingMode:c}=a;I(zr(r,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(1,"'")));const l=Tr(s.shape,o,r,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&T(l.inShape,l.outShape))u=Jy({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=H(s.shape),a=$v(t,s.shape,s.dtype,e,l,"max");u=n.makeTensorInfo(l.outShape,s.dtype,a.values)}return u}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BC={kernelName:He,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{filterSize:o,strides:r,pad:i,dimRoundingMode:c,dataFormat:l}=a;Vy(s,"maxPool3d");const u=Er(s.shape,o,r,1,i,c,l),h=eI(n.data.get(s.dataId).values,s.shape,s.dtype,H(s.shape),u,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WC={kernelName:je,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o}=e,{filterSize:r,strides:i,pad:c,dimRoundingMode:l}=a;Vy([s,o],"maxPool3DGrad");const u=Er(o.shape,r,i,1,c,l),h=function(t,e){const n=ir(e.outShape,"int32"),a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let g=0;g<e.batchSize;++g)for(let m=0;m<e.inChannels;++m)for(let b=0;b<e.outDepth;++b){const x=b*a-d;let y=x;for(;y<0;)y+=r;const k=Math.min(e.inDepth,l+x);for(let a=0;a<e.outHeight;++a){const l=a*s-p;let d=l;for(;d<0;)d+=i;const w=Math.min(e.inHeight,u+l);for(let s=0;s<e.outWidth;++s){const p=s*o-f;let v=p;for(;v<0;)v+=c;const I=Math.min(e.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,S=-1;for(let e=y;e<k;e+=r){const n=e-x;for(let a=d;a<w;a+=i){const s=a-l;for(let o=v;o<I;o+=c){const r=o-p,i=t.get(g,e,a,o,m);i>=C&&(C=i,S=n*u*h+s*u+r)}}}n.set(S,g,b,a,s,m)}}}return n}(n.bufferSync(o),u),d=u.strideDepth,p=u.strideHeight,f=u.strideWidth,g=u.dilationDepth,m=u.dilationHeight,b=u.dilationWidth,x=u.effectiveFilterDepth,y=u.effectiveFilterHeight,k=u.effectiveFilterWidth,w=x-1-u.padInfo.front,v=k-1-u.padInfo.left,I=y-1-u.padInfo.top,C=ir(o.shape,"float32"),S=n.bufferSync(s);for(let N=0;N<u.batchSize;++N)for(let t=0;t<u.inChannels;++t)for(let e=0;e<u.inDepth;++e)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const s=e-w,o=n-I,r=a-v;let i=0;for(let e=0;e<x;e+=g){const n=(s+e)/d;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let a=0;a<y;a+=m){const s=(o+a)/p;if(!(s<0||s>=u.outHeight||Math.floor(s)!==s))for(let o=0;o<k;o+=b){const c=(r+o)/f;if(c<0||c>=u.outWidth||Math.floor(c)!==c)continue;const l=x*y*k-1-h.get(N,n,s,c,t)===e*y*k+a*k+o?1:0;if(0===l)continue;i+=S.get(N,n,s,c,t)*l}}}C.set(i,N,e,n,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UC={kernelName:Ge,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o,output:r}=e,i=o;Vy([o,r],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=Tr(i.shape,c,l,1,u,h),p=n.data.get(i.dataId).values,f=ir(d.outShape,i.dtype,tI(p,i.shape,i.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,k=d.effectiveFilterWidth,w=k-1-d.padInfo.left,v=y-1-d.padInfo.top,I=ir(i.shape,"float32"),C=n.data.get(s.dataId).values,S=ir(s.shape,"float32",C);for(let N=0;N<d.batchSize;++N)for(let t=0;t<d.inChannels;++t)for(let e=0;e<d.inHeight;++e)for(let n=0;n<d.inWidth;++n){const a=e-v,s=n-w;let o=0;for(let e=0;e<y;e+=b){const n=(a+e)/g;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let a=0;a<k;a+=x){const r=(s+a)/m;if(r<0||r>=d.outWidth||Math.floor(r)!==r)continue;const i=y*k-1-f.get(N,n,r,t)===e*k+a?1:0;if(0===i)continue;o+=S.get(N,n,r,t)*i}}I.set(o,N,e,n,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const VC={kernelName:Ke,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:a}=t,{filterSize:s,strides:o,pad:r,includeBatchInIndex:i}=e,c=n;Vy(a,"MaxPoolWithArgmax");const l=c.data.get(a.dataId).values,u=Tr(a.shape,s,o,[1,1],r),[h,d]=function(t,e,n,a,s){const o=$v(t,0,n,H(e),s,"max"),r=tI(t,e,n,s,!0,a);return[o.values,r.values]}(l,a.shape,a.dtype,i,u),p=c.write(h,u.outShape,a.dtype),f=c.write(d,u.outShape,a.dtype);return[{dataId:p,shape:u.outShape,dtype:a.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GC={kernelName:qe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:r}=a,i=_(o,s.shape),c=N(zi(s.shape,i)[1]),l=[],u=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(u);const h=nk({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=aC({inputs:{a:h,b:u},backend:n});l.push(d);const p=VI({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:r}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HC={kernelName:Xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:r}=a;Vy(s,"min");const i=_(o,s.shape);let c=i;const l=Wi(c,s.shape.length);let u=s;null!=l&&(u=bw({inputs:{x:s},backend:n,attrs:{perm:l}}),c=Vi(c.length,s.shape.length)),Bi("min",c,u.shape.length);const[h,d]=zi(u.shape,c),p=N(d),f=X(N(h),u.dtype),g=n.data.get(u.dataId).values;for(let b=0;b<f.length;++b){const t=b*p;let e=g[t];for(let n=0;n<p;++n){const a=g[t+n];(Number.isNaN(a)||a<e)&&(e=a)}f[b]=e}null!=l&&n.disposeIntermediateTensorInfo(u);const m=n.makeTensorInfo(h,u.dtype,f);if(r){const t=Ev({inputs:{x:m},backend:n,attrs:{shape:Pi(h,i)}});return n.disposeIntermediateTensorInfo(m),t}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jC={kernelName:Ze,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{paddings:o,mode:r}=a;Vy(s,"mirrorPad");const i=o.map(((t,e)=>t[0]+s.shape[e]+t[1])),c=o.map((t=>t[0])),l=o.map(((t,e)=>t[0]+s.shape[e])),u="reflect"===r?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=H(s.shape),f=N(i),g=i.length,m=H(i),b=L(s.dtype,f);for(let x=0;x<f;x++){let t=Q(x,g,m);for(let n=0;n<g;n++)t[n]<c[n]?t[n]=2*c[n]-t[n]-u:t[n]>=l[n]&&(t[n]=2*(l[n]-1)-t[n]+u);t=t.map(((t,e)=>t-c[e]));const e=J(t,d,p);b[x]=h[e]}return{dataId:n.write(b,i,s.dtype),shape:i,dtype:s.dtype}}},KC=qy(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),qC=sk(Je,KC),XC={kernelName:Je,backendName:"cpu",kernelFunc:qC};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YC(t){const{inputs:e,backend:n,attrs:a}=t,{logits:s}=e,{dim:o}=a,r=s.shape.length;let i=o;if(-1===i&&(i=r-1),i!==r-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(r," and dim was ").concat(i));const c=_([i],s.shape),l=MC({inputs:{x:s},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),u=Pi(l.shape,c),h=Ev({inputs:{x:l},backend:n,attrs:{shape:u}}),d=cv({inputs:{a:s,b:h},backend:n}),p=Sk({inputs:{x:d},backend:n}),f=VI({inputs:{x:p},backend:n,attrs:{axis:c,keepDims:!1}}),g=Ev({inputs:{x:f},backend:n,attrs:{shape:u}}),m=aC({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const ZC={kernelName:Hn,backendName:"cpu",kernelFunc:YC};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JC={kernelName:Qe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{logits:s}=e,{numSamples:o,seed:r,normalized:i}=a;Vy(s,"multinomial");const c=i?s:YC({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],h=n.data.get(c.dataId).values,d=[l,o],p=X(N(d),"int32");for(let f=0;f<l;++f){const t=f*u,e=new Float32Array(u-1);e[0]=h[t];for(let s=1;s<e.length;++s)e[s]=e[s-1]+h[t+s];const n=gl.alea(r.toString()),a=f*o;for(let s=0;s<o;++s){const t=n();p[a+s]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){p[a+s]=n;break}}}return i||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(d,"int32",p)}},QC=Su;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $C={kernelName:nn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:o}=e,{maxOutputSize:r,iouThreshold:i,scoreThreshold:c}=a;Vy(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,{selectedIndices:h}=QC(l,u,r,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},tS=Nu;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eS={kernelName:an,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:o}=e,{maxOutputSize:r,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;Vy(s,"NonMaxSuppressionPadded");const u=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=tS(u,h,r,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},nS=Tu;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aS={kernelName:sn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:o}=e,{maxOutputSize:r,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;Vy(s,"NonMaxSuppressionWithScore");const u=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=r,p=i,f=c,g=l,{selectedIndices:m,selectedScores:b}=nS(u,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sS={kernelName:rn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:s}=e,{dtype:o,depth:r,onValue:i,offValue:c}=a;Vy(s,"oneHot");const l=N(s.shape),u=new Float32Array(l*r);u.fill(c);const h=n.data.get(s.dataId).values;for(let d=0;d<l;++d)h[d]>=0&&h[d]<r&&(u[d*r+h[d]]=i);return n.makeTensorInfo([...s.shape,r],o,u)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(t){const{inputs:e,backend:n}=t,{x:a}=e;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const t=$y({inputs:{input:a},backend:n}),e=oS({inputs:{x:t},backend:n}),s=pI({inputs:{input:a},backend:n}),o=oS({inputs:{x:s},backend:n}),r=Xy({inputs:{real:e,imag:o},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),r}return lC({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const rS={kernelName:pa,backendName:"cpu",kernelFunc:oS};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iS={kernelName:on,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:a}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=$y({inputs:{input:s},backend:a}),n=t({inputs:{x:e},backend:a}),o=pI({inputs:{input:s},backend:a}),r=oS({inputs:{x:o},backend:a}),i=Xy({inputs:{real:n,imag:r},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(r),i}return lC({backend:a,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(t){const{inputs:e,backend:n,attrs:a}=t,{axis:s}=a;if(1===e.length)return tC({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const o=e[0].shape,r=e[0].dtype;e.forEach((t=>{C(o,t.shape,"All tensors passed to stack must have matching shapes"),I(r===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=gI({inputs:e.map((t=>{const e=tC({inputs:{input:t},backend:n,attrs:{dim:s}});return i.push(e),e})),backend:n,attrs:{axis:s}});return i.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}const lS={kernelName:cn,backendName:"cpu",kernelFunc:cS};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uS={kernelName:ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{paddings:o,constantValue:r}=a;Vy(s,"pad");const i=o.map(((t,e)=>t[0]+s.shape[e]+t[1])),c=o.map((t=>t[0])),l=n.data.get(s.dataId).values,u=N(s.shape),h=s.shape.length,d=H(s.shape),p=N(i),f=i.length,g=H(i),m=L(s.dtype,p);0!==r&&m.fill(r);for(let b=0;b<u;b++){m[J(Q(b,h,d).map(((t,e)=>t+c[e])),f,g)]=l[b]}return{dataId:n.write(m,i,s.dtype),shape:i,dtype:s.dtype}}},hS=qy(((t,e)=>Math.pow(t,e))),dS=sk(un,hS),pS={kernelName:un,backendName:"cpu",kernelFunc:dS};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fS={kernelName:pn,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{paramsNestedSplits:s,paramsDenseValues:o,indices:r}=e,i=s.map((t=>n.data.get(t.dataId).values)),c=s.map((t=>t.shape)),l=n.data.get(o.dataId).values,u=n.data.get(r.dataId).values,[h,d,p]=Cw(i,c,l,o.shape,o.dtype,u,r.shape),f=h.map((t=>n.makeTensorInfo([t.length],"int32",t))),g=n.makeTensorInfo(p,o.dtype,d);return f.concat([g])}};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gS={kernelName:fn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{starts:a,limits:s,deltas:o}=e,r=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values,[l,u]=Nw(r,a.shape,a.dtype,i,s.shape,c,o.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mS={kernelName:gn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{shape:s,values:o,defaultValue:r,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=a,l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,h=n.data.get(r.dataId).values,d=i.map((t=>n.data.get(t.dataId).values)),p=i.map((t=>t.shape)),[f,g]=Fw(l,s.shape,u,o.shape,o.dtype,h,r.shape,d,p,c);return n.makeTensorInfo(f,o.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bS={kernelName:mn,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:s,dtype:o,step:r}=n,i=Dw(a,s,r,o);return e.makeTensorInfo([i.length],o,i)}},xS=gk(xn,(t=>1/t)),yS={kernelName:xn,backendName:"cpu",kernelFunc:xS};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kS={kernelName:In,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:r,size:i}=a;Vy(s,"resizeBilinear");const c=H(s.shape),[l,u]=i,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(N([h,l,u,f])),b=[o&&l>1?d-1:d,o&&u>1?p-1:p],x=[o&&l>1?l-1:l,o&&u>1?u-1:u];let y=0;const k=b[0]/x[0],w=b[1]/x[1];for(let v=0;v<h;v++)for(let t=0;t<l;t++){let e;e=r?k*(t+.5)-.5:k*t;const n=Math.max(0,Math.floor(e)),a=e-n,s=Math.min(d-1,Math.ceil(e)),o=v*c[0]+n*c[1],i=v*c[0]+s*c[1];for(let t=0;t<u;t++){let e;e=r?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),s=e-n,l=Math.min(p-1,Math.ceil(e)),u=o+n*c[2],h=i+n*c[2],d=o+l*c[2],b=i+l*c[2];for(let t=0;t<f;t++){const e=g[u+t],n=g[h+t],o=e+(g[d+t]-e)*s,r=o+(n+(g[b+t]-n)*s-o)*a;m[y++]=r}}}return n.makeTensorInfo([h,l,u,f],"float32",m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wS={kernelName:Cn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s,dy:o}=e,{alignCorners:r}=a;Vy([o,s],"resizeBilinearGrad");const i=H(s.shape),[c,l,u,h]=s.shape,[,d,p]=o.shape,f=new Float32Array(c*l*u*h),g=[r&&d>1?l-1:l,r&&p>1?u-1:u],m=[r&&d>1?d-1:d,r&&p>1?p-1:p],b=g[0]/m[0],x=g[1]/m[1],y=n.data.get(o.dataId).values;let k=0;for(let w=0;w<c;w++){const t=w*i[0];for(let e=0;e<d;e++){const n=e*b,a=Math.floor(n),s=Math.min(Math.ceil(n),l-1),o=t+a*i[1],r=t+s*i[1],c=n-a,d=1-c;for(let t=0;t<p;t++){const e=t*x,n=Math.floor(e),a=Math.min(Math.ceil(e),u-1),s=e-n,l=1-s,p=o+n*i[2],g=o+a*i[2],m=r+n*i[2],b=r+a*i[2],w=d*l,v=d*s,I=c*l,C=c*s;for(let t=0;t<h;t++){const e=y[k++];f[p+t]+=e*w,f[g+t]+=e*v,f[m+t]+=e*I,f[b+t]+=e*C}}}}return n.makeTensorInfo([c,u,l,h],"float32",f)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vS={kernelName:wn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:r,size:i}=a;Vy(s,"resizeNearestNeighbor");const c=H(s.shape),[l,u]=i,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(h*l*u*f),b=[o&&l>1?d-1:d,o&&u>1?p-1:p],x=[o&&l>1?l-1:l,o&&u>1?u-1:u],y=b[0]/x[0],k=b[1]/x[1];let w=0;for(let v=0;v<h;v++){const t=v*c[0];for(let e=0;e<l;e++){const n=r?y*(e+.5):y*e;let a=Math.min(d-1,o?Math.round(n):Math.floor(n));r&&(a=Math.max(0,a));const s=t+a*c[1];for(let t=0;t<u;t++){const e=r?k*(t+.5):k*t;let n=Math.min(p-1,o?Math.round(e):Math.floor(e));r&&(n=Math.max(0,n));const a=s+n*c[2];for(let t=0;t<f;t++){const e=g[a+t];m[w++]=e}}}}return n.makeTensorInfo([h,l,u,f],s.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS={kernelName:vn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s,dy:o}=e,{alignCorners:r}=a;Vy([o,s],"resizeNearestNeighborGrad");const i=H(s.shape),c=H(o.shape),[l,u,h,d]=s.shape,[,p,f]=o.shape,g=new Float32Array(l*u*h*d),m=n.data.get(o.dataId).values,b=[r&&p>1?u-1:u,r&&f>1?h-1:h],x=[r&&p>1?p-1:p,r&&f>1?f-1:f],y=b[0]/x[0],k=b[1]/x[1],w=1/y,v=1/k,I=2*Math.ceil(w)+2,C=2*Math.ceil(v)+2;for(let S=0;S<l;S++){const t=S*i[0];for(let e=0;e<u;e++){const n=t+e*i[1],a=Math.floor(e*w),s=Math.floor(a-I/2);for(let o=0;o<h;o++){const a=n+o*i[2],l=Math.floor(o*v),b=Math.floor(l-C/2);for(let n=0;n<d;n++){let i=0;for(let a=0;a<I;a++){const l=a+s;if(l<0||l>=p)continue;const d=t+l*c[1],g=l*y;if(e===Math.min(u-1,r?Math.round(g):Math.floor(g)))for(let t=0;t<C;t++){const e=t+b;if(e<0||e>=f)continue;const a=d+e*c[2],s=e*k;o===Math.min(h-1,r?Math.round(s):Math.floor(s))&&(i+=m[a+n])}}g[a+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CS={kernelName:Nn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{dims:o}=a;Vy(s,"reverse");const r=s.shape.length,i=_(o,s.shape);if(0===r)return Jy({inputs:{x:s},backend:n});const c=new _s(s.shape,s.dtype),l=n.bufferSync(s);for(let u=0;u<c.size;u++){const t=c.indexToLoc(u),e=t.slice();i.forEach((t=>e[t]=s.shape[t]-1-e[t])),c.set(l.get(...e),...t)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},SS={kernelName:ma,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:a}=t,{radians:s,fillValue:o,center:r}=e,i=n,c=L(a.dtype,N(a.shape)),[l,u,h,d]=a.shape,[p,f]=Ph(r,u,h),g=Math.sin(s),m=Math.cos(s),b=i.data.get(a.dataId).values;for(let x=0;x<l;x++){const t=x*h*u*d;for(let e=0;e<u;e++){const n=e*(h*d);for(let a=0;a<h;a++){const s=a*d;for(let r=0;r<d;r++){const i=[l,e,a,r],x=i[2],y=i[1];let k=(x-p)*m-(y-f)*g,w=(x-p)*g+(y-f)*m;k=Math.round(k+p),w=Math.round(w+f);let v=o;if("number"!=typeof o&&(v=3===r?255:o[r]),k>=0&&k<h&&w>=0&&w<u){v=b[t+w*(h*d)+k*d+r]}c[t+n+s+r]=v}}}}return{dataId:i.write(c,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},NS=gk(Tn,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),TS={kernelName:Tn,backendName:"cpu",kernelFunc:NS};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ES={kernelName:Rn,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:s,updates:o}=e,{shape:r}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Ql(0,s,r),d=Mw(n.bufferSync(s),n.bufferSync(o),r,h,l,c,i,u,0,!0);return n.makeTensorInfo(r,d.dtype,d.values)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RS(t,e){let n=0,a=t.length,s=0;for(;n<a;)s=Math.floor((n+a)/2),t[s]<e?n=s+1:a=s;return a}function AS(t,e){let n=0,a=t.length,s=0;for(;n<a;)s=Math.floor((n+a)/2),t[s]<=e?n=s+1:a=s;return a}const FS={kernelName:Fn,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{sortedSequence:s,values:o}=e,{side:r}=a,i=function(t,e,n,a,s,o){const r=M("int32",n*s);for(let i=0;i<n;++i){const n=t.slice(i*a,(i+1)*a),c=i*s;for(let t=0;t<s;++t)r[c+t]="left"===o?RS(n,e[t+c]):AS(n,e[t+c])}return r}(n.data.get(s.dataId).values,n.data.get(o.dataId).values,s.shape[0],s.shape[1],o.shape[1],r);return n.makeTensorInfo(o.shape,"int32",i)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DS={kernelName:Dn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:a,t:s,e:o}=e;Vy([a,s,o],"select");const r=a.shape.length,i=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,u=Zs(s.dtype,o.dtype),h=X(N(s.shape),u);let d=0;const p=0===r||r>1||1===s.shape.length?1:N(s.shape.slice(1));for(let f=0;f<i.length;f++)for(let t=0;t<p;t++)1===i[f]?h[d++]=c[f]:h[d++]=l[f];return n.makeTensorInfo(s.shape,u,h)}},_S=Hh,OS=jh,LS=gk(_n,(t=>t>=0?OS*t:_S*(Math.exp(t)-1))),MS={kernelName:_n,backendName:"cpu",kernelFunc:LS},zS=gk(zn,(t=>t<0?-1:t>0?1:0)),PS={kernelName:zn,backendName:"cpu",kernelFunc:zS},BS=gk(Ln,(t=>Math.sin(t))),WS={kernelName:Ln,backendName:"cpu",kernelFunc:BS},US=gk(Mn,(t=>Math.sinh(t))),VS={kernelName:Mn,backendName:"cpu",kernelFunc:US},GS=Math.log(1.1920928955078125e-7)+2,HS=gk(Bn,(t=>{const e=t>-GS,n=t<GS,a=Math.exp(t);let s;return s=n?a:e?t:Math.log(1+a),s})),jS={kernelName:Bn,backendName:"cpu",kernelFunc:HS};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KS={kernelName:Vn,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockShape:o,paddings:r}=a;Vy([s],"spaceToBatchND");const i=N(o),c=[[0,0]];c.push(...r);for(let m=1+o.length;m<s.shape.length;++m)c.push([0,0]);const l=uS.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),u=Bh(l.shape,o,i,!1),h=Wh(u.length,o.length,!1),d=Uh(l.shape,o,i,!1),p=Ev({inputs:{x:l},backend:n,attrs:{shape:u}}),f=bw({inputs:{x:p},backend:n,attrs:{perm:h}}),g=Ev({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qS={kernelName:jn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:a,values:s,denseShape:o,defaultValue:r}=e;if(1!==o.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(o.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==s.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(s.shape));if(0!==r.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(r.shape));const i=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,u=n.data.get(r.dataId).values[0],[h,d,p,f,g]=Gw(i,a.shape,a.dtype,c,s.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([g.length],a.dtype,new Int32Array(g))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XS={kernelName:Kn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:a,inputShape:s,newShape:o}=e;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==s.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(s.shape));if(1!==o.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(o.shape));const r=Array.from(n.data.get(s.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(o.dataId).values),[l,u,h]=Hw(i,a.shape,a.dtype,r,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YS={kernelName:qn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:s,segmentIds:o}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(s.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(o.shape));if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const r=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values,[l,u]=jw(r,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZS={kernelName:Xn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:s,segmentIds:o}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(s.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(o.shape));if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const r=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values,[l,u]=jw(r,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JS={kernelName:Yn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sparseIndices:s,sparseValues:o,defaultValue:r}=e,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Ql(0,s,i),p=!1,f=n.bufferSync(s);let g;switch(o.dtype){case"bool":g=Mw(f,n.bufferSync(o),i,d,u,l,c,h,Boolean(n.data.get(r.dataId).values[0]),p);break;case"float32":g=Mw(f,n.bufferSync(o),i,d,u,l,c,h,n.data.get(r.dataId).values[0],p);break;case"int32":g=Mw(f,n.bufferSync(o),i,d,u,l,c,h,n.data.get(r.dataId).values[0],p);break;case"string":g=Mw(f,n.bufferSync(o),i,d,u,l,c,h,ys(n.data.get(r.dataId).values[0]),p);break;default:throw new Error("Unsupported type ".concat(o.dtype))}return n.makeTensorInfo(i,g.dtype,g.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QS={kernelName:Gn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{numOrSizeSplits:o,axis:r}=a,i=_(r,s.shape)[0],c=md(s,o,i),l=new Array(s.shape.length).fill(0),u=s.shape.slice();return c.map((t=>{const e=[...u];e[i]=t;const a=Uw({inputs:{x:s},backend:n,attrs:{begin:l,size:e}});return l[i]+=t,a}))}},$S={kernelName:Jn,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,a=e;Vy(n,"square");const s=a.data.get(n.dataId).values,o=new Float32Array(s.length);for(let r=0;r<s.length;++r){const t=s[r];o[r]=t*t}return{dataId:a.write(o,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},tN=gk(fa,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),eN={kernelName:fa,backendName:"cpu",kernelFunc:tN};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nN={kernelName:$n,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{begin:o,end:r,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a;Vy(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:x,end:y,strides:k}=vh(s.shape,o,r,i,c,l,u,h,d);let w;if(g)w=Ev({inputs:{x:s},backend:n,attrs:{shape:f}});else if(m||b){I(s.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(s.shape.length)));const t=uh(x,y,k),e=Uw({inputs:{x:s},backend:n,attrs:{begin:x,size:t}});w=Ev({inputs:{x:e},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(e)}else{const t=tv(p,n.bufferSync(s),k,x);w=n.makeTensorInfo(f,t.dtype,t.values)}return w}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aN={kernelName:ta,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{separator:s,nGramWidths:o,leftPad:r,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=e,d=n.data.get(u.dataId).values,p=n.data.get(h.dataId).values,[f,g]=nv(d,p,s,o,r,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sN={kernelName:ea,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{skipEmpty:s}=a,{input:o,delimiter:r}=e;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error("Input must be a vector, got shape: ".concat(o.shape));if(0!==r.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(r.shape));const i=n.data.get(o.dataId).values,c=n.data.get(r.dataId).values[0],[l,u,h]=sv(i,c,s),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oN={kernelName:na,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{numBuckets:s}=a,{input:o}=e;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const r=ov(n.data.get(o.dataId).values,s);return n.makeTensorInfo(o.shape,"int32",r)}},rN=gk(sa,(t=>Math.tan(t))),iN={kernelName:sa,backendName:"cpu",kernelFunc:rN},cN=gk(oa,(t=>Math.tanh(t)));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return k(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return k(0,n,e-1)}(t,e);case"nearest":return function(t,e){return k(0,t,e-1)}(t,e);default:return function(t){return t}(t)}}function uN(t,e,n,a,s,o,r,i,c,l,u){return 0<=i&&i<e&&0<=c&&c<n?t[r*a+i*s+c*o+l]:u}function hN(t,e,n,a,s,o,r,i,c,l,u){return uN(t,e,n,a,s,o,r,Math.round(i),Math.round(c),l,u)}function dN(t,e,n,a,s,o,r,i,c,l,u){const h=Math.floor(i),d=Math.floor(c),p=h+1,f=d+1;return(p-i)*((f-c)*uN(t,e,n,a,s,o,r,h,d,l,u)+(c-d)*uN(t,e,n,a,s,o,r,h,f,l,u))+(i-h)*((f-c)*uN(t,e,n,a,s,o,r,p,d,l,u)+(c-d)*uN(t,e,n,a,s,o,r,p,f,l,u))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pN=[Dv,Ky,Ov,Mv,lk,zv,Pv,Bv,Wv,Uv,Gv,jv,qv,Zv,Qv,nI,aI,sI,oI,Fv,rI,iI,cI,pk,lI,ak,yk,hI,Yy,dI,mI,xI,yI,kI,wI,vI,II,SI,TI,EI,RI,AI,FI,DI,OI,LI,MI,zI,PI,BI,WI,UI,HI,bv,jI,Ik,$I,Nk,eC,Rk,cC,uC,hC,Dk,Lk,dC,pC,fC,gC,Wk,Gk,Qy,mC,fI,xC,kC,vC,yv,Kk,Yk,IC,$k,SC,EC,AC,_C,OC,LC,zC,aw,PC,BC,WC,UC,VC,GC,HC,rw,jC,XC,JC,uw,dw,$C,eS,aS,gw,sS,iS,lS,uS,pS,vv,kw,fS,gS,mS,bS,tk,sC,yS,Cv,Nv,Rv,kS,wS,vS,IS,CS,SS,TS,Lw,ES,FS,DS,MS,Bw,PS,WS,VS,Vw,ZC,jS,KS,qS,XS,YS,ZS,JS,QS,Xw,$S,Jw,$w,eN,nN,aN,sN,oN,lv,GI,iN,{kernelName:oa,backendName:"cpu",kernelFunc:cN},{kernelName:An,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n}=t,{tensor:a,indices:s,updates:o}=e,{sliceRank:r,numUpdates:i,sliceSize:c,strides:l,outputSize:u}=Ql(0,s,a.shape),h=n.bufferSync(s),d=n.bufferSync(o),p=n.bufferSync(a),f=Mw(h,d,a.shape,u,c,i,r,l,p,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}},{kernelName:ra,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{reps:o}=a;Vy(s,"tile");const r=uv(n.bufferSync(s),o);return n.makeTensorInfo(r.shape,r.dtype,r.values)}},{kernelName:ia,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{k:o,sorted:r}=a;Vy(s,"topk");const i=n.data.get(s.dataId).values,[c,l]=pv(i,s.shape,s.dtype,o,r);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},{kernelName:ca,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,attrs:n,backend:a}=t,{image:s,transforms:o}=e,{interpolation:r,fillMode:i,fillValue:c,outputShape:l}=n,[u,h,d,p]=s.shape,[f,g]=null!=l?l:[h,d],m=[u,f,g,p],b=H(s.shape),x=b[0],y=b[1],k=b[2],w=H(m),v=w[0],I=w[1],C=w[2],S=L(s.dtype,N(m));S.fill(c);const T=a.data.get(s.dataId).values,E=a.data.get(o.dataId).values;for(let N=0;N<u;++N){const t=1===o.shape[0]?E:E.subarray(8*N,8*N+8);for(let e=0;e<f;++e)for(let n=0;n<g;++n)for(let a=0;a<p;++a){let s;const o=t[6]*n+t[7]*e+1;if(0===o)continue;const l=(t[0]*n+t[1]*e+t[2])/o,u=(t[3]*n+t[4]*e+t[5])/o,p=lN(l,d,i),f=lN(u,h,i);switch(r){case"nearest":s=hN(T,h,d,x,y,k,N,f,p,a,c);break;case"bilinear":s=dN(T,h,d,x,y,k,N,f,p,a,c);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(r))}S[N*v+e*I+n*C+a]=s}return a.makeTensorInfo(m,s.dtype,S)}return{dataId:a.write(S,m,s.dtype),shape:s.shape,dtype:s.dtype}}},xw,{kernelName:ua,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{axis:s}=n,{x:o}=e;Vy(o,"unique");const r=a.data.get(o.dataId).values,{outputValues:i,outputShape:c,indices:l}=fv(r,s,o.shape,o.dtype);return[a.makeTensorInfo(c,o.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}},{kernelName:ha,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{value:s}=e;let{axis:o}=a;o<0&&(o+=s.shape.length);const r=s.shape.length,i=s.shape[o],c=new Array(r-1);let l=0;for(let p=0;p<r;p++)p!==o&&(c[l++]=s.shape[p]);const u=new Array(r).fill(0),h=s.shape.slice();h[o]=1;const d=new Array(i);for(let p=0;p<d.length;p++){u[o]=p;const t=Uw({inputs:{x:s},backend:n,attrs:{begin:u,size:h}});d[p]=Ev({inputs:{x:t},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(t)}return d}},{kernelName:da,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,segmentIds:o}=e,{numSegments:r}=a;Vy(s,"unsortedSegmentSum");const i=[],c=[],l=s.shape.length-o.shape.length;let u=o;for(let d=0;d<l;++d){const t=tC({inputs:{input:u},backend:n,attrs:{dim:d+1}});u=t,c.push(t)}for(let d=0;d<r;++d){const t=gs(d,"int32"),e=n.makeTensorInfo([],"int32",t),a=vk({inputs:{a:e,b:u},backend:n}),o=nk({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=lw({inputs:{a:o,b:s},backend:n}),l=VI({inputs:{x:r},backend:n,attrs:{axis:0,keepDims:!1}});i.push(l),c.push(e),c.push(a),c.push(o),c.push(r),c.push(l)}const h=cS({inputs:i,backend:n,attrs:{axis:0}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},rS];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const sM of pN)Na(sM);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fN={},gN={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function mN(t,e){if(!(t in fN)||null!=e){const n=function(t,e){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?function(t){if(at().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==t){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(t):e;n.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete fN[t]}),!1),at().getBool("SOFTWARE_WEBGL_ENABLED")&&(gN.failIfMajorPerformanceCaveat=!1);if(1===t)return n.getContext("webgl",gN)||n.getContext("experimental-webgl",gN);return n.getContext("webgl2",gN)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t,e);if(null===n)return console.log("Could not get context for WebGL version",t),null;fN[t]=n}const n=fN[t];return null==n||n.isContextLost()?(delete fN[t],mN(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),fN[t])}var bN,xN,yN,kN,wN,vN;function IN(t,e){return[e,t]}function CN(t){const e=N(t);return R(Math.ceil(e/4))}function SN(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function NN(t,e){const n=t;let a,s,o,r,i,c,l,u,h,d;return 2===at().getNumber("WEBGL_VERSION")?(a=n.R32F,s=n.R16F,o=n.RGBA16F,r=n.RGBA32F,i=n.RED,l=4,u=1,h=n.HALF_FLOAT,d=n.FLOAT,c=n.RGBA8):(a=t.RGBA,s=t.RGBA,o=t.RGBA,r=n.RGBA,i=t.RGBA,l=4,u=4,h=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT,c=t.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:r,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(t,e){const n=e();return at().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(e)}}(t,e))}(t),n}(xN=bN||(bN={}))[xN.DENSE=0]="DENSE",xN[xN.SHARED_BATCH=1]="SHARED_BATCH",(kN=yN||(yN={}))[kN.RENDER=0]="RENDER",kN[kN.UPLOAD=1]="UPLOAD",kN[kN.PIXELS=2]="PIXELS",kN[kN.DOWNLOAD=3]="DOWNLOAD",(vN=wN||(wN={}))[vN.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",vN[vN.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",vN[vN.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",vN[vN.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",vN[vN.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";function EN(t){return!!(at().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function RN(t,e){return PN(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}const AN=/ERROR: [0-9]+:([0-9]+):/g;function FN(t,e){const n=AN.exec(e);if(null==n)return console.log("Couldn't parse line number in error: ".concat(e)),void console.log(t);const a=+n[1],s=t.split("\n"),o=s.length.toString().length+2,r=s.map(((t,e)=>A((e+1).toString(),o)+t));let i=0;for(let h=0;h<r.length;h++)i=Math.max(r[h].length,i);const c=r.slice(0,a-1),l=r.slice(a-1,a),u=r.slice(a);console.log(c.join("\n")),console.log(e.split("\n")[0]),console.log("%c ".concat(A(l[0],i)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join("\n"))}function DN(t,e){if(TN(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function _N(t,e,n,a,s,o,r){const i=t.getAttribLocation(e,n);return-1!==i&&(TN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,a))),TN(t,(()=>t.vertexAttribPointer(i,s,t.FLOAT,!1,o,r))),TN(t,(()=>t.enableVertexAttribArray(i))),!0)}function ON(t,e,n){!function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=e+t.TEXTURE0;if(a<t.TEXTURE0||a>n){const t="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(t,"."))}}(t,n),TN(t,(()=>t.activeTexture(t.TEXTURE0+n))),TN(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}function LN(t,e,n){TN(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),TN(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function MN(t,e){TN(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),TN(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function zN(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(e)}}(t,e))}function PN(t,e,n){const a=TN(t,(()=>e()));if(null==a)throw new Error(n);return a}function BN(t,e=2){return N(t.slice(0,t.length-e))}function WN(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function UN(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[BN(t),...WN(t)]),e}function VN(t){return t%2==0}function GN(t,e){if(T(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t[t.length-1],a=e[e.length-1];if(n===a)return!0;if(VN(n)&&VN(a)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&VN(t[0])&&VN(e[0])}let HN,jN;function KN(t,e){return null!=t.getExtension(e)}function qN(t){try{if(null!=mN(t))return!0}catch(nM){return console.log("Error when getting WebGL context: ",nM),!1}return!1}function XN(t){if(0===t)return!1;const e=mN(t);if(1!==t){if(KN(e,"EXT_color_buffer_float"))return YN(e);const t="EXT_color_buffer_half_float";if(KN(e,t)){const n=e.getExtension(t);return function(t,e){const n=NN(t,e),a=t.createTexture();t.bindTexture(t.TEXTURE_2D,a);const s=1,o=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,s,o,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,a,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(a),t.deleteFramebuffer(r),i}(e,n)}return!1}if(!KN(e,"OES_texture_float"))return!1;if(!KN(e,"WEBGL_color_buffer_float"))return!1;return YN(e)}function YN(t){const e=NN(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(a),s}function ZN(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&I("complex64"!==t.dtype,(()=>"".concat(e," does not support complex64 tensors ")+"in the WebGL backend."))}))}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JN=at();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QN(){let t,e,n,a,s,o,r,i,c,l;return 2===at().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",a="in",s="texture",o="outputColor",r="out vec4 outputColor;",i=at().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",a="varying",s="texture2D",o="gl_FragColor",r="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:a,texture2D:s,output:o,defineOutput:r,defineSpecialNaN:i,defineSpecialInf:c,defineRound:l}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(t,e,n="index"){const a=H(e);return a.map(((e,s)=>{const o="int ".concat(t[s]," = ").concat(n," / ").concat(e),r=s===a.length-1?"int ".concat(t[s+1]," = ").concat(n," - ").concat(t[s]," * ").concat(e):"index -= ".concat(t[s]," * ").concat(e);return"".concat(o,"; ").concat(r,";")})).join("")}function tT(t,e,n="index"){const a=H(e);return a.map(((e,s)=>{const o="int ".concat(t[s]," = ").concat(n," / outShapeStrides[").concat(s,"]"),r=s===a.length-1?"int ".concat(t[s+1]," = ").concat(n," - ").concat(t[s]," * outShapeStrides[").concat(s,"]"):"index -= ".concat(t[s]," * outShapeStrides[").concat(s,"]");return"".concat(o,"; ").concat(r,";")})).join("")}function eT(t,e,n="index"){const a=function(t,e){const n=t.length,a=t.map((t=>"".concat(e,"[").concat(t,"]"))),s=new Array(n-1);s[n-2]=a[n-1];for(let o=n-3;o>=0;--o)s[o]="(".concat(s[o+1]," * ").concat(a[o+1],")");return s}(t.map(((t,e)=>e)),e);return a.map(((e,s)=>{const o="int ".concat(t[s]," = ").concat(n," / ").concat(a[s]),r=s===a.length-1?"int ".concat(t[s+1]," = ").concat(n," - ").concat(t[s]," * ").concat(a[s]):"index -= ".concat(t[s]," * ").concat(a[s]);return"".concat(o,"; ").concat(r,";")})).join("")}function nT(t){const e=H(t).map((t=>t.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(e[0]," + coords.y * ").concat(e[1]," + coords.z;\n  }\n")}JN.registerFlag("HAS_WEBGL",(()=>JN.getNumber("WEBGL_VERSION")>0)),JN.registerFlag("WEBGL_VERSION",(()=>qN(2)?2:qN(1)?1:0)),JN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),JN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===JN.get("WEBGL_VERSION"))),JN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),JN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),JN.registerFlag("WEBGL_PACK",(()=>JN.getBool("HAS_WEBGL"))),JN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>JN.getBool("WEBGL_PACK"))),JN.registerFlag("WEBGL_PACK_CLIP",(()=>JN.getBool("WEBGL_PACK"))),JN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>JN.getBool("WEBGL_PACK"))),JN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>JN.getBool("WEBGL_PACK"))),JN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>JN.getBool("WEBGL_PACK"))),JN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>JN.getBool("WEBGL_PACK"))),JN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>JN.getBool("WEBGL_PACK"))),JN.registerFlag("WEBGL_PACK_REDUCE",(()=>JN.getBool("WEBGL_PACK"))),JN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>JN.getBool("WEBGL_PACK"))),JN.registerFlag("WEBGL_CONV_IM2COL",(()=>JN.getBool("WEBGL_PACK"))),JN.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>JN.getBool("WEBGL_PACK"))),JN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==HN){const e=mN(t);HN=e.getParameter(e.MAX_TEXTURE_SIZE)}return HN}(JN.getNumber("WEBGL_VERSION")))),JN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==jN){const e=mN(t);jN=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,jN)}(JN.getNumber("WEBGL_VERSION")))),JN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=JN.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=mN(t);return e=KN(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:KN(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),JN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>JN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!lo())),JN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=mN(t);if(1===t){if(!KN(e,"OES_texture_float"))return!1}else if(!KN(e,"EXT_color_buffer_float"))return!1;return YN(e)}(JN.getNumber("WEBGL_VERSION")))),JN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!JN.getBool("WEBGL_FORCE_F16_TEXTURES")&&JN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),JN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>XN(JN.getNumber("WEBGL_VERSION")))),JN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=JN.getNumber("WEBGL_VERSION"))&&null!=mN(t).fenceSync;var t})),JN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>JN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),JN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if("number"!=typeof t)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(t,"."));if(t<0&&-1!==t)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(t,"."))})),JN.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>lo()?1:-1),(t=>{if("number"!=typeof t)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(t,"."));if(t<0&&-1!==t)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(t,"."))})),JN.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),JN.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),JN.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),JN.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),JN.registerFlag("WEBGL_EXP_CONV",(()=>!1)),JN.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>JN.getBool("IS_TEST"))),JN.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),JN.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),JN.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),JN.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const aT="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:sT}=Ld;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(t,e,n){const a=[];if(t.forEach((t=>{const e=N(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?a.push("uniform float ".concat(t.name).concat(e>1?"[".concat(e,"]"):"",";")):(a.push("uniform sampler2D ".concat(t.name,";")),a.push("uniform int offset".concat(t.name,";"))),n.enableShapeUniforms){const{uniformShape:e}=gT(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:a.push("uniform int ".concat(t.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(t.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(t.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(t.name,"Shape;"))}a.push("uniform ivec2 ".concat(t.name,"TexShape;"))}})),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((t=>{a.push("uniform ".concat(t.type," ").concat(t.name).concat(t.arrayIndex?"[".concat(t.arrayIndex,"]"):"",";"))}));const s=a.join("\n"),o=t.map((t=>function(t,e,n=!1,a){let s="";s+=n?iT(t,a):rT(t,a);const o=t.shapeInfo.logicalShape,r=e.logicalShape;o.length<=r.length&&(s+=n?function(t,e){const n=t.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",o=t.shapeInfo.logicalShape.length,r=e.logicalShape.length,i=sT(t.shapeInfo.logicalShape,e.logicalShape),c=fT(r),l=r-o;let u;const h=["x","y","z","w","u","v"];u=0===o?"":r<2&&i.length>=1?"coords = 0;":i.map((t=>"coords.".concat(h[t+l]," = 0;"))).join("\n");let d="";d=r<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords.".concat(h[e+l]))).join(", ");let p="return outputValue;";const f=1===N(t.shapeInfo.logicalShape),g=N(e.logicalShape),m=1===g;if(1!==o||f||m){if(f&&!m)p=1===r?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const t=o-2,e=o-1;i.indexOf(t)>-1&&i.indexOf(e)>-1?p="return vec4(outputValue.x);":i.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(s,"() {\n      ").concat(c," coords = getOutputCoords();\n      ").concat(u,"\n      vec4 outputValue = get").concat(a,"(").concat(d,");\n      ").concat(p,"\n    }\n  ")}(t,e):function(t,e){const n=t.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",o=e.texShape,r=t.shapeInfo.texShape,i=t.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!t.shapeInfo.isUniform&&i===c&&null==t.shapeInfo.flatOffset&&T(r,o))return"\n      float ".concat(s,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=fT(c),u=sT(t.shapeInfo.logicalShape,e.logicalShape),h=c-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":c<2&&u.length>=1?"coords = 0;":u.map((t=>"coords.".concat(p[t+h]," = 0;"))).join("\n");let f="";f=c<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords.".concat(p[e+h]))).join(", ");return"\n    float ".concat(s,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(d,"\n      return get").concat(a,"(").concat(f,");\n    }\n  ")}(t,e));return s}(t,e,n.packedInputs,n.enableShapeUniforms))).join("\n"),r=e.texShape,i=QN(),c=function(t){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(t.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(i);let l,u,h=function(t){const e="".concat(t.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(t.varyingFs," vec2 resultUV;\n    ").concat(t.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(t.defineSpecialNaN,"\n    ").concat(t.defineSpecialInf,"\n    ").concat(t.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(cT,"\n    ").concat(lT,"\n    ").concat(uT,"\n  ");return e}(i);e.isPacked?(l=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,e,n);case 2:return function(t,e,n){const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(T(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const s=Math.ceil(t[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(s,");\n      int c = imod(index, ").concat(s,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(t,e,n);case 3:return function(t,e,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),o=s*Math.ceil(t[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(o,";\n      index -= b * ").concat(o,";\n\n      int r = 2 * (index / ").concat(s,");\n      int c = imod(index, ").concat(s,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(t,e,n);default:return function(t,e,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),o=s*Math.ceil(t[t.length-2]/2);let r=o,i="",c="b, r, c";for(let l=2;l<t.length-1;l++)r*=t[t.length-l-1],i="\n      int b".concat(l," = index / ").concat(r,";\n      index -= b").concat(l," * ").concat(r,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(t.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(o,";\n      index -= b * ").concat(o,";\n\n      int r = 2 * (index / ").concat(s,");\n      int c = imod(index, ").concat(s,") * 2;\n\n      return ivec").concat(t.length,"(").concat(c,");\n    }\n  ")}(t,e,n)}}(e.logicalShape,r,n.enableShapeUniforms),u=function(t){return"\n    void setOutput(vec4 val) {\n      ".concat(t.output," = val;\n    }\n  ")}(i)):(l=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){if(1===e[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(e[1],".0);\n      }\n    ");if(1===e[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(e[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      return resTexRC.x * ").concat(e[1]," + resTexRC.y;\n    }\n  ")}(0,e,n);case 2:return function(t,e,n){if(T(t,e))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(e[0],", ").concat(e[1],"));\n      }\n    ");if(1===t[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===t[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      int r = index / ").concat(t[1],";\n      int c = index - r * ").concat(t[1],";\n      return ivec2(r, c);\n    }\n  ")}(t,e,n);case 3:return function(t,e,n){if(n){const e=tT(["r","c","d"],t);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(e,"\n    return ivec3(r, c, d);\n  }\n")}const a=$N(["r","c","d"],t);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,e,n);case 4:return function(t,e,n){if(n){const e=tT(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(e,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=$N(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(t,e,n);case 5:return function(t,e){const n=$N(["r","c","d","d2","d3"],t);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(e[0],",\n                             ").concat(e[1],"));\n\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(t,e);case 6:return function(t,e){const n=$N(["r","c","d","d2","d3","d4"],t);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(t,e);default:throw new Error("".concat(t.length,"-D output sampling is not yet supported"))}}(e.logicalShape,r,n.enableShapeUniforms),u=function(t){return"\n    void setOutput(float val) {\n      ".concat(t.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(i)),n.packedInputs&&(h+=hT);return[h,c,u,s,l,o,n.userCode].join("\n")}function rT(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[s,o]=t.shapeInfo.texShape;if(1===s&&1===o)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const r=dT(n);if(e)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(r,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=t.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(r,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t,e);case 1:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(pT(t),"\n      }\n    ");const s=t.shapeInfo.texShape,o=s[0],r=s[1];if(1===r&&1===o)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=dT(n);if(1===r)return e?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(o,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===o)return e?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(r,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(e)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(o,", ").concat(r,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=t.shapeInfo.texShape;if(null!=o&&T(n,o)){if(e)return"\n      float ".concat(s,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const t=o[0],n=o[1];return"\n    float ".concat(s,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(t,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:r,keptDims:i}=O(n),c=r;if(c.length<n.length){const n=mT(t,c),a=["row","col"];return"\n      ".concat(rT(n,e),"\n      float ").concat(s,"(int row, int col) {\n        return ").concat(s,"(").concat(bT(a,i),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(s,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(pT(t),"\n      }\n    ");const l=o[0],u=o[1],h=dT(a);if(1===u)return e?"\n      float ".concat(s,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(s,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(l,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===l)return e?"\n      float ".concat(s,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(s,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(u,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(e)return"\n      float ".concat(s,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(s,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(l,", ").concat(u,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[1]*n[2],r=n[2],{newShape:i,keptDims:c}=O(n),l=i;if(l.length<n.length){const n=mT(t,l),a=["row","col","depth"];return"\n        ".concat(rT(n,e),"\n        float ").concat(s,"(int row, int col, int depth) {\n          return ").concat(s,"(").concat(bT(a,c),");\n        }\n      ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(s,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(o,", ").concat(r,", 1)));\n        ").concat(pT(t),"\n      }\n    ");const u=t.shapeInfo.texShape,h=u[0],d=u[1],p=t.shapeInfo.flatOffset;if(d===o&&null==p)return e?"\n      float ".concat(s,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(s,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(r,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(d,".0, ").concat(h,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(d===r&&null==p)return e?"\n      float ".concat(s,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(s,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(d,".0, ").concat(h,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const f=dT(a);if(e)return"\n    float ".concat(s,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(s,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(o," + col * ").concat(r," + depth + ").concat(f,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(d,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(t,e);case 4:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[3],r=n[2]*o,i=n[1]*r,{newShape:c,keptDims:l}=O(n);if(c.length<n.length){const n=mT(t,c),a=["row","col","depth","depth2"];return"\n      ".concat(rT(n,e),"\n      float ").concat(s,"(int row, int col, int depth, int depth2) {\n        return ").concat(s,"(").concat(bT(a,l),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(r,", ").concat(o,", 1)));\n        ").concat(pT(t),"\n      }\n    ");const u=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1],f="int stride2 = ".concat(a,"Shape[3];"),g="int stride1 = ".concat(a,"Shape[2] * stride2;"),m="int stride0 = ".concat(a,"Shape[1] * stride1;");if(p===i&&null==u)return e?"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        ").concat(f,"\n        ").concat(g,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(r,", ").concat(o,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(p===o&&null==u)return e?"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const b=dT(a);if(e)return"\n    float ".concat(s,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(f,"\n      ").concat(g,"\n      ").concat(m,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(b,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(s,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(r," +\n          depth * ").concat(o," + depth2;\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index + ").concat(b,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(t,e);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],o=e[3]*s,r=e[2]*o,i=e[1]*r,{newShape:c,keptDims:l}=O(e);if(c.length<e.length){const e=mT(t,c),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(rT(e),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(bT(n,l),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(i,", ").concat(r,", ").concat(o,", ").concat(s,")) +\n          depth3;\n        ").concat(pT(t),"\n      }\n    ");const u=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(r,", ").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(p===s&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3],",\n               ").concat(e[2]*e[3],", ").concat(e[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=dT(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(r," + depth * ").concat(o," +\n          depth2 * ").concat(s," + depth3 + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:o}=O(e);if(s.length<e.length){const e=mT(t,s),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(rT(e),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(bT(n,o),");\n      }\n    ")}const r=e[5],i=e[4]*r,c=e[3]*i,l=e[2]*c,u=e[1]*l;if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(r,", 1)));\n        ").concat(pT(t),"\n      }\n    ");const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(c,", ").concat(i,", ").concat(r,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===r&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3]*e[4],",\n               ").concat(e[2]*e[3]*e[4],",\n               ").concat(e[3]*e[4],",\n               ").concat(e[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const g=dT(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(u," + col * ").concat(l," + depth * ").concat(c," +\n          depth2 * ").concat(i," + depth3 * ").concat(r," + depth4 + ").concat(g,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function iT(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),a=QN();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(e,", halfCR);\n    }\n  ")}(t);case 1:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,o=QN();if(e)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(o.texture2D,"(").concat(n,", uv);\n    }\n  ");const r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(r[0],", ").concat(r[1],", index);\n      return ").concat(o.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=t.shapeInfo.texShape,r=o[0],i=o[1],c=QN();if(null!=o&&T(n,o))return e?"\n      vec4 ".concat(s,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(s,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(r,".0);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    ");if(e)return"\n    vec4 ".concat(s,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ");const l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=Math.ceil(n[1]/2);return"\n    vec4 ".concat(s,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(u,", ").concat(l[0],", ").concat(l[1],", row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ")}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=t.shapeInfo.texShape,r=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===n[0]){const a=[1,2],o=mT(t,n.slice(1)),r=["b","row","col"];return"\n        ".concat(iT(o,e),"\n        vec4 ").concat(s,"(int b, int row, int col) {\n          return ").concat(s,"(").concat(bT(r,a),");\n        }\n      ")}const i=QN();if(e)return"\n    vec4 ".concat(s,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=r[0],l=r[1],u=Math.ceil(n[2]/2),h=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(s,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(h,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(t,e);default:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=QN();if(e)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=t.shapeInfo.logicalShape,r=o.length,i=t.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],h=Math.ceil(o[r-1]/2);let d=h*Math.ceil(o[r-2]/2),p="int b, int row, int col",f="b * ".concat(d," + (row / 2) * ").concat(h," + (col / 2)");for(let g=2;g<r-1;g++)p="int b".concat(g,", ")+p,d*=o[r-g-1],f="b".concat(g," * ").concat(d," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t,e)}}const cT="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",lT="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",uT="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",hT="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function dT(t){return"offset".concat(t)}function pT(t){const e=t.name,n=N(t.shapeInfo.logicalShape);return n<2?"return ".concat(e,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(e,"[i];\n      }\n    }\n  ")}function fT(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error("GPU for rank ".concat(t," is not yet supported"))}function gT(t,e,n){const{newShape:a,keptDims:s}=O(e),o=e.length,r=t&&3===o&&1===e[0],i=r?e.slice(1):a,c=!t&&o>1&&!T(e,n)&&a.length<o||r;return{useSqueezeShape:c,uniformShape:c?i:e,keptDims:s}}function mT(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function bT(t,e){return e.map((e=>t[e])).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xT(t,e,n,a){const s=n.map(((t,n)=>{const a={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(a.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:a}})),o=s.map((t=>t.shapeInfo)),r={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},i=oT(s,r,e),c=function(t,e){const n=PN(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(TN(t,(()=>t.shaderSource(n,e))),TN(t,(()=>t.compileShader(n))),at().get("ENGINE_COMPILE_ONLY"))return n;if(!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw FN(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t.gl,i),l=t.createProgram(c);return at().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:o,outShapeInfo:r,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(l),Object.assign({program:e,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:o,outShapeInfo:r},yT(t,e,l)))}function yT(t,e,n){const a=[],s=[];let o,r,i,c=null,l=null;l=t.getUniformLocation(n,"NAN",!1),1===at().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(n,"INFINITY",!1));const u=!1;for(const h of e.variableNames){const s={name:h,uniform:t.getUniformLocation(n,h,u),offset:t.getUniformLocation(n,"offset".concat(h),u)};e.enableShapeUniforms&&(s.shape=t.getUniformLocation(n,"".concat(h,"Shape"),u),s.texShape=t.getUniformLocation(n,"".concat(h,"TexShape"),u)),a.push(s)}if(e.enableShapeUniforms&&(o=t.getUniformLocation(n,"outShape",u),i=t.getUniformLocation(n,"outShapeStrides",u),r=t.getUniformLocation(n,"outTexShape",u)),e.customUniforms)for(const h of e.customUniforms)s.push(t.getUniformLocation(n,h.name,u));return{variablesLocations:a,customUniformLocations:s,infLoc:c,nanLoc:l,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:r}}function kT(t,e){if(t.length!==e.length)throw Error("Binary was compiled with ".concat(t.length," inputs, but ")+"was executed with ".concat(e.length," inputs"));t.forEach(((t,n)=>{const a=t.logicalShape,s=e[n],o=s.shape;if(!T(a,o))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(o," must match"));if(t.isUniform&&s.isUniform)return;const r=t.texShape,i=s.isUniform?null:s.texData.texShape;if(!T(r,i))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(r," and ").concat(i," must match"))}))}function wT(t){return at().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vT{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=bN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=QN();this.outputShape=t,this.enableShapeUniforms=wT(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?tT(["r","c","d"],t):$N(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IT{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=bN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=QN();this.outputShape=t,this.enableShapeUniforms=wT(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?tT(["r","c","d"],t):$N(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CT{constructor(t){this.variableNames=["A"],this.outTexUsage=yN.DOWNLOAD;const e=QN();this.outputShape=t,this.userCode="\n      ".concat(aT,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ST{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=yN.DOWNLOAD;const e=QN();this.outputShape=t,this.userCode="\n      ".concat(aT,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NT={R:0,G:1,B:2,A:3};class TT{constructor(t,e=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=QN();this.outputShape=t,this.enableShapeUniforms=wT(this.outputShape.length);let s="result";e&&(s="floor(result * 255. + 0.5)");let o="";for(let r=0;r<n.length;r++){const t=n[r];o+="\n          if(offset == ".concat(r,") {\n            result = values[").concat(NT[t],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":nT(t),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(o,"\n        }\n        ").concat(a.output," = vec4(").concat(s,", 0., 0., 0.);\n      }\n    ")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ET{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=QN();this.outputShape=t,this.enableShapeUniforms=wT(this.outputShape.length);let a="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let e=0;e<=1;e++){const s=2*o+e;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(e," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(t[2]),") {\n          localCoords[2] += ").concat(e,";\n          if (localCoords[1] + ").concat(o," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(t[1]),") {\n            localCoords[1] += ").concat(o,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(s,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(s,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(s,"] = values[2];\n            } else {\n              result[").concat(s,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":nT(t),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(s,";\n        }\n    ")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT(t){const e=QN();return function(t,e){const n=PN(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(TN(t,(()=>t.shaderSource(n,e))),TN(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,"".concat(e.version,"\n    precision highp float;\n    ").concat(e.attribute," vec3 clipSpacePos;\n    ").concat(e.attribute," vec2 uv;\n    ").concat(e.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function AT(t){return function(t,e){const n=PN(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return TN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),TN(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function FT(t){return function(t,e){const n=PN(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return TN(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),TN(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}function DT(t,e,n,a,s,o){!function(t,e){const n=at().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const n="[".concat(t,"x").concat(e,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(t>n||e>n){const a="[".concat(t,"x").concat(e,"]"),s="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+s+".")}}(e,n);const r=function(t){return PN(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),i=t.TEXTURE_2D;return TN(t,(()=>t.bindTexture(i,r))),TN(t,(()=>t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),TN(t,(()=>t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),TN(t,(()=>t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST))),TN(t,(()=>t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST))),1===at().getNumber("WEBGL_VERSION")?TN(t,(()=>t.texImage2D(i,0,a,e,n,0,s,o,null))):TN(t,(()=>t.texStorage2D(i,1,a,e,n))),TN(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),{texture:r,texShape:[n,e]}}function _T(t){return t.internalFormatFloat}function OT(t){return t.internalFormatHalfFloat}function LT(t){return t.downloadTextureFormat}function MT(t){return t.internalFormatPackedFloat}function zT(t){return t.internalFormatPackedHalfFloat}function PT(t,e,n,a,s,o,r,i){const c=t,l=new Float32Array(function(t,e){const[n,a]=SN(t,e);return n*a*4}(o,r));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class BT{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=at().getNumber("WEBGL_VERSION");if(null!=t?(this.gl=t,function(t,e){fN[t]=e}(e,t)):this.gl=mN(e),t=this.gl,2===at().getNumber("WEBGL_VERSION")){const e=t;this.createVertexArray=()=>TN(e,(()=>e.createVertexArray())),this.bindVertexArray=t=>TN(e,(()=>e.bindVertexArray(t))),this.deleteVertexArray=t=>TN(e,(()=>e.deleteVertexArray(t))),this.getVertexArray=()=>TN(e,(()=>e.getParameter(e.VERTEX_ARRAY_BINDING)))}else if(null!=t){const e=t.getExtension("OES_vertex_array_object");if(null==e)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>TN(t,(()=>e.createVertexArrayOES())),this.bindVertexArray=n=>TN(t,(()=>e.bindVertexArrayOES(n))),this.deleteVertexArray=n=>TN(t,(()=>e.deleteVertexArrayOES(n))),this.getVertexArray=()=>TN(t,(()=>t.getParameter(e.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===at().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=RN(this.gl,t),KN(this.gl,e))this.textureHalfFloatExtension=RN(this.gl,e);else if(at().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),KN(this.gl,a))this.colorBufferHalfFloatExtension=RN(this.gl,a);else if(at().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",KN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!KN(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=AT(this.gl),this.indexBuffer=FT(this.gl),this.framebuffer=function(t){return PN(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=NN(this.gl,this.textureHalfFloatExtension)}get debug(){return at().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;TN(t,(()=>t.finish())),TN(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),TN(t,(()=>t.deleteFramebuffer(this.framebuffer))),TN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),TN(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),TN(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,o]=IN(e,n);return DT(t,s,o,_T(a),a.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,o]=IN(e,n);return DT(t,s,o,OT(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,o]=IN(e,n);return DT(t,s,o,LT(a),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){TN(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?2===at().getNumber("WEBGL_VERSION")?TN(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data))):TN(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):2===at().getNumber("WEBGL_VERSION")?TN(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n))):TN(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),TN(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,a){this.throwIfDisposed(),function(t,e,n,a,s,o){let r,i,c;TN(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(r=new Uint8Array(n*a*4),i=t.UNSIGNED_BYTE,c=t.RGBA):(r=new Float32Array(n*a*4),i=t.FLOAT,c=o.internalFormatPackedFloat),r.set(s),2===at().getNumber("WEBGL_VERSION")?TN(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,a,t.RGBA,i,r))):TN(t,(()=>t.texImage2D(t.TEXTURE_2D,0,c,n,a,0,t.RGBA,i,r))),TN(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,o]=SN(e,n);return DT(t,s,o,zT(a),t.RGBA,a.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,o]=SN(e,n);return DT(t,s,o,MT(a),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(MN(this.gl,this.framebuffer),this.outputTexture=null),TN(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,a){const[s,o]=IN(e,n),r=new Uint8Array(e*n*4);return TN(t,(()=>t.readPixels(0,0,s,o,a.downloadTextureFormat,t.UNSIGNED_BYTE,r))),new Float32Array(r.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,a,s,o){return PT(this.gl,t,0,0,0,s,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const a=t,s=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,e),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,s),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const a=function(t,e,n){const a=t.createBuffer();TN(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a)));const s=16*e*n;return TN(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,s,t.STREAM_READ))),TN(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),TN(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),a}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(at().getBool("WEBGL_FENCE_API_ENABLED")){const a=t,s=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=a.clientWaitSync(s,0,0);return t===a.ALREADY_SIGNALED||t===a.CONDITION_SATISFIED},e=s}else at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const a=new Float32Array(e*n*4);return TN(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,a))),a}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=RT(e));const n=function(t){return PN(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);TN(e,(()=>e.attachShader(n,this.vertexShader))),TN(e,(()=>e.attachShader(n,t))),function(t,e){if(TN(t,(()=>t.linkProgram(e))),!at().get("ENGINE_COMPILE_ONLY")&&!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&DN(e,a),a}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;TN(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(t,e,n){TN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),_N(t,e,"clipSpacePos",n,3,20,0)&&_N(t,e,"uv",n,2,20,12)}(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&(TN(this.gl,(()=>this.gl.deleteProgram(t))),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&DN(this.gl,this.program),TN(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return PN(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),TN(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(t,e,n,a){TN(t,(()=>ON(t,e,a))),TN(t,(()=>t.uniform1i(n,a)))}(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[a,s]=SN(e,n);this.setOutputMatrixTextureDriver(t,a,s)}setOutputMatrixWriteRegion(t,e,n,a){this.setOutputMatrixWriteRegionDriver(n,t,a,e)}setOutputPackedMatrixWriteRegion(t,e,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&DN(this.gl,this.program),zN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}TN(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),TN(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=RN(this.gl,2===at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await F((()=>this.disposed||this.isQueryAvailable(t,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in at().platform&&(n=at().platform.setTimeoutCustom.bind(at().platform)),F((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),LN(this.gl,t,this.framebuffer),this.debug&&zN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(LN(this.gl,this.outputTexture,this.framebuffer),this.debug&&zN(this.gl)):MN(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const a=this.gl;LN(a,t,this.framebuffer),this.debug&&zN(a),this.outputTexture=t,TN(a,(()=>a.viewport(0,0,e,n))),TN(a,(()=>a.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,a){this.throwIfDisposed(),TN(this.gl,(()=>this.gl.scissor(t,e,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:WT,bincountImpl:UT,bincountReduceImpl:VT,bitwiseAndImpl:GT,castImpl:HT,ceilImpl:jT,concatImpl:KT,equalImpl:qT,expImpl:XT,expm1Impl:YT,floorImpl:ZT,gatherNdImpl:JT,gatherV2Impl:QT,greaterImpl:$T,greaterEqualImpl:tE,lessImpl:eE,lessEqualImpl:nE,linSpaceImpl:aE,logImpl:sE,maxImpl:oE,maximumImpl:rE,minimumImpl:iE,multiplyImpl:cE,negImpl:lE,notEqualImpl:uE,prodImpl:hE,raggedGatherImpl:dE,raggedRangeImpl:pE,raggedTensorToTensorImpl:fE,rangeImpl:gE,rsqrtImpl:mE,scatterImpl:bE,sigmoidImpl:xE,simpleAbsImpl:yE,sliceImpl:kE,sparseFillEmptyRowsImpl:wE,sparseReshapeImpl:vE,sparseSegmentReductionImpl:IE,sqrtImpl:CE,staticRegexReplaceImpl:SE,stridedSliceImpl:NE,stringNGramsImpl:TE,stringSplitImpl:EE,stringToHashBucketFastImpl:RE,subImpl:AE,tileImpl:FE,topKImpl:DE,transposeImpl:_E,uniqueImpl:OE}=gv;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LE(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>"".concat(t,".").concat(e)))}function ME(t,e){return 1===e?[t]:LE(t,e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zE{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=wT(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=ME("rc",this.rank),e=fT(this.rank),n=this.getOutOfBoundsCondition(t),a=this.getSetup(t),s=this.getOutput(t);this.userCode="\n        void main() {\n          ".concat(e," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(s,"));\n          }\n        }\n      ")}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let s="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let e=2;e<this.rank;e++)s="".concat(t[t.length-1-e],",")+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let e="";for(let n=this.rank-2;n<this.rank;n++)e+="".concat(t[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(e[0],";\n      int c = ").concat(e[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(t){const e=this.getSourceCoordsArr(t);if(1===this.rank){const t=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(t," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(e[0],"),\n            cEdge ? 0. : getA(").concat(e[1],"),\n            rEdge ? 0. : getA(").concat(e[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(e[3],")")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PE{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=wT(this.outputShape.length);let n="";for(let a=0;a<4;a++){let t="thisRC = rc;";a%2==1&&(t+="thisRC.z += 1;"),a>1&&(t+="thisRC.y += 1;"),n+="\n        ".concat(t,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(t,e){const n=e?eT(["r","c","d"],"inputShape"):$N(["r","c","d"],t);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":nT(t),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":t[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":t[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class BE{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,n){const a=UE(e,n),s=VE(t,a,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const o=WE(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const t=this.freeTextures[s].pop();return this.usedTextures[s].push(t),t}let r;return a===wN.PACKED_2X2_FLOAT32?r=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):a===wN.PACKED_2X2_FLOAT16?r=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):a===wN.UNPACKED_FLOAT32?r=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):a===wN.UNPACKED_FLOAT16?r=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):a===wN.PACKED_4X1_UNSIGNED_BYTE&&(r=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(r),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),r}releaseTexture(t,e,n,a){if(null==this.freeTextures)return;const s=UE(n,a),o=VE(e,s,a);o in this.freeTextures||(this.freeTextures[o]=[]);const r=WE(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,a),i=at().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=r):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=r),this.numUsedTextures--;const c=this.usedTextures[o],l=c&&c.indexOf(t);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(t,")"));const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*e),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function WE(t,e,n,a,s){const o=function(t,e){switch(t){case wN.PACKED_2X2_FLOAT32:return MT(e);case wN.PACKED_2X2_FLOAT16:return zT(e);case wN.UNPACKED_FLOAT32:return _T(e);case wN.UNPACKED_FLOAT16:return OT(e);case wN.PACKED_4X1_UNSIGNED_BYTE:return LT(e);default:throw new Error("Unknown physical texture type ".concat(t))}}(e,a);let r;if(s){const[e,n]=SN(t[0],t[1]);r=e*n}else{const[e,n]=IN(t[0],t[1]);r=e*n}const i=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(e))}(n,o);return r*i}function UE(t,e){if(t===yN.UPLOAD)return wN.PACKED_2X2_FLOAT32;if(t===yN.RENDER||null==t)return function(t){return at().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?wN.PACKED_2X2_FLOAT32:wN.UNPACKED_FLOAT32:t?wN.PACKED_2X2_FLOAT16:wN.UNPACKED_FLOAT16}(e);if(t===yN.DOWNLOAD||t===yN.PIXELS)return wN.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(t))}function VE(t,e,n){return"".concat(t[0],"_").concat(t[1],"_").concat(e,"_").concat(n)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GE{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=wT(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const HE="if (isnan(x)) return x;",jE="return x;",KE="return abs(x);",qE="return (x >= 0.0) ? x : (exp(x) - 1.0);",XE=HE+"\n  return (x < 0.0) ? 0.0 : x;\n",YE=HE+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",ZE="return x;",JE="return 1.0 / (1.0 + exp(-1.0 * x));",QE="return x;",$E="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",tR="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",eR="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",nR="return 1.0 / (1.0 + exp(-1.0 * x));";class aR{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=wT(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sR{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=wT(this.outputShape.length);const e=t.length,n=ME("rc",e),a=fT(e),s=function(t,e){if(1===t)return"rc";let n="";for(let a=0;a<t;a++)n+=e[a],a<t-1&&(n+=",");return n}(e,n),o=n.slice(-2),r=e<=1?"rc":"vec2(".concat(o.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(s,");\n\n        setOutput(getChannel(packedInput, ").concat(r,"));\n      }\n    ")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oR=su,rR={};const iR=at().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class cR extends b{nextDataId(){return cR.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!at().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof BT)e=t;else{const n=mN(at().getNumber("WEBGL_VERSION"),t);e=new BT(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const t=mN(at().getNumber("WEBGL_VERSION"));e=new BT(t),this.binaryCache=((n=at().getNumber("WEBGL_VERSION"))in rR||(rR[n]={}),rR[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new BE(this.gpgpu),this.numMBBeforeWarning=null==at().global.screen?1024:at().global.screen.height*at().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new m(this,Io())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,n,a,s,o){const r=this.makeTensorInfo(e,n),i=this.texData.get(r.dataId);i.isPacked=!1,i.texture={texture:t,texShape:[a,s]},i.texShape=[a,s];const c=UN(e),l=new TT(c,!1,o),u=this.runWebGLProgram(l,[r],n,[[a,s]]);return u.shape=e,i.texture=null,this.disposeIntermediateTensorInfo(r),u.dataId}write(t,e,n){if((at().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||at().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:e,dtype:n,values:t,usage:yN.UPLOAD,refCount:1}),a}refCount(t){if(this.texData.has(t)){return this.texData.get(t).refCount}return 0}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}move(t,e,n,a,s){if(at().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:a,values:e,usage:yN.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:a,complexTensorInfos:s,slice:o,shape:r,isPacked:i}=e;if(null!=o){let e;e=i?new aR(r,ZE):new GE(r,ZE);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:a}],a),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===a)return n;const c=null!=this.activeTimers;let l,u;if(c&&(l=bs()),"complex64"===a){u=Qh(this.readSync(s.real.dataId),this.readSync(s.imag.dataId))}else u=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=bs()-l),this.convertAndCacheOnCPU(t,u)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:a,slice:s,dtype:o,complexTensorInfos:r,isPacked:i}=e;if(null!=s){let e;e=i?new aR(a,ZE):new GE(a,ZE);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:o}],o),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(at().getBool("DEBUG")&&!at().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===at().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,u=null;if("complex64"!==o&&at().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);const e=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(e.texture.texture,...CN(a))}if(this.pendingRead.set(t,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const t=await Promise.all([this.read(r.real.dataId),this.read(r.imag.dataId)]);l=Qh(t[0],t[1])}else if(null==u)l=this.getValuesFromTexture(t);else{const t=N(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,t)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=u){const t=this.gpgpu.gl;TN(t,(()=>t.deleteBuffer(u)))}const h=this.convertAndCacheOnCPU(t,l),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Io().removeDataId(t,this),this.pendingDeletes--),h}readToGPU(t,e={}){const n=this.texData.get(t),{values:a,shape:s,slice:o,dtype:r,isPacked:i,texture:c}=n;if("complex64"===r)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=o){let n;n=i?new aR(s,ZE):new GE(s,ZE);const a=this.runWebGLProgram(n,[{dataId:t,shape:s,dtype:r}],r),o=this.readToGPU(a,e);return this.disposeIntermediateTensorInfo(a),o}if(null==c)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(t,e.customTexShape),u=Io().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:u},h.texture)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>ys(t)));return ir(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return ir(t.shape,t.dtype,e)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!EN(n)){if(at().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:a}=this.texData.get(t),s=N(e);if(at().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),a=this.texData.get(n.dataId),o=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...CN(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),o}const o=at().getBool("WEBGL_PACK")&&!0===a,r=o?UN(e):e,i=o?new ST(r):new CT(r),c=this.runWebGLProgram(i,[{shape:r,dtype:n,dataId:t}],"float32"),l=this.texData.get(c.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(c),u}timerAvailable(){return at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=ws(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),o=ws(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,a&&(this.programTimersStack=null);const r={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);r.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),r.getExtraProfileInfo=()=>t.map(((t,e)=>({name:o[e],ms:t}))).map((t=>"".concat(t.name,": ").concat(t.ms))).join(", ")}else r.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,r})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:bs(),endMs:null}}endTimer(t){return at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=bs(),t)}async getQueryTime(t){if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:a,usage:s,isPacked:o,slice:r}=this.texData.get(t),i=r&&r.origDataId||t,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=e&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(e,a,s,o)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=iR){return at().getBool("WEBGL_CPU_FORWARD")&&t.every((t=>null==this.texData.get(t.dataId).texture&&N(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){ka("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return oR(t.shape,e)}packedUnaryOp(t,e,n){const a=new aR(t.shape,e),s=this.compileAndRun(a,[t],n);return Io().makeTensorFromTensorInfo(s)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=yE(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(at().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,KE,t.dtype);const e=new GE(t.shape,KE),n=this.compileAndRun(e,[t]);return Io().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let a;if("string"===e&&null!=n&&n.length>0&&B(n[0])){const s=n.map((t=>xs(t)));a=this.write(s,t,e)}else a=this.write(n,t,e);return this.texData.get(a).usage=null,{dataId:a,shape:t,dtype:e}}makeOutput(t,e,n){return Io().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new sR(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new zE(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[BN(t.shape),...WN(t.shape)],a={dtype:t.dtype,shape:n,dataId:t.dataId},s=[BN(e),...WN(e)],o=new PE(s,n),r=[n],i=this.runWebGLProgram(o,[a],t.dtype,r,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:a,shape:s,dtype:o}=n;if(null!=e){I(N(s)<=e[0]*e[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const r=UN(s);let i;i=a?new IT(r):new vT(r);const c=[null!=e?e:CN(r)];return{dtype:o,shape:s,dataId:this.runWebGLProgram(i,[{shape:r,dtype:o,dataId:t}],o,c,!0,e).dataId}}runWebGLProgram(t,e,n,a,s=!1,o){const r=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(r.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===bN.DENSE){const e=null!=o?o:CN(t.outputShape);i.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===N(r.shape))return i.values=L(r.dtype,0),r;const c=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&N(e.shape)<=at().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),c.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!GN(n.shape,e.shape)){const t=e,a=e.shape;e.shape=n.shape,e=this.packedReshape(e,a),c.push(e),n=this.texData.get(e.dataId),t.shape=a}return{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(r.dataId);const u={shape:r.shape,texData:i,isUniform:!1},h=function(t,e,n){let a="";e.concat(n).forEach((e=>{const s=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const o=e.texData.texShape,{useSqueezeShape:r,uniformShape:i,keptDims:c}=gT(t.packedInputs,e.shape,o);let l="",u="",h="";if(1===i.length&&t.packedInputs){const t=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];l="".concat(t[0]>1,"_").concat(t[1]>1)}else if(2!==i.length||t.packedInputs){if(i.length>2&&!t.packedInputs){const t=H(i);h="".concat(t[0]===o[1],"_").concat(t[t.length-1]===o[1])}}else u="".concat(i[0]>1,"_").concat(i[1]>1);const d=e.shape.length,p=2===i.length&&T(e.shape,o),f=1===N(e.shape),g=Ci(e.shape,n.shape),m=!t.packedInputs&&d===n.shape.length&&T(o,n.texData.texShape),b=t.packedInputs||i.length>2?"":"".concat(o[0]>1,"_").concat(o[1]>1);a+="".concat(d,"_").concat(m,"_").concat(r?c:"","_").concat(i.length,"_").concat(f,"_").concat(g,"_").concat(p,"_").concat(l,"_").concat(u,"_").concat(h,"_").concat(b,"_").concat(s)}else{const t=e.isUniform?"uniform":e.texData.texShape;a+="".concat(e.shape,"_").concat(t,"_").concat(s)}}));const s=t.userCode;let o=t.constructor.name;return o+="_"+a+"_"+s+"".concat(at().getNumber("WEBGL_VERSION")),o}(t,l,u),d=this.getAndSaveBinary(h,(()=>xT(this.gpgpu,t,l,u))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),at().get("ENGINE_COMPILE_ONLY")||function(t,e,n,a,s){e.program.enableShapeUniforms||(kT(e.inShapeInfos,n),kT([e.outShapeInfo],[a]));const o=a.texData.texture,r=a.texData.texShape;a.texData.isPacked?t.setOutputPackedMatrixTexture(o.texture,r[0],r[1]):t.setOutputMatrixTexture(o.texture,r[0],r[1]),t.setProgram(e.webGLProgram),t.bindVertexArray(e.webGLProgram.vao),1===at().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN);for(let c=0;c<n.length;++c){const a=n[c],{uniform:s,offset:o,shape:r,texShape:i}=e.variablesLocations[c];if(r){const{uniformShape:n}=gT(e.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:t.gl.uniform1iv(r,new Int32Array(n));break;case 2:t.gl.uniform2iv(r,new Int32Array(n));break;case 3:t.gl.uniform3iv(r,new Int32Array(n));break;case 4:t.gl.uniform4iv(r,new Int32Array(n))}}if(i&&t.gl.uniform2i(i,a.texData.texShape[0],a.texData.texShape[1]),null!=s)if(a.isUniform)if(N(a.shape)<2)t.gl.uniform1f(s,a.uniformValues[0]);else{let e=a.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(s,e)}else null!=a.texData.slice&&null!=o&&t.gl.uniform1i(o,a.texData.slice.flatOffset),t.setInputMatrixTexture(a.texData.texture.texture,s,c)}const i=e.outShapeLocation;if(i)switch(a.shape.length){case 1:t.gl.uniform1iv(i,new Int32Array(a.shape));break;case 2:t.gl.uniform2iv(i,new Int32Array(a.shape));break;case 3:t.gl.uniform3iv(i,new Int32Array(a.shape));break;case 4:t.gl.uniform4iv(i,new Int32Array(a.shape))}if(e.outShapeStridesLocation){const n=H(a.shape);switch(a.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}if(e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),e.program.customUniforms&&s)for(let c=0;c<e.program.customUniforms.length;++c){const n=e.program.customUniforms[c],a=e.customUniformLocations[c],o=s[c];if("float"===n.type)t.gl.uniform1fv(a,o);else if("vec2"===n.type)t.gl.uniform2fv(a,o);else if("vec3"===n.type)t.gl.uniform3fv(a,o);else if("vec4"===n.type)t.gl.uniform4fv(a,o);else if("int"===n.type)t.gl.uniform1iv(a,o);else if("ivec2"===n.type)t.gl.uniform2iv(a,o);else if("ivec3"===n.type)t.gl.uniform3iv(a,o);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));t.gl.uniform4iv(a,o)}}t.executeProgram()}(this.gpgpu,d,l,u,a),c.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));const g=at().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const t=bs();t-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!at().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const t=this.unpackTensor(r);return this.disposeIntermediateTensorInfo(r),t}return r}compileAndRun(t,e,n,a,s=!1){n=n||e[0].dtype;return this.runWebGLProgram(t,e,n,a,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!at().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=So((()=>{if(!at().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=at().getBool("DEBUG");at().set("DEBUG",!1);const e=this.abs(Ki(1e-8)).dataSync()[0];if(at().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:a,values:s,texture:o,usage:r,isPacked:i}=e;if(null!=o)return;const c=null!=this.activeTimers;let l;c&&(l=bs());let u=e.texShape;if(null==u&&(u=function(t,e=!1){let n=at().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=at().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&at().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),e&&(n*=2,a*=2,1===(t=t.map(((e,n)=>n>=t.length-2?w(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=O(t);t=e.newShape}let s=N(t),o=null;t.length<=1&&s<=n?o=[1,s]:2===t.length&&t[0]<=n&&t[1]<=n?o=t:3===t.length&&t[0]*t[1]<=n&&t[2]<=n?o=[t[0]*t[1],t[2]]:3===t.length&&t[0]<=n&&t[1]*t[2]<=n?o=[t[0],t[1]*t[2]]:4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n?o=[t[0]*t[1]*t[2],t[3]]:4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(o=[t[0],t[1]*t[2]*t[3]]);const r=null!=o&&Math.max(...o)>a&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(null==o||r)if(e){const e=BN(t);let n=2,a=2;t.length&&([n,a]=WN(t)),s=e*(n/2)*(a/2),o=R(s).map((t=>2*t))}else o=R(s);return o}(n,i),e.texShape=u),null!=s){const t=UN(n);let o,r=u[1],h=u[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!i&&d||([r,h]=SN(u[0],u[1])),o=i?new ET(t,d):new TT(t,d);const p=d?[h,r]:u,f=this.makeTensorInfo(p,a),g=this.texData.get(f.dataId);g.usage=d?yN.PIXELS:yN.UPLOAD,g.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),r,h,s);const m=[[h,r]],b=!0,x=this.runWebGLProgram(o,[f],a,m,b),y=this.texData.get(x.dataId);e.texShape=y.texShape,e.isPacked=y.isPacked,e.usage=y.usage,at().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(e.texture=y.texture,e.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),c&&(this.uploadWaitMs+=bs()-l)}else{const t=this.acquireTexture(u,r,a,i);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:a}=n;return null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype ".concat(e))}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,a)),n.values}acquireTexture(t,e,n,a){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(t," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(t,e,a)}computeBytes(t,e){return t[0]*t[1]*P(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise((t=>{try{this.checkCompletion_(e),t(!0)}catch(n){throw n}}));t.push(n)}return Promise.all(t)}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await Th(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(!1===this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw FN(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:n,infLoc:a,nanLoc:s,outShapeLocation:o,outShapeStridesLocation:r,outTexShapeLocation:i}=yT(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=n,t.infLoc=a,t.nanLoc=s,t.outShapeLocation=o,t.outShapeStridesLocation=r,t.outTexShapeLocation=i}}createTensorFromGPUData(t,e,n){t.channels=t.channels||"RGBA";const{texture:a,height:s,width:o,channels:r}=t,i=Io().backend;if(!i.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=i.writeTexture(a,e,n,s,o,r);return Io().makeTensorFromDataId(c,e,n,i)}}cR.nextDataId=0,uo()&&Eo("webgl",(()=>new cR),2)
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */;const lR="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class uR{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=Ni(e,n),this.enableShapeUniforms=wT(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hR="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class dR{constructor(t,e,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ni(e,n);const s=this.outputShape.length;this.enableShapeUniforms=wT(s);let o="";if(a)if(0===s||1===N(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const t=fT(s);if(o="\n          ".concat(t," coords = getOutputCoords();\n        "),1===s)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const t=ME("coords",s);this.enableShapeUniforms?o+="\n            bool nextRowOutOfBounds =\n              (".concat(t[s-2]," + 1) >= outShape[").concat(s," - 2];\n            bool nextColOutOfBounds =\n              (").concat(t[s-1]," + 1) >= outShape[").concat(s," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):o+="\n            bool nextRowOutOfBounds =\n              (".concat(t[s-2]," + 1) >= ").concat(this.outputShape[s-2],";\n            bool nextColOutOfBounds =\n              (").concat(t[s-1]," + 1) >= ").concat(this.outputShape[s-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(o,"\n\n        setOutput(result);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(t){const{inputs:e,backend:n}=t,{x:a}=e;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const fR={kernelName:Ie,backendName:"webgl",kernelFunc:pR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR(t){const{inputs:e,backend:n}=t,{real:a,imag:s}=e,o=n.makeTensorInfo(a.shape,"complex64"),r=n.texData.get(o.dataId),i=pR({inputs:{x:a},backend:n}),c=pR({inputs:{x:s},backend:n});return r.complexTensorInfos={real:i,imag:c},o}const mR={kernelName:Ot,backendName:"webgl",kernelFunc:gR},bR="return (a < 0.) ? b * a : a;",xR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yR={kernelName:Re,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{alpha:o}=a,r=n.makeTensorInfo([],"float32",gs(o,"float32")),i=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dR(xR,s.shape,r.shape):new uR(bR,s.shape,r.shape),c=n.runWebGLProgram(i,[s,r],"float32");return n.disposeIntermediateTensorInfo(r),c}},kR="return (a < 0.) ? b * a : a;",wR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vR={kernelName:hn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a,alpha:s}=e,o=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dR(wR,a.shape,s.shape):new uR(kR,a.shape,s.shape);return n.runWebGLProgram(o,[a,s],"float32")}},IR="if (isnan(x)) return x;";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CR({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:a}){return({inputs:s,backend:o})=>{const{x:r}=s,i=o,c=a||r.dtype;if(i.shouldExecuteOnCPU([r])&&null!=n){const t=i.texData.get(r.dataId),e=n(t.values,c);return i.makeTensorInfo(r.shape,c,e)}let l;return l=at().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new aR(r.shape,e):new GE(r.shape,t),i.runWebGLProgram(l,[r],c)}}function SR({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:s,dtype:o}){return({inputs:r,backend:i})=>{const{a:c,b:l}=r,u=i;if(a&&"complex64"===c.dtype){const e=u.texData.get(c.dataId),n=u.texData.get(l.dataId),[a,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,s={dataId:n.dataId,dtype:n.dtype,shape:c.shape},o={dataId:a.dataId,dtype:a.dtype,shape:l.shape},r=new uR(t,c.shape,l.shape);return u.runWebGLProgram(r,[s,o],Zs(n.dtype,a.dtype))})),o=gR({inputs:{real:a,imag:s},backend:u});return u.disposeIntermediateTensorInfo(a),u.disposeIntermediateTensorInfo(s),o}const h=o||Zs(c.dtype,l.dtype);if(("string"===c.dtype||"string"===l.dtype||u.shouldExecuteOnCPU([c,l]))&&null!=s){const t=u.texData.get(c.dataId).values,e=u.texData.get(l.dataId).values,n="string"===c.dtype?_d(t):t,a="string"===c.dtype?_d(e):e,[o,r]=s(c.shape,l.shape,n,a,h),i=u.makeTensorInfo(r,h);return u.texData.get(i.dataId).values=o,i}let d;return d=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new dR(e,c.shape,l.shape,n):new uR(t,c.shape,l.shape),u.runWebGLProgram(d,[c,l],h)}}function NR(t,e=!1){if("linear"===t)return e?QE:jE;if("relu"===t)return e?tR:XE;if("elu"===t)return e?$E:qE;if("relu6"===t)return e?eR:YE;if("prelu"===t)return e?wR:kR;if("leakyrelu"===t)return e?xR:bR;if("sigmoid"===t)return e?nR:JE;throw new Error("Activation ".concat(t," has not been implemented for the WebGL backend."))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TR{constructor(t,e,n,a=!1,s=!1,o=!1,r=null,i=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=wT(this.outputShape.length);const l=a?t[1]:t[2],u=Math.ceil(l/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";r&&(g=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(r,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(r,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(r,"\n        }"),m="result = activation(result);");const b=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";t[0]<e[0]?x="imod(rc.x, ".concat(t[0],")"):e[0]<t[0]&&(y="imod(rc.x, ".concat(e[0],")")),this.userCode="\n      ".concat(g,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(x,";\n        int batchB = ").concat(y,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(h,");\n          vec4 b = getMatrixB(batchB, ").concat(d,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(b,"\n\n        ").concat(m,"\n\n        setOutput(result);\n      }\n    ")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ER={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class RR{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ni(e,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AR="return a * b;";function FR(t){const{inputs:e,backend:n}=t,{a:a,b:s}=e,o=Zs(a.dtype,s.dtype);if("complex64"===a.dtype){const t=n.texData.get(a.dataId),e=n.texData.get(s.dataId),o=new RR(ER.REAL,a.shape,s.shape),r=new RR(ER.IMAG,a.shape,s.shape),i=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],c=n.runWebGLProgram(o,i,"float32"),l=n.runWebGLProgram(r,i,"float32"),u=gR({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,s])){const t=n.texData.get(a.dataId),e=n.texData.get(s.dataId),[r,i]=cE(a.shape,s.shape,t.values,e.values,o),c=n.makeTensorInfo(i,o);return n.texData.get(c.dataId).values=r,c}let r;return r=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dR(AR,a.shape,s.shape):new uR(AR,a.shape,s.shape),n.runWebGLProgram(r,[a,s],o)}const DR={kernelName:$e,backendName:"webgl",kernelFunc:FR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _R(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{shape:o}=a,r=n,i=N(s.shape),c=D(o,i),l=N(c);I(i===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(s.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."));const u=r.texData.get(s.dataId);return!u.isPacked||GN(s.shape,c)||null!==u.texture&&GN(u.shape,c)?(r.incRef(s.dataId),{dataId:s.dataId,shape:c,dtype:s.dtype}):function(t,e,n){const a=[BN(t.shape),...WN(t.shape)],s={dtype:t.dtype,shape:a,dataId:t.dataId},o=[BN(e),...WN(e)],r=new PE(o,a),i=[a],c=n.runWebGLProgram(r,[s],t.dtype,i,!0);return{dataId:c.dataId,shape:e,dtype:c.dtype}}(s,c,r)}const OR={kernelName:kn,backendName:"webgl",kernelFunc:_R};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LR{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:o}=t;this.outputShape=[a,o];const r=4*Math.floor(n/4),i=n%4;let c="sumValue += dot(values, ones);";if(null!=e){const t=1/e;c="sumValue += dot(values * ".concat(E(t)?t.toPrecision(2):t,", ones);")}let l="";s%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(s,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(r,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(r,";\n        if (").concat(1===i,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(2===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(3===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(c,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MR{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:o}=t;this.outputShape=[a,o];let r="0.0",i="";"prod"===e?r="1.0":"min"===e?(r="1.0 / 1e-20",i="min"):"max"===e&&(r="-1.0 / 1e-20",i="max");let c="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===e?c="sumValue":"prod"===e?c="prodValue":"all"===e?c="allValue":"any"===e&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let h="\n      if (".concat("sum"===e,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===e,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===e," || ").concat("max"===e,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),d="vec4";"all"===e?(r="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(r="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(s,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(r,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(r,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(h,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(2===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(3===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(h,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zR(t,e,n,a){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],a=zh(n);e.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return e}(t.shape);let o=t;for(let r=0;r<s.length;r++){const{inSize:i,windowSize:c,outSize:l}=s[r];let u,h;u="mean"===n?0===r?new LR({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l},i):new LR({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l}):new MR({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l},n),h=o,o=a.runWebGLProgram(u,[o],e),h.dataId!==t.dataId&&a.disposeIntermediateTensorInfo(h)}return o}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PR{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.rank=n.length;const a=fT(this.rank),s=function(t){const e=t.length;if(e>6)throw Error("Transpose for rank ".concat(e," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(e);for(let s=0;s<t.length;s++)a[t[s]]=n[s];return a.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(s,"));\n    }\n    ")}}class BR{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let l=0;l<n.length;l++)n[l]=t[e[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=fT(this.rank),s=LE("rc",this.rank),o=new Array(this.rank);for(let l=0;l<e.length;l++)o[e[l]]=s[l];const r="vec2(".concat(o.slice(-2).join(),")"),i="++".concat(s[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(o.join(),"), ").concat(r,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(s[this.rank-1],";\n      if(++").concat(s[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(t,e,n){const a=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new BR(t.shape,e):new PR(t.shape,e);return n.runWebGLProgram(a,[t],t.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UR(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:r}=a;return function(t,e,n,a){const s=e,o=t.shape.length,r=_(s,t.shape);let i=r;const c=Wi(i,o),l=null!=c;let u=t;l&&(u=WR(t,c,a),i=Vi(i.length,o)),Bi("sum",i,o);const[h,d]=zi(u.shape,i);let p=h;n&&(p=Pi(h,r));const f=N(d),g=_R({inputs:{x:u},attrs:{shape:[N(t.shape)/f,f]},backend:a}),m=zR(g,Js(t.dtype),"sum",a),b=_R({inputs:{x:m},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(m),l&&a.disposeIntermediateTensorInfo(u),b}(s,o,r,n)}const VR={kernelName:Un,backendName:"webgl",kernelFunc:UR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{perm:o}=a,r=n,i=s.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=s.shape[o[u]];let l;if(r.shouldExecuteOnCPU([s])){const t=r.texData.get(s.dataId).values,e=_E(t,s.shape,s.dtype,o,c);l=r.makeTensorInfo(c,s.dtype);r.texData.get(l.dataId).values=e}else l=WR(s,o,r);return l}const HR={kernelName:la,backendName:"webgl",kernelFunc:GR},jR=1e3;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KR({a:t,b:e,transposeA:n,transposeB:a,backend:s,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:c=null}){const l=t.shape.length,u=e.shape.length,h=n?t.shape[l-2]:t.shape[l-1],d=a?e.shape[u-1]:e.shape[u-2],p=n?t.shape[l-1]:t.shape[l-2],f=a?e.shape[u-2]:e.shape[u-1],g=t.shape.slice(0,-2),m=e.shape.slice(0,-2),b=N(g),x=N(m),y=Ni(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);I(h===d,(()=>"Error in matMul: inner shapes (".concat(h,") and (")+"".concat(d,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(e.shape," and transposeA=").concat(n)+" and transposeB=".concat(a," must match.")));const k=n?[b,h,p]:[b,p,h],w=a?[x,f,d]:[x,d,f],v=_R({inputs:{x:t},backend:s,attrs:{shape:k}}),C=_R({inputs:{x:e},backend:s,attrs:{shape:w}}),S=[v,C],T=Math.max(b,x),E=n?v.shape[1]:v.shape[2],R=null!=o,A=null!=r,F="leakyrelu"===c,D=null!=c?NR(c,!0):null;let _;if((1===p||1===f)&&E>jR&&!1===(R||A||F||null!=D)){let t=v,e=C;n&&(t=GR({inputs:{x:v},backend:s,attrs:{perm:[0,2,1]}}),S.push(t)),a&&(e=GR({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),S.push(e));const o=1===f;let r=t;1!==f&&(r=_R({inputs:{x:t},backend:s,attrs:{shape:[T,E,1]}}),S.push(r));const i=1===f?2:1;let c=e;o&&(c=_R({inputs:{x:e},backend:s,attrs:{shape:[T,1,E]}}),S.push(c));const l=FR({inputs:{a:r,b:c},backend:s});_=UR({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),S.push(l)}else{const c=Zs(t.dtype,e.dtype),l=new TR(k,w,[T,p,f],n,a,R,D,A,F),u=[v,C];if(null!=o&&u.push(o),A&&u.push(r),F){const t=s.makeTensorInfo([],"float32",gs(i,"float32"));u.push(t),S.push(t)}_=s.runWebGLProgram(l,u,c)}const O=_R({inputs:{x:_},backend:s,attrs:{shape:y}});S.push(_);for(const I of S)s.disposeIntermediateTensorInfo(I);return O}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qR={kernelName:ba,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:s,b:o,bias:r,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;return KR({a:s,b:o,transposeA:c,transposeB:l,backend:n,bias:r,preluActivationWeights:i,leakyreluAlpha:h,activation:u})}},XR="return abs(x);";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YR={kernelName:ct,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const t=n.texData.get(a.dataId),e=yE(t.values);return n.makeTensorInfo(a.shape,a.dtype,e)}let s;return s=at().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new aR(a.shape,XR):new GE(a.shape,XR),n.runWebGLProgram(s,[a],a.dtype)}},ZR=CR({opSnippet:HE+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),JR={kernelName:lt,backendName:"webgl",kernelFunc:ZR},QR=CR({opSnippet:HE+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),$R={kernelName:ut,backendName:"webgl",kernelFunc:QR},tA="return a + b;",eA=SR({opSnippet:tA,packedOpSnippet:tA,supportsComplex:!0,cpuKernelImpl:WT}),nA={kernelName:ht,backendName:"webgl",kernelFunc:eA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aA{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>"T".concat(e)));const n=[];this.variableNames.forEach((t=>{n.push("float v".concat(t," = get").concat(t,"AtOutCoords();"))}));const a=this.variableNames.map((t=>"v".concat(t))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sA{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>"T".concat(e)));const n=[];this.variableNames.forEach((t=>{n.push("vec4 v".concat(t," = get").concat(t,"AtOutCoords();"))}));const a=this.variableNames.map((t=>"v".concat(t))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oA={kernelName:dt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a}=e,s=n;if(1===s.length)return pR({inputs:{x:s[0]},backend:a});if(s.length>at().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(s.length/2),n=t({inputs:s.slice(0,e),backend:a}),o=t({inputs:s.slice(e),backend:a});return t({inputs:[n,o],backend:a})}const o=s.map((t=>t.dtype)).reduce(((t,e)=>Zs(t,e))),r=s.map((t=>t.shape)),i=at().getBool("WEBGL_PACK")?new sA(s[0].shape,r):new aA(s[0].shape,r);return a.runWebGLProgram(i,s,o)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rA={kernelName:pt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:r}=a,i=s.shape.length,c=_(o,s.shape);let l=c;const u=Wi(l,i);let h=s;null!=u&&(h=GR({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Vi(l.length,i)),Bi("all",l,i);const[d,p]=zi(h.shape,l),f=_R({inputs:{x:h},backend:n,attrs:{shape:[-1,N(p)]}}),g=zR(f,f.dtype,"all",n);let m;if(r){m=_R({inputs:{x:g},backend:n,attrs:{shape:Pi(d,c)}})}else m=_R({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=u&&n.disposeIntermediateTensorInfo(h),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iA={kernelName:ft,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:r}=a,i=s.shape.length,c=_(o,s.shape);let l=c;const u=Wi(l,i);let h=s;null!=u&&(h=GR({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Vi(l.length,i)),Bi("any",l,i);const[d,p]=zi(h.shape,l),f=_R({inputs:{x:h},backend:n,attrs:{shape:[-1,N(p)]}}),g=zR(f,f.dtype,"any",n);let m;if(r){m=_R({inputs:{x:g},backend:n,attrs:{shape:Pi(d,c)}})}else m=_R({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=u&&n.disposeIntermediateTensorInfo(h),m}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cA{constructor(t,e,n){this.variableNames=["A"];const{windowSize:a,batchSize:s,outSize:o}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,o];const r="max"===e?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(r," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lA{constructor(t,e,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,I(t.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const s=t[t.length-1],o=Math.ceil(s/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),a||this.variableNames.push("bestIndicesA");const r=this.outputShape,i=r.length,c=fT(i),l=ME("coords",i);let u,h;if(1===o){h=i+1;const t=fT(h);u="\n        ".concat(t," sourceLocR = ").concat(t,"(").concat(l.join(),", 0);\n        ++").concat(l[i-1],";\n        ").concat(t," sourceLocG = ").concat(t,"(").concat(l.join(),", 0);\n        ++").concat(l[i-2],";\n        ").concat(t," sourceLocA = ").concat(t,"(").concat(l.join(),", 0);\n        --").concat(l[i-1],";\n        ").concat(t," sourceLocB = ").concat(t,"(").concat(l.join(),", 0);\n        --").concat(l[i-2],";")}else h=i,u="\n        ".concat(c," sourceLocR = coords;\n        ++").concat(l[i-1],";\n        ").concat(c," sourceLocG = coords;\n        ++").concat(l[i-2],";\n        ").concat(c," sourceLocA = coords;\n        --").concat(l[i-1],";\n        ").concat(c," sourceLocB = coords;\n        --").concat(l[i-2],";");const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((t=>"int "+t)),g=ME("sourceLocR",h-1).concat("inIdx.r"),m=ME("sourceLocG",h-1).concat("inIdx.g"),b=ME("sourceLocB",h-1).concat("inIdx.b"),x=ME("sourceLocA",h-1).concat("inIdx.a"),y="max"===n?"greaterThan":"lessThan",k=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),"),\n                             getBestIndicesAChannel(").concat(x.join(),")));"),w="vec4(\n            getAChannel(".concat(g.join(),"),\n            hasNextCol ? getAChannel(").concat(m.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(b.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(x.join(),") : 0.)"),v=a?"":"\n      float getBestIndicesAChannel(".concat(f.join(),") {\n        return getChannel(getBestIndicesA(").concat(d.join(),"),\n                                          vec2(").concat(d.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(f.join(),") {\n        return getChannel(getA(").concat(d.join(),"),\n                               vec2(").concat(d.slice(-2).join(),"));\n      }\n      ").concat(v,"\n      void main() {\n        ").concat(c," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[i-1]," < ").concat(r[i-1]-1,";\n        bool hasNextRow = ").concat(l[i-2]," < ").concat(r[i-2]-1,";\n        ").concat(u,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(p,", sourceLocG").concat(p,",\n          sourceLocB").concat(p,", sourceLocA").concat(p,") * ").concat(e,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(w,";\n\n        for (int i = 0; i < ").concat(e,"; i++) {\n          inIdx = srcIdx;\n          ").concat(k,"\n          vec4 candidate = ").concat(w,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(y,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uA(t,e,n,a=null){let s=e.shape[0],o=e.shape[1];null!=a&&(s=a.shape[0],o=a.shape[1]);const r=zh(o),i={windowSize:r,inSize:o,batchSize:s,outSize:Math.ceil(o/r)},c=new cA(i,n,null==a),l=[e];null!=a&&l.push(a);const u=t.runWebGLProgram(c,l,"int32");if(1===u.shape[1])return u;const h=uA(t,e,n,u);return t.disposeIntermediateTensorInfo(u),h}function hA(t,e,n,a=null){const s=null!=a?a.shape:e.shape,o=zh(s[s.length-1]),r=new lA(s,o,n,null==a),i=null==a?[e]:[e,a],c=t.runWebGLProgram(r,i,"int32");if(c.shape.length===e.shape.length){const a=hA(t,e,n,c);return t.disposeIntermediateTensorInfo(c),a}return c}function dA(t,e,n,a){const s=[n];if(Bi("arg"+a.charAt(0).toUpperCase()+a.slice(1),s,e.shape.length),!at().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],o=t.texData.get(e.dataId);let r=e;null!==o&&o.isPacked&&(r=t.unpackTensor(e),n.push(r));const[i,c]=zi(r.shape,s),l=N(c),u=_R({inputs:{x:r},backend:t,attrs:{shape:[-1,l]}});n.push(u);const h=uA(t,u,a);n.push(h);const d=_R({inputs:{x:h},backend:t,attrs:{shape:i}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),d}return hA(t,e,a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pA={kernelName:gt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o}=a;let r=_(o,s.shape);const i=Wi(r,s.shape.length);let c=s;const l=[];null!=i&&(c=GR({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(c),r=Vi(r.length,c.shape.length)),Bi("argMax",[r[0]],c.shape.length);const u=dA(n,c,r[0],"max");return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fA={kernelName:mt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o}=a;let r=_(o,s.shape);const i=Wi(r,s.shape.length);let c=s;const l=[];null!=i&&(c=GR({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(c),r=Vi(r.length,c.shape.length)),Bi("argMin",[r[0]],c.shape.length);const u=dA(n,c,r[0],"min");return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}},gA=CR({opSnippet:HE+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),mA={kernelName:bt,backendName:"webgl",kernelFunc:gA},bA=CR({opSnippet:HE+"return log(x + sqrt(x * x + 1.0));"}),xA={kernelName:xt,backendName:"webgl",kernelFunc:bA},yA=CR({opSnippet:HE+"\n  return atan(x);\n"}),kA={kernelName:yt,backendName:"webgl",kernelFunc:yA},wA=SR({opSnippet:lR+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+hR+"\n  return result;\n"}),vA={kernelName:wt,backendName:"webgl",kernelFunc:wA},IA=CR({opSnippet:HE+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),CA={kernelName:kt,backendName:"webgl",kernelFunc:IA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class SA{constructor(t,e,n,a=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,r=t.strideHeight,i=t.strideWidth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,g="((batch  * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + d"),m="(xR * ".concat(t.inWidth," + xC) * ").concat(t.inChannels," + d");let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(r,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(e," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?s?g:m:"wR * ".concat(h," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let x="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(x="avgValue / max(count, 1.0)");const y=4*Math.floor(o/4),k=o%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n      const float initializationValue = ").concat(b,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(b,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(y,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(y,";\n          if (").concat(1===k,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===k,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===k,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(x,");\n      }\n    ")}}class NA{constructor(t,e,n,a=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,r=t.strideDepth,i=t.strideHeight,c=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,g=t.padInfo.front,m=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const x="avg"===e;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(r,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(g,", ").concat(m,", ").concat(b,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(d,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(h,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(e," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?s?"(((batch * ".concat(t.inDepth," + xD) * ").concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"((xD * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let k="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(k="avgValue / max(count, 1.0)");const w=4*Math.floor(o/4),v=o%4,I="\n      if (".concat(x,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(r,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(g,", ").concat(m,", ").concat(b,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(d,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(h,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(h,", ch)\n              );\n\n              ").concat(I,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===v,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(I,"\n            } else if (").concat(2===v,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(I,"\n            } else if (").concat(3===v,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                initializationValue\n              );\n\n              ").concat(I,"\n            }\n          }\n        }\n        setOutput(").concat(k,");\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TA={kernelName:vt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e;ZN(s,"avgPool");const{filterSize:o,strides:r,pad:i,dimRoundingMode:c}=a;I(zr(r,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(1,"'")));const l=Tr(s.shape,o,r,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&T(l.inShape,l.outShape))return pR({inputs:{x:s},backend:n});const u=new SA(l,"avg",!1);return n.runWebGLProgram(u,[s],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EA={kernelName:Ct,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{filterSize:o,strides:r,pad:i,dimRoundingMode:c,dataFormat:l}=a,u=Er(s.shape,o,r,[1,1,1],i,c,l),h=new NA(u,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RA{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,s=t.strideWidth,o=t.dilationHeight,r=t.dilationWidth,i=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=i-1-t.padInfo.top,u=c-1-t.padInfo.left,h=1/(e*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(h,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(o,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(r,") {\n            float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class AA{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,a=t.filterWidth,s=t.strideDepth,o=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=u-1-t.padInfo.front,f=h-1-t.padInfo.top,g=d-1-t.padInfo.left,m=1/(e*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(g,");\n      const float avgMultiplier = float(").concat(m,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(s,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(h,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(o,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FA={kernelName:St,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o}=e,r=o,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=Er(r.shape,i,c,[1,1,1],l,u),d=new AA(h);return n.runWebGLProgram(d,[s],r.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DA={kernelName:It,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o}=e,r=o;ZN([s,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=Tr(r.shape,i,c,1,l),h=new RA(u);return n.runWebGLProgram(h,[s],r.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _A={kernelName:Nt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:s,b:o}=e,{transposeA:r,transposeB:i}=a;return KR({a:s,b:o,transposeA:r,transposeB:i,backend:n})}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OA{constructor(t,e,n,a,s,o){this.outputShape=[],this.variableNames=["x","mean","variance"],Ni(t,e),Ni(t,n);let r="0.0";null!=a&&(Ni(t,a),this.variableNames.push("offset"),r="getOffsetAtOutCoords()");let i="1.0";null!=s&&(Ni(t,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(r,";\n        float scale = ").concat(i,";\n        float inv = scale * inversesqrt(variance + float(").concat(o,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LA{constructor(t,e,n,a,s,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ni(t,e),Ni(t,n);let r="vec4(0.0)";null!=a&&(Ni(t,a),this.variableNames.push("offset"),r="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=s&&(Ni(t,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        vec4 offset = ".concat(r,";\n        vec4 scale = ").concat(i,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(o,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MA={kernelName:xe,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:a,mean:s,variance:o,offset:r,scale:i}=t;I(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),I(null==r||s.shape.length===r.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),I(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:c}=n;null==c&&(c=.001);const l=[a,s,o];let u=null;null!=r&&(u=r.shape,l.push(r));let h=null;null!=i&&(h=i.shape,l.push(i));const d=at().getBool("WEBGL_PACK_NORMALIZATION")?new LA(a.shape,s.shape,o.shape,u,h,c):new OA(a.shape,s.shape,o.shape,u,h,c);return e.runWebGLProgram(d,l,l[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zA{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=fT(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(t){if(1===t)return"sourceLoc";if(t<=6)return PA.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error("Slicing for rank ".concat(t," is not yet supported"))}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.rank);let a;const s=t.map(((t,e)=>"sourceLoc.".concat(PA[e]," = start[").concat(e,"] + coords.").concat(PA[e],";")));a="\n        ".concat(e," sourceLoc;\n        ").concat(e," coords = getOutputCoords();\n        ").concat(s.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const PA=["x","y","z","w","u","v"];class BA{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=fT(this.rank),n=ME("coords",this.rank),a=ME("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),o="getChannel(getSource(".concat(a.join(),"), ").concat(s,")"),r="\n      result.x = ".concat(o,";\n      if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(o,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(t[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(o,";\n        if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(o,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(e,"(").concat(t.map(((t,e)=>"start[".concat(e,"]"))).join(),");"):t.map(((t,e)=>"".concat(a[e]," = ").concat(n[e]," + start[").concat(e,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(e," coords = getOutputCoords();\n        ").concat(e," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(r,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{begin:o,size:r}=a,[i,c]=wh(s,o,r);if(lh(s,i,c),0===N(c))return n.makeTensorInfo(c,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const t=n.texData.get(s.dataId),e=kE(t.values,i,c,s.shape,s.dtype);return n.makeTensorInfo(c,s.dtype,e)}const{isPacked:l}=n.texData.get(s.dataId),u=yh(s.shape,i,c);if(l||!u){const t=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new BA(c):new zA(c),e=[i];return n.runWebGLProgram(t,[s],s.dtype,e)}return n.uploadToGPU(s.dataId),function(t,e,n,a){const s=a.texData.get(t.dataId),o=a.makeTensorInfo(n,t.dtype),r=a.texData.get(o.dataId);Object.assign(r,s),r.refCount=1,r.shape=n,r.dtype=t.dtype;let i=kh(e,H(t.shape));s.slice&&(i+=s.slice.flatOffset),r.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||t.dataId};const c=a.dataRefCount.get(r.slice.origDataId)||1;return a.dataRefCount.set(r.slice.origDataId,c+1),o}(s,i,c,n)}const UA={kernelName:On,backendName:"webgl",kernelFunc:WA},VA={kernelName:Tt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockShape:o,crops:r}=a;I(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=o.reduce(((t,e)=>t*e)),c=Bh(s.shape,o,i),l=Wh(c.length,o.length),u=Uh(s.shape,o,i),h=Vh(r,o.length),d=Gh(u,r,o.length),p=[],f=_R({inputs:{x:s},backend:n,attrs:{shape:c}}),g=GR({inputs:{x:f},backend:n,attrs:{perm:l}}),m=_R({inputs:{x:g},backend:n,attrs:{shape:u}}),b=WA({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GA={kernelName:Et,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,weights:o}=e,{size:r}=a,i=n.readSync(s.dataId),c=n.readSync(o.dataId),l=UT(i,c,o.dtype,o.shape,r);return n.makeTensorInfo([r],o.dtype,l)}};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HA={kernelName:Rt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:a,b:s}=e,o=at().getBool("WEBGL_PACK_BINARY_OPERATIONS"),r=at().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,s])||1===r){const t=n.texData.get(a.dataId).values,e=n.texData.get(s.dataId).values,[o,r]=GT(a.shape,s.shape,t,e,a.dtype),i=n.makeTensorInfo(r,a.dtype);return n.texData.get(i.dataId).values=o,i}let i;return i=o?new dR("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,s.shape,!1):new uR("\n  return float(int(a.r) & int(b.r));\n",a.shape,s.shape),n.runWebGLProgram(i,[a,s],a.dtype)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jA={kernelName:At,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:a,s1:s}=e,o=n.readSync(a.dataId),r=n.readSync(s.dataId),i=Ni(Array.from(o),Array.from(r));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},KA=SR({opSnippet:"return float(a != b);",cpuKernelImpl:uE,dtype:"bool"}),qA={kernelName:en,backendName:"webgl",kernelFunc:KA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XA(t){const{inputs:e,backend:n}=t,{input:a}=e;return pR({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const YA={kernelName:bn,backendName:"webgl",kernelFunc:XA},ZA="return float(int(x));";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JA={kernelName:Ft,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function t(e){const{inputs:n,backend:a,attrs:s}=e,{x:o}=n,{dtype:r}=s;if("complex64"===r){if("complex64"===o.dtype)return pR({inputs:{x:o},backend:a});const e=_c(o.shape),n=t({inputs:{x:o},backend:a,attrs:{dtype:"float32"}}),s=gR({inputs:{real:n,imag:e},backend:a});return e.dispose(),a.disposeIntermediateTensorInfo(n),s}if("complex64"===o.dtype){const e=XA({inputs:{input:o},backend:a}),n=t({inputs:{x:e},backend:a,attrs:{dtype:r}});return a.disposeIntermediateTensorInfo(e),n}if(!z(o.dtype,r)){const t=pR({inputs:{x:o},backend:a});return{dataId:t.dataId,shape:t.shape,dtype:r}}if(a.shouldExecuteOnCPU([o])){const t=a.texData.get(o.dataId).values,[e,n,s]=HT(t,o.shape,o.dtype,r);return a.makeTensorInfo(e,n,s)}if("int32"===r)return function(t,e){const n=new GE(t.shape,ZA),a=e.runWebGLProgram(n,[t],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(o,a);if("bool"===r){const t=a.makeTensorInfo([],"bool",L("bool",1)),e=KA({inputs:{a:o,b:t},backend:a});return a.disposeIntermediateTensorInfo(t),e}throw new Error("Error in Cast: failed to cast ".concat(o.dtype," to ").concat(r))}},QA="return ceil(x);",$A=CR({opSnippet:QA,packedOpSnippet:QA,cpuKernelImpl:jT}),tF={kernelName:Dt,backendName:"webgl",kernelFunc:$A};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class eF{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nF{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aF={kernelName:_t,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{clipValueMin:o,clipValueMax:r}=a;let i;i=at().getBool("WEBGL_PACK_CLIP")?new nF(s.shape):new eF(s.shape);const c=[[o],[r]];return n.runWebGLProgram(i,[s],s.dtype,c)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sF{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oF(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const rF={kernelName:Lt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,s=n.texData.get(a.dataId),o=new sF(a.shape),r=[oF(a,s.complexTensorInfos.real),oF(a,s.complexTensorInfos.imag)];return n.runWebGLProgram(o,r,r[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iF{constructor(t){this.outputShape=[],this.outputShape=Rh(t,1),this.variableNames=t.map(((t,e)=>"T".concat(e)));const e=new Array(t.length-1);e[0]=t[0][1];for(let o=1;o<e.length;o++)e[o]=e[o-1]+t[o][1];const n=["if (yC < ".concat(e[0],") setOutput(getT0(yR, yC));")];for(let o=1;o<e.length;o++){const t=e[o-1];n.push("else if (yC < ".concat(e[o],") ")+"setOutput(getT".concat(o,"(yR, yC-").concat(t,"));"))}const a=e.length,s=e[e.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(s,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cF{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Rh(t,e);const n=this.outputShape,a=n.length,s=fT(a),o=ME("coords",a),r=["x","y","z","w","u","v"].slice(0,a);this.variableNames=t.map(((t,e)=>"T".concat(e)));const i=new Array(t.length-1);i[0]=t[0][e];for(let f=1;f<i.length;f++)i[f]=i[f-1]+t[f][e];const c=r[e],l=r.slice(-2),u=r.join();let h="if (".concat(c," < ").concat(i[0],") {\n        return getChannel(\n            getT0(").concat(u,"), vec2(").concat(l.join(),"));\n        }");for(let f=1;f<i.length;f++){const t=i[f-1];h+="\n        if (".concat(c," < ").concat(i[f],"  && ").concat(c," >= ").concat(i[f-1],") {\n          return getChannel(\n            getT").concat(f,"(").concat(lF(r,c,t),"),\n            vec2(").concat(lF(l,c,t),"));\n        }")}const d=i.length,p=i[i.length-1];h+="\n        return getChannel(\n          getT".concat(d,"(").concat(lF(r,c,p),"),\n          vec2(").concat(lF(l,c,p),"));"),this.userCode="\n      float getValue(".concat(r.map((t=>"int "+t)),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(o,"), 0., 0., 0.);\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," + 1;\n        if (").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-2]," = ").concat(o[a-2]," + 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," - 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2]," &&\n            ").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(o,");\n        }\n        setOutput(result);\n      }\n    ")}}function lF(t,e,n){const a=t.indexOf(e);return t.map(((t,e)=>e===a?"".concat(t," - ").concat(n):t)).join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(t){const{inputs:e,backend:n}=t,{input:a}=e;return pR({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const hF={kernelName:Se,backendName:"webgl",kernelFunc:uF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dF(t,e,n){const a=t[0].dtype;if("complex64"===a){const a=t.map((t=>XA({inputs:{input:t},backend:n}))),s=t.map((t=>uF({inputs:{input:t},backend:n}))),o=dF(a,e,n),r=dF(s,e,n),i=gR({inputs:{real:o,imag:r},backend:n});return a.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(r),i}let s=n.shouldExecuteOnCPU(t);if("string"===a&&(s=!0),s){const s=t.map((t=>{const a=N(t.shape.slice(e));return _R({inputs:{x:t},backend:n,attrs:{shape:[-1,a]}})})),o=s.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),r=Rh(s.map((t=>t.shape)),1),i=1===s[0].shape[0],c=KT(o,r,a,i),l=Rh(t.map((t=>t.shape)),e),u=n.makeTensorInfo(l,a,c);return s.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}const o=t.filter((t=>N(t.shape)>0)),r=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(1===o.length){const e=r?new GE(t[0].shape,ZE):new aR(t[0].shape,ZE);return n.runWebGLProgram(e,t,a)}const i=at().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const t=[];for(let s=0;s<o.length;s+=i){const a=o.slice(s,s+i);t.push(dF(a,e,n))}const a=dF(t,e,n);for(const e of t)n.disposeIntermediateTensorInfo(e);return a}if(r){const t=new cF(o.map((t=>t.shape)),e);return n.runWebGLProgram(t,o,a)}const{tensors2D:c,outShape:l}=function(t,e,n){const a=Rh(t.map((t=>t.shape)),e),s=t.map((t=>_R({inputs:{x:t},attrs:{shape:[-1,N(t.shape.slice(e))]},backend:n})));return{tensors2D:s,outShape:a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(o,e,n),u=new iF(c.map((t=>t.shape))),h=n.runWebGLProgram(u,c,a);c.forEach((t=>n.disposeIntermediateTensorInfo(t)));const d=_R({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function pF(t){const{inputs:e,backend:n,attrs:a}=t,{axis:s}=a,o=_(s,e[0].shape)[0];Eh(e.map((t=>t.shape)),o);const r=Rh(e.map((t=>t.shape)),o);if(0===N(r))return n.makeTensorInfo(r,e[0].dtype,[]);const i=e.filter((t=>N(t.shape)>0));return 1===i.length?pR({inputs:{x:i[0]},backend:n}):dF(i,o,n)}const fF={kernelName:Mt,backendName:"webgl",kernelFunc:pF};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gF{constructor(t,e=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,r=t.padInfo.left,i=t.strideHeight,c=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,g="channelsLast"===t.dataFormat,m=g?1:2,b=g?2:3,x=g?3:1;let y="",k="";n&&(y=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):s?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),k="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(y,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(o,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(x,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(m,"], coords[").concat(b,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(h,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(d,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(t.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(g,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(g,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(g,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(g,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(k,"\n        setOutput(result);\n      }\n    ")}}class mF{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,a=t.padInfo.left,s=t.strideDepth,o=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(s,", ").concat(o,", ").concat(r,");\n      const ivec3 pads = ivec3(").concat(e,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bF{constructor(t,e=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=wT(this.outputShape.length);const o=t.padInfo.left,r=t.strideWidth,i=t.dilationWidth,c=t.filterHeight,l=t.filterWidth,u=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<l;g++)h+="\n           vec4 xTexelC".concat(2*g,";\n           int xTexelC").concat(2*g,"Ready;\n           vec4 xTexelC").concat(2*g+1,";\n           int xTexelC").concat(2*g+1,"Ready;\n           vec4 xC").concat(g,";");h+="\n     for (int r = 0; r < ".concat(c,"; r++) {\n      for (int d1 = 0; d1 < ").concat(t.inChannels,"; d1 += 2) {\n       ");for(let g=0;g<l;g++)h+="\n           xTexelC".concat(2*g," = vec4(0.0);\n           xTexelC").concat(2*g,"Ready = 0;\n           xTexelC").concat(2*g+1," = vec4(0.0);\n           xTexelC").concat(2*g+1,"Ready = 0;\n           xC").concat(g," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let g=0;g<(u+1)/2;g++){const e=2*g;if(h+="\n           xC = xCCorner + ".concat(e*i,";\n           "),1===r){if(e<l&&(o%2==1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n               "),h+=1===i&&e>0?"\n                 xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                   } else {\n                     xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n\n                 xC").concat(e," = xTexelC").concat(e,";\n                 "),e+1<l)){const t=o%2==0?w(i):i;i%2==0&&o%2==1||i%2!=0&&o%2!=1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                     xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(e+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(e+1,"Ready = 1;\n                   }\n                   "),h+=i>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                     } else {\n                      xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                     }\n                     "):"\n                     xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                     ")):h+=1===t?"\n                     xC".concat(e+1," = xTexelC").concat(e,";\n                     "):"\n                     xCOffset = xC + ".concat(t,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                       xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(e+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(e+1,"Ready = 1;\n                     }\n\n                     xC").concat(e+1," = xTexelC").concat(e+1,";\n                     ")}}else e<l&&(o%2==1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                   xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(e+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e+1,"Ready = 1;\n                 }\n\n                 xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n               "),e+1<l&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                   xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(e+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(e+1,"Ready = 1;\n                 }\n\n                 xC").concat(e," = vec4(\n                   xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n               "),e+1<l&&(h+="\n                   xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                 "))));e<l&&(h+="\n             wTexel = getW(r, ".concat(e,", d1, d2);\n             dotProd += xC").concat(e,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(t.inChannels,") {\n               dotProd += xC").concat(e,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),e+1<l&&(h+="\n               wTexel = getW(r, ".concat(e+1,", d1, d2);\n               dotProd += xC").concat(e+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(t.inChannels,") {\n                 dotProd += xC").concat(e+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):s?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),p="result = activation(result);");const f=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(d,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(f,"\n         ").concat(p,"\n         setOutput(result);\n       }\n     ")}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xF{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=wT(this.outputShape.length);const{dataFormat:n}=e,a=QN(),s="channelsLast"===n,o=s?1:2,r=s?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(t[2]," && pos < ").concat(t[1],") {");let c="";for(let l=0;l<=1;l++)for(let t=0;t<=1;t++)c+="\n          blockIndex = rc.z + ".concat(t,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(o,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(r,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(s,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+t,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+t,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yF(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&1===n&&t[0]>1?[t[0],1]:null}function kF({x:t,filter:e,convInfo:n,backend:a,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:r=0,activation:i=null}){const c=t.shape,l=a.texData.get(t.dataId),u=n.inChannels,h=c[0]*c[1]*c[2],d=n.outChannels,p="channelsLast"===n.dataFormat,f=!1;let g;const m=[];if(null!=o){const t=yF(o.shape,p);null!=t&&(o=_R({inputs:{x:o},backend:a,attrs:{shape:t}}),m.push(o))}if(null!=s){const t=yF(s.shape,p);null!=t&&(s=_R({inputs:{x:s},backend:a,attrs:{shape:t}}),m.push(s))}if(!((1===h||1===d)&&u>jR)&&l.isPacked&&p&&null!=l.texture&&c[2]%2!=0&&T(l.shape.slice(-3),c.slice(-3))){const u=c[0]*c[1]*(c[2]+1),h={dataId:t.dataId,shape:[1,u,n.inChannels],dtype:t.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,I(GN(l.shape,h.shape),(()=>"packed reshape ".concat(l.shape," to ").concat(h.shape," isn't free")));const p=_R({inputs:{x:e},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const b=KR({a:h,b:p,backend:a,transposeA:false,transposeB:f,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:r}),x=a.texData.get(b.dataId);I(x.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,x.shape=n.outShape,g=pR({inputs:{x:b},backend:a}),g.shape=n.outShape,m.push(b)}else{const c=n.outHeight*n.outWidth,l=_R({inputs:{x:t},backend:a,attrs:{shape:p?[n.batchSize,c,n.inChannels]:[n.batchSize,n.inChannels,c]}}),u=_R({inputs:{x:e},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=KR({a:p?l:u,b:p?u:l,transposeA:!p,transposeB:f,backend:a,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:r});g=_R({inputs:{x:h},backend:a,attrs:{shape:n.outShape}}),m.push(l),m.push(u),m.push(h)}for(const b of m)a.disposeIntermediateTensorInfo(b);return g}function wF({x:t,filter:e,convInfo:n,backend:a,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:r=0,activation:i=null}){const{filterWidth:c,filterHeight:l,inChannels:u,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,g=c*l*u,m=d*h,b=[n.batchSize,g,m],x=[];if(null!=o){const t=yF(o.shape,f);null!=t&&(o=_R({inputs:{x:o},backend:a,attrs:{shape:t}}),x.push(o))}if(null!=s){const t=yF(s.shape,f);null!=t&&(s=_R({inputs:{x:s},backend:a,attrs:{shape:t}}),x.push(s))}const y=_R({inputs:{x:e},backend:a,attrs:{shape:[1,g,N(e.shape)/g]}});x.push(y);const k=new xF(b,n),w=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],v=a.runWebGLProgram(k,[t],"float32",w),I=_R({inputs:{x:v},backend:a,attrs:{shape:b}});x.push(v),x.push(I);const C=null!=s,S=null!=o,T="leakyrelu"===i,E=i?NR(i,!0):null,R=new TR(f?I.shape:y.shape,f?y.shape:I.shape,f?[n.batchSize,m,n.outChannels]:[n.batchSize,n.outChannels,m],!0,!1,C,E,S,T),A=f?[I,y]:[y,I];if(s&&A.push(s),S&&A.push(o),T){const t=a.makeTensorInfo([],"float32",gs(r,"float32"));A.push(t),x.push(t)}const F=a.runWebGLProgram(R,A,"float32"),D=_R({inputs:{x:F},backend:a,attrs:{shape:n.outShape}});x.push(F);for(const N of x)a.disposeIntermediateTensorInfo(N);return D}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vF={kernelName:zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:r,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a,h=Br(c),d=Rr(s.shape,o.shape,r,l,i,u,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&at().getBool("WEBGL_EXP_CONV")){const t=new bF(d),e=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(t,[s,o],"float32",e)}else if(at().getBool("WEBGL_CONV_IM2COL"))p=wF({x:s,filter:o,convInfo:d,backend:n});else{const t=new gF(d);p=n.runWebGLProgram(t,[s,o],"float32")}else p=kF({x:s,filter:o,convInfo:d,backend:n});const f=_R({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IF{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,a=t.padInfo.top,s=t.padInfo.left,o="channelsLast"===t.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(s,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              ").concat(o?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class CF{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,s=t.strideWidth,o="channelsLast"===t.dataFormat,r=e-1-t.padInfo.top,i=n-1-t.padInfo.left,c=o?1:2,l=o?2:3,u=o?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(r,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n\n              if (").concat(o,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class SF{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,a=t.strideWidth,s=t.padInfo.front,o=t.padInfo.top,r=t.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(t.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(e," - ").concat(s,";\n\n            if (xF < 0 || xF >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(o,";\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(r,";\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class NF{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,a=t.filterWidth,s=t.strideDepth,o=t.strideHeight,r=t.strideWidth,i=e-1-t.padInfo.front,c=n-1-t.padInfo.top,l=a-1-t.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(e,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(s,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(t.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(e," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(o,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TF={kernelName:Pt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,dy:o}=e,{strides:r,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a,h=Br(c),d=Rr(s.shape,u,r,1,i,l,!1,h),p=new IF(d);return n.runWebGLProgram(p,[s,o],"float32")}};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EF{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=wT(this.outputShape.length);const e=t.filterHeight,n=t.filterWidth,a=e-1-t.padInfo.top,s=n-1-t.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(t.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(t.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RF={kernelName:Bt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,filter:o}=e,{inputShape:r,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,h=Br(l),d=Rr(r,o.shape,i,1,c,u,!1,h);if(at().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const t=[[d.strideHeight,d.strideWidth]],e=new EF(d);return n.runWebGLProgram(e,[s,o],"float32",t)}{const t=new CF(d);return n.runWebGLProgram(t,[s,o],"float32")}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AF={kernelName:Wt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:r,pad:i,dilations:c}=a,l=Ar(s.shape,o.shape,r,c,i),u=new mF(l);return n.runWebGLProgram(u,[s,o],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FF={kernelName:Ut,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,dy:o}=e,{strides:r,pad:i,filterShape:c}=a,l=Ar(s.shape,c,r,1,i),u=new SF(l);return n.runWebGLProgram(u,[s,o],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF={kernelName:Vt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,filter:o}=e,{pad:r,strides:i,inputShape:c}=a,l=Ar(c,o.shape,i,1,r),u=new NF(l);return n.runWebGLProgram(u,[s,o],"float32")}},_F=CR({opSnippet:IR+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(hR,"\n  return result;\n")}),OF={kernelName:Gt,backendName:"webgl",kernelFunc:_F},LF=CR({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),MF={kernelName:Ht,backendName:"webgl",kernelFunc:LF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zF{constructor(t,e,n,a,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,r,i,c]=t,[l]=e,[u,h]=n;this.outputShape=[l,u,h,c];const d="bilinear"===a?1:0,[p,f]=["".concat(r-1,".0"),"".concat(i-1,".0")],[g,m,b]=u>1?["".concat((r-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[x,y,k]=h>1?["".concat((i-1)/(h-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(g,");\n      const float width_ratio = float(").concat(x,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(o,") {\n          return;\n        }\n\n        float height_scale = ").concat(m,";\n        float width_scale = ").concat(y,";\n\n        float in_y = ").concat(b,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(s,"));\n          return;\n        }\n        float in_x = ").concat(k,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(s,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(d," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PF={kernelName:qt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{image:s,boxes:o,boxInd:r}=e,{cropSize:i,method:c,extrapolationValue:l}=a,u=new zF(s.shape,o.shape,i,c,l);return n.runWebGLProgram(u,[s,o,r],"float32")}};var BF,WF;(WF=BF||(BF={})).Prod="*",WF.Sum="+";class UF{constructor(t,e,n,a){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,o=this.op===BF.Prod?"1.0":"0.0",r=n?o:"getX(".concat(VF(s,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(fT(s)," coords = getOutputCoords();\n        int end = ").concat(GF(s,"coords",this.op),";\n        float val = ").concat(r,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(GF(s,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(VF(s,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function VF(t,e,n){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".x, ").concat(e,".y");if(3===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z");if(4===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z, ").concat(e,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(t," is not yet supported"))}function GF(t,e,n){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".y");if(3===t)return"".concat(e,".z");if(4===t)return"".concat(e,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(t," is not yet supported"))}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HF(t,e,n,a,s,o){const r=e.shape.length,i=Wi([a],r);let c=e;null!=i&&(c=GR({inputs:{x:e},backend:n,attrs:{perm:i}}));const l=Vi(1,r)[0];if(l!==r-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(e.shape.length-1," ")+"but got axis=".concat(a));const u=c.shape[l];let h=pR({inputs:{x:c},backend:n});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const e=new UF(t,c.shape,!1,o),a=[[d]],s=h;h=n.runWebGLProgram(e,[h],h.dtype,a),n.disposeIntermediateTensorInfo(s)}if(s){const e=new UF(t,c.shape,s,o),a=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=i){const t=GR({inputs:{x:h},backend:n,attrs:{perm:Ui(i)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),t}return h}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jF={kernelName:jt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,exclusive:r,reverse:i}=a;return HF(BF.Prod,s,n,o,r,i)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KF={kernelName:Kt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,exclusive:r,reverse:i}=a;return HF(BF.Sum,s,n,o,r,i)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qF={kernelName:Xt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,weights:o}=e,{size:r,binaryOutput:i}=a;if(1===s.shape.length){const t=n.readSync(s.dataId),e=n.readSync(o.dataId),a=UT(t,e,o.dtype,o.shape,r);return n.makeTensorInfo([r],o.dtype,a)}if(2===s.shape.length){const t=n.bufferSync(s),e=n.bufferSync(o),a=VT(t,e,r,i);return n.makeTensorInfo(a.shape,o.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(s.shape.length,"."))}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XF{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(e,";\n      int offset_h = imod(h, ").concat(e,");\n      int in_w = w / ").concat(e,";\n      int offset_w = imod(w, ").concat(e,");\n      int offset_d = (offset_h * ").concat(e," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YF={kernelName:Yt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockSize:o,dataFormat:r}=a,i=s.shape[0],c=("NHWC"===r?s.shape[1]:s.shape[2])*o,l=("NHWC"===r?s.shape[2]:s.shape[3])*o,u=("NHWC"===r?s.shape[3]:s.shape[1])/(o*o),h=new XF("NHWC"===r?[i,c,l,u]:[i,u,c,l],o,r);return n.runWebGLProgram(h,[s],s.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZF{constructor(t,e=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=wT(this.outputShape.length);const o=t.filterHeight,r=t.filterWidth,i=t.outChannels/t.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):s?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(o,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(r,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JF{constructor(t,e=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=wT(this.outputShape.length);const o=t.outChannels/t.inChannels,r=t.padInfo.left,i=t.strideWidth,c=t.dilationWidth,l=t.filterHeight,u=t.filterWidth,h=u;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<u;m++)d+="\n          vec4 xTexelC".concat(2*m,";\n          int xTexelC").concat(2*m,"Ready;\n          vec4 xTexelC").concat(2*m+1,";\n          int xTexelC").concat(2*m+1,"Ready;\n          vec4 xC").concat(m,";");d+="\n    for (int r = 0; r < ".concat(l,"; r++) {\n      ");for(let m=0;m<u;m++)d+="\n          xTexelC".concat(2*m," = vec4(0.0);\n          xTexelC").concat(2*m,"Ready = 0;\n          xTexelC").concat(2*m+1," = vec4(0.0);\n          xTexelC").concat(2*m+1,"Ready = 0;\n          xC").concat(m," = vec4(0.0);");d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let m=0;m<(h+1)/2;m++){const t=2*m;if(d+="\n          xC = xCCorner + ".concat(t*c,";\n          "),1===i){if(t<u&&(r%2==1?(d+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n              "),d+=1===c&&t>0?"\n                xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                  } else {\n                    xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                  }\n                  ")):d+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n\n                xC").concat(t," = xTexelC").concat(t,";\n                "),t+1<u)){const e=r%2==0?w(c):c;c%2==0&&r%2==1||c%2!=0&&r%2!=1?(d+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                    xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(t+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(t+1,"Ready = 1;\n                  }\n                  "),d+=c>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                    } else {\n                     xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                    }\n                    "):"\n                    xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                    ")):d+=1===e?"\n                    xC".concat(t+1," = xTexelC").concat(t,";\n                    "):"\n                    xCOffset = xC + ".concat(e,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                      xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(t+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(t+1,"Ready = 1;\n                    }\n\n                    xC").concat(t+1," = xTexelC").concat(t+1,";\n                    ")}}else t<u&&(r%2==1?(d+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                  xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(t+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t+1,"Ready = 1;\n                }\n\n                xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n              "),t+1<u&&(d+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                "))):(d+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                  xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(t+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(t+1,"Ready = 1;\n                }\n\n                xC").concat(t," = vec4(\n                  xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n              "),t+1<u&&(d+="\n                  xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                "))));t<u&&(d+="\n            wTexel = getW(r, ".concat(t,", d1, q);\n            dotProd += xC").concat(t," * vec4(wTexel.xz, wTexel.xz);\n          "),t+1<u&&(d+="\n              wTexel = getW(r, ".concat(t+1,", d1, q);\n              dotProd += xC").concat(t+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):s?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),f="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(p,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(o,";\n        int q = d2 - d1 * ").concat(o,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(d,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(g,"\n        ").concat(f,"\n        setOutput(result);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QF={kernelName:Zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:r,pad:i,dilations:c,dimRoundingMode:l}=a;let u=c;null==u&&(u=[1,1]),I(zr(r,u),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(r," and dilations '").concat(u,"'")));const h=Rr(s.shape,o.shape,r,u,i,l,!0);let d;d=at().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new JF(h):new ZF(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,o],"float32",p)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $F{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,a=t.padInfo.top,s=t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(o," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(s,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class tD{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,s=t.strideWidth,o=e-1-t.padInfo.top,r=n-1-t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eD={kernelName:Jt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,dy:o}=e,{strides:r,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a,h=Rr(s.shape,u,r,i,c,l,!0),d=new $F(h);return n.runWebGLProgram(d,[s,o],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nD={kernelName:Qt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,filter:o}=e,{strides:r,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a,h=Rr(u,o.shape,r,i,c,l,!0),d=new tD(h);return n.runWebGLProgram(d,[s,o],"float32")}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aD{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sD={kernelName:$t,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,s=[...a.shape,...a.shape],o=N(a.shape),r=_R({inputs:{x:a},backend:n,attrs:{shape:[o]}}),i=new aD(o),c=n.runWebGLProgram(i,[r],r.dtype),l=_R({inputs:{x:c},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(c),l}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oD{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:a,strideHeight:s,strideWidth:o,filterHeight:r,filterWidth:i,dilationHeight:c,dilationWidth:l}=t,{top:u,left:h}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(s,", ").concat(o,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(h,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(r,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(e,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rD={kernelName:te,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:r,pad:i,dilations:c}=a,l=Nr(s.shape,o.shape,r,i,"NHWC",c);let u;const h=new oD(l);u=n.runWebGLProgram(h,[s,o],"float32");const d=_R({inputs:{x:u},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(u),d}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iD={kernelName:oe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{equation:s}=a,o=e,{allDims:r,summedDims:i,idDims:c}=ud(s,o.length);dd(r.length,c,o);const{path:l,steps:u}=pd(i,c),h=u.length;let d=null,p=r.length;const f=[];for(let g=0;g<h;++g){for(const t of u[g]){const{permutationIndices:e,expandDims:a}=hd(p,c[t]);let s;fd(e)?s=o[t]:(s=GR({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),f.push(s));const r=s.shape.slice();for(let t=0;t<a.length;++t)r.splice(a[t],0,1);T(s.shape,r)||(s=_R({inputs:{x:s},backend:n,attrs:{shape:r}}),f.push(s)),null===d?d=s:(d=FR({inputs:{a:s,b:d},backend:n}),f.push(d))}g<h-1&&(l[g]>=0&&(d=UR({inputs:{x:d},backend:n,attrs:{axis:l[g]-(r.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&n.disposeIntermediateTensorInfo(g);return d}},cD=CR({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),lD={kernelName:re,backendName:"webgl",kernelFunc:cD},uD={kernelName:ie,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:a,y:s}=e,o=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dR("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,s.shape):new uR("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,s.shape);return n.runWebGLProgram(o,[a,s],a.dtype)}},hD=SR({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:qT}),dD={kernelName:le,backendName:"webgl",kernelFunc:hD},pD=CR({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(Kh,";\n  float a1 = ").concat(qh,";\n  float a2 = ").concat(Xh,";\n  float a3 = ").concat(Yh,";\n  float a4 = ").concat(Zh,";\n  float a5 = ").concat(Jh,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),fD={kernelName:ce,backendName:"webgl",kernelFunc:pD},gD=CR({opSnippet:IR+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:XT,dtype:"float32"}),mD={kernelName:ue,backendName:"webgl",kernelFunc:gD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bD(t){const{inputs:e,attrs:n,backend:a}=t,{dim:s}=n,{input:o}=e,r=o.shape.length,i=o.shape.slice();let c=s;return s<0&&(I(-(r+1)<=s,(()=>"Axis must be in the interval [".concat(-(r+1),", ").concat(r,"]"))),c=r+s+1),i.splice(c,0,1),_R({inputs:{x:o},backend:a,attrs:{shape:i}})}const xD={kernelName:he,backendName:"webgl",kernelFunc:bD},yD="return exp(x) - 1.0;",kD=CR({opSnippet:yD,packedOpSnippet:yD,cpuKernelImpl:YT}),wD={kernelName:de,backendName:"webgl",kernelFunc:kD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class vD{constructor(t,e,n){this.variableNames=["real","imag"];const a=e[1];this.outputShape=e;const s=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),o=n?"".concat(a,".0"):"1.0";let r;if("real"===t)r="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error('FFT component must be either "real" or "imag", got '.concat(t,"."));r="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(s,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(r,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(o,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ID(t,e,n){const a=n.texData.get(t.dataId),s=N(t.shape),o=t.shape[t.shape.length-1],r=_R({inputs:{x:t},backend:n,attrs:{shape:[s/o,o]}}),i=r.shape,c=new vD("real",i,e),l=new vD("imag",i,e),u=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:i},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:i}],h=n.runWebGLProgram(c,u,"float32"),d=n.runWebGLProgram(l,u,"float32"),p=gR({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=_R({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(p),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CD={kernelName:pe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e;return ID(a,!1,n)}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SD{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ND(t){const{backend:e,attrs:n}=t,{shape:a,value:s}=n;let{dtype:o}=n;if(o=o||U(s),"string"===o){const t=M(o,N(a));return t.fill(s),e.makeTensorInfo(a,o,t)}{const t=new SD(a,s),n=[[s]];return e.runWebGLProgram(t,[],o,n)}}const TD={kernelName:fe,backendName:"webgl",kernelFunc:ND};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ED{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(e," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(e,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RD={kernelName:ge,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,a=e,s=new ED(n.shape);return a.runWebGLProgram(s,[n],n.dtype)}},AD="return floor(x);",FD=CR({opSnippet:AD,packedOpSnippet:AD,cpuKernelImpl:ZT}),DD={kernelName:me,backendName:"webgl",kernelFunc:FD},_D=SR({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),OD={kernelName:be,backendName:"webgl",kernelFunc:_D};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class LD{constructor(t){this.variableNames=["A"];const e=QN(),[n,a]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(e.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MD{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=QN(),[n,a]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(e.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zD={kernelName:ga,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t;let{pixels:s}=e;const{numChannels:o}=a,r="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[c,l]=r?[s.videoWidth,s.videoHeight]:[s.width,s.height],u=[l,c],h=[l,c,o];if(i||r){const t=at().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=PD&&t===BD||(BD=t,PD=document.createElement("canvas").getContext("2d",{willReadFrequently:BD})),PD.canvas.width=c,PD.canvas.height=l,PD.drawImage(s,0,0,c,l),s=PD.canvas}const d=n.makeTensorInfo(u,"int32");n.texData.get(d.dataId).usage=yN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=at().getBool("WEBGL_PACK")?new MD(h):new LD(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */};let PD,BD=at().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const WD={kernelName:xa,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o,bias:r,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,g=Br(u),m=Rr(s.shape,o.shape,c,h,l,d,!1,g);let b;const x=[],y=null!=r,k=null!=i,w="leakyrelu"===p,v=()=>{const t=[s,o],e=(t,e)=>{if("NCHW"===e&&1===t.shape.length&&1!==t.shape[0]){const e=_R({inputs:{x:t},backend:n,attrs:{shape:[t.shape[0],1,1]}});return x.push(e),e}return t};if(y&&t.push(e(r,u)),k&&t.push(e(i,u)),w){const e=n.makeTensorInfo([],"float32",gs(f,"float32"));t.push(e),x.push(e)}return t};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&at().getBool("WEBGL_EXP_CONV")){const t=p?NR(p,!0):null,e=new bF(m,y,t,k,w),a=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],s=v();b=n.runWebGLProgram(e,s,"float32",a)}else if(at().getBool("WEBGL_CONV_IM2COL"))b=wF({x:s,filter:o,convInfo:m,backend:n,bias:r,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const t=p?NR(p,!1):null,e=new gF(m,y,t,k,w),a=v();b=n.runWebGLProgram(e,a,"float32")}else b=kF({x:s,filter:o,convInfo:m,backend:n,bias:r,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const I=_R({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return x.push(b),x.forEach((t=>n.disposeIntermediateTensorInfo(t))),I}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UD={kernelName:ya,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o,bias:r,preluActivationWeights:i}=e,{strides:c,pad:l,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=a,f=[];let g=u;null==g&&(g=[1,1]),I(zr(c,g),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(c," and dilations '").concat(g,"'")));const m=Rr(s.shape,o.shape,c,g,l,h,!0),b=at().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1,x=d?NR(d,b):null,y=[s,o],k=null!=r,w=null!=i,v="leakyrelu"===d;if(k&&y.push(r),w&&y.push(i),v){const t=n.makeTensorInfo([],"float32",gs(p,"float32"));y.push(t),f.push(t)}let C;C=b?new JF(m,k,x,w,v):new ZF(m,k,x,w,v);const S=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],N=n.runWebGLProgram(C,y,"float32",S);return f.forEach((t=>n.disposeIntermediateTensorInfo(t))),N}};class VD{constructor(t,e,n,a){this.sliceDim=t,this.strides=e,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const s=fT(n.length);let o="\n    int index;";for(let r=0;r<this.sliceDim;r++)o+="\n          index = round(getIndices(coords[0], ".concat(r,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[r],";\n          flattenIndex += index * ").concat(this.strides[r],";");this.userCode="\n         void main() {\n          ".concat(s," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(o,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GD={kernelName:ke,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:a,indices:s}=e,o=s.shape,r=o[o.length-1],i=N(a.shape),[c,l,u,h]=rh(a,s),d=_R({inputs:{x:s},backend:n,attrs:{shape:[l,r]}}),p=_R({inputs:{x:a},backend:n,attrs:{shape:[N(a.shape)/u,u]}});if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const t=n.readSync(s.dataId),e=n.bufferSync(a),o=JT(t,e,a.dtype,l,r,u,h,a.shape,i);return n.makeTensorInfo(c,a.dtype,o.values)}const f=new VD(r,h,[l,u],a.shape),g=n.runWebGLProgram(f,[p,d],p.dtype),m=_R({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(g),m}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HD{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=fT(this.rank),a=function(t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<t.length;a++)2===a?n.push("index"):n.push("".concat(e[a]));return n.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(t[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function jD(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,indices:o}=e,{axis:r,batchDims:i}=a,c=_(r,s.shape)[0];if(at().get("DEBUG")){const t=n.readSync(o.dataId),e=s.shape[c];for(let n=0;n<t.length;++n){const a=t[n];I(a<=e-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(e-1,"]")))}}const l=Fd(s,o,c,i),u=N(o.shape),h=[],d=_R({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=_R({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,o])||"string"===s.dtype){const t=n.bufferSync(p),e=n.bufferSync(d),a=QT(e,t,f);return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(l.outputShape,a.dtype,a.values)}const g=new HD(d.shape,f),m=n.runWebGLProgram(g,[d,p],d.dtype);h.push(m);const b=_R({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}const KD={kernelName:ye,backendName:"webgl",kernelFunc:jD},qD=SR({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:$T,dtype:"bool"}),XD={kernelName:we,backendName:"webgl",kernelFunc:qD},YD=SR({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:tE}),ZD={kernelName:ve,backendName:"webgl",kernelFunc:YD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JD={kernelName:Ce,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n}=t,{input:a}=e;return ID(a,!0,n)}},QD=CR({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),$D={kernelName:Ne,backendName:"webgl",kernelFunc:QD},t_=CR({opSnippet:"return float(isinf(x));",dtype:"bool"}),e_={kernelName:Te,backendName:"webgl",kernelFunc:t_},n_=CR({opSnippet:"return float(isnan(x));",dtype:"bool"}),a_={kernelName:Ee,backendName:"webgl",kernelFunc:n_},s_=SR({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:eE,dtype:"bool"}),o_={kernelName:Ae,backendName:"webgl",kernelFunc:s_},r_=SR({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:nE,dtype:"bool"}),i_={kernelName:Fe,backendName:"webgl",kernelFunc:r_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c_={kernelName:De,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{backend:e,attrs:n}=t,{start:a,stop:s,num:o}=n,r=aE(a,s,o);return e.makeTensorInfo([r.length],"float32",r)}},l_=CR({opSnippet:IR+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:sE}),u_={kernelName:_e,backendName:"webgl",kernelFunc:l_},h_=CR({opSnippet:IR+"\n  return log(1.0 + x);\n"}),d_={kernelName:Oe,backendName:"webgl",kernelFunc:h_},p_=SR({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),f_={kernelName:Le,backendName:"webgl",kernelFunc:p_},g_=CR({opSnippet:"return float(!(x >= 1.0));"}),m_={kernelName:Me,backendName:"webgl",kernelFunc:g_},b_=SR({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),x_={kernelName:ze,backendName:"webgl",kernelFunc:b_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class y_{constructor(t,e,n,a,s){this.variableNames=["x"],this.outputShape=[];const o=e,r=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===s?"inversesqrt(".concat(c,")"):1===s?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(s,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(o,"; j <= ").concat(o,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(r,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k_{constructor(t,e,n,a,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,r=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===s?"inversesqrt(".concat(c,")"):1===s?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(s,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(o,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(o,"; j <= ").concat(o,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(r,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w_={kernelName:Pe,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{depthRadius:o,bias:r,alpha:i,beta:c}=a,l=at().getBool("WEBGL_PACK_NORMALIZATION")?new k_(s.shape,o,r,i,c):new y_(s.shape,o,r,i,c);return n.runWebGLProgram(l,[s],s.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class v_{constructor(t,e,n,a,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=a,this.beta=s,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(e,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(e," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(s,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(s,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I_={kernelName:Be,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:s,y:o,dy:r}=e,{depthRadius:i,bias:c,alpha:l,beta:u}=a,h=new v_(s.shape,i,c,l,u);return n.runWebGLProgram(h,[s,o,r],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function C_(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{reductionIndices:o,keepDims:r}=a,i=s.shape.length,c=_(o,s.shape);let l=c;const u=Wi(l,i),h=null!=u,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const t=n.texData.get(p.dataId).values,e=new Array(i);for(let n=0;n<e.length;n++)e[n]=s.shape[u[n]];const a=_E(t,s.shape,s.dtype,u,e);p=n.makeTensorInfo(e,s.dtype);n.texData.get(p.dataId).values=a}else p=WR(s,u,n);l=Vi(l.length,i)}Bi("max",l,i);const[f,g]=zi(p.shape,l);let m,b=f;if(r&&(b=Pi(f,c)),d){const t=n.texData.get(p.dataId).values,e=oE(t,N(g),b,s.dtype);m=n.makeTensorInfo(b,s.dtype);n.texData.get(m.dataId).values=e}else m=
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,a){const s=N(e),o=_R({inputs:{x:t},attrs:{shape:[N(t.shape)/s,s]},backend:a}),r=zR(o,t.dtype,"max",a),i=_R({inputs:{x:r},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(r),i}(p,g,b,n);return h&&n.disposeIntermediateTensorInfo(p),m}const S_={kernelName:We,backendName:"webgl",kernelFunc:C_},N_=SR({opSnippet:lR+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+hR+"\n  return result;\n",cpuKernelImpl:rE}),T_={kernelName:Ue,backendName:"webgl",kernelFunc:N_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E_={kernelName:Ve,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e;ZN(s,"maxPool");const{filterSize:o,strides:r,pad:i,dimRoundingMode:c}=a;I(zr(r,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(1,"'")));const l=Tr(s.shape,o,r,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&T(l.inShape,l.outShape))return pR({inputs:{x:s},backend:n});const u=new SA(l,"max",!1);return n.runWebGLProgram(u,[s],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R_={kernelName:He,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{filterSize:o,strides:r,pad:i,dataFormat:c,dimRoundingMode:l}=a,u=Er(s.shape,o,r,[1,1,1],i,l,c),h=new NA(u,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A_{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,a=t.dilationHeight,s=t.effectiveFilterHeight,o=t.effectiveFilterWidth,r=s-1-t.padInfo.top,i=o-1-t.padInfo.left,c=s*o-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(r,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(s,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(e,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(o," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class F_{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,a=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,r=t.dilationWidth,i=t.effectiveFilterDepth,c=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=i-1-t.padInfo.front,h=c-1-t.padInfo.top,d=l-1-t.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(h,", ").concat(d,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(s,") {\n          float dyD = float(dyDCorner + wD) / ").concat(e,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(o,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(r,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D_={kernelName:je,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o}=e,r=o,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=Er(r.shape,i,c,[1,1,1],l,u),d=new NA(h,"max",!0),p=n.runWebGLProgram(d,[r],r.dtype),f=new F_(h),g=n.runWebGLProgram(f,[s,p],r.dtype);return n.disposeIntermediateTensorInfo(p),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const __={kernelName:Ge,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o,output:r}=e,i=o;ZN([o,r],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=Tr(i.shape,c,l,1,u,h),p=new SA(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),g=new A_(d),m=n.runWebGLProgram(g,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const O_={kernelName:Ke,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:a}=t,{filterSize:s,strides:o,pad:r,includeBatchInIndex:i}=e,c=n;I(4===a.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(a.shape.length,".")));const l=[1,1];I(zr(o,l),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(l,"'")));const u=Tr(a.shape,s,o,l,r),[h,d]=function(t,e,n,a){let s=new SA(n,"max",!1);const o=a.runWebGLProgram(s,[t],"float32");return s=new SA(n,"max",!0,!0,e),[o,a.runWebGLProgram(s,[t],"float32")]}(a,i,u,c);return[h,d]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const L_={kernelName:qe,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:a}=t,{keepDims:s,axis:o}=e,r=n,i=a.shape.length,c=_(o,a.shape);let l=c;const u=Wi(l,i),h=null!=u,d=r.shouldExecuteOnCPU([a]),p=[];let f=a;if(h){if(d){const t=r.texData.get(f.dataId).values,e=new Array(i);for(let s=0;s<e.length;s++)e[s]=a.shape[u[s]];const n=_E(t,a.shape,a.dtype,u,e);f=r.makeTensorInfo(e,a.dtype);r.texData.get(f.dataId).values=n}else f=WR(a,u,r);p.push(f),l=Vi(l.length,i)}Bi("sum",l,i);const[g,m]=zi(f.shape,l);let b=g;s&&(b=Pi(g,c));const x=function(t,e,n,a){const s=N(e),o=_R({inputs:{x:t},attrs:{shape:[N(t.shape)/s,s]},backend:a}),r=zR(o,"float32","mean",a),i=_R({inputs:{x:r},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(r),i}(f,m,b,r);for(const y of p)r.disposeIntermediateTensorInfo(y);return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M_={kernelName:Xe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:r}=a,i=s.shape.length,c=_(o,s.shape);let l=c;const u=Wi(l,i);let h=s;null!=u&&(h=GR({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Vi(l.length,s.shape.length)),Bi("min",l,i);const[d,p]=zi(h.shape,l),f=_R({inputs:{x:h},backend:n,attrs:{shape:[-1,N(p)]}}),g=zR(f,f.dtype,"min",n);let m;if(r){m=_R({inputs:{x:g},backend:n,attrs:{shape:Pi(d,c)}})}else m=_R({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=u&&n.disposeIntermediateTensorInfo(h),m}},z_=SR({opSnippet:lR+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+hR+"\n  return result;\n",cpuKernelImpl:iE}),P_={kernelName:Ye,backendName:"webgl",kernelFunc:z_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class B_{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,s=fT(a),o=e.map((t=>t[0])).join(","),r=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(s," start = ").concat(s,"(").concat(o,");\n      ").concat(s," end = ").concat(s,"(").concat(r,");\n\n      void main() {\n        ").concat(s," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(s," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(o,";\n        int end = ").concat(r,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W_{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,s=fT(a),o=e.map((t=>t[0])).join(","),r=e.map(((e,n)=>e[0]+t[n])).join(","),i=ME("rc",a),c=ME("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h="reflect"===n?0:1;let d="";if(1===a){const t="\n        ".concat(s," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(h,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(h,";\n        }\n        source -= start;\n      ");d="\n        ".concat(s," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const t="\n        ".concat(s," source = rc;\n        ").concat(s," lt = ").concat(s,"(lessThan(source, start));\n        ").concat(s," gte = ").concat(s,"(greaterThanEqual(source, end));\n        ").concat(s," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(h,") +\n                gte * ((end - 1) * 2 - source + ").concat(h,");\n        source -= start;\n      ");d="\n        ".concat(s," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(t,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(t,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(s," start = ").concat(s,"(").concat(o,");\n      const ").concat(s," end = ").concat(s,"(").concat(r,");\n\n      void main() {\n        ").concat(s," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d,"\n        setOutput(result);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U_={kernelName:Ze,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:a}=t,{paddings:s,mode:o}=n,r=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new W_(a.shape,s,o):new B_(a.shape,s,o);return e.runWebGLProgram(r,[a],a.dtype)}},V_=SR({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+hR+"\n  return result;\n"}),G_={kernelName:Je,backendName:"webgl",kernelFunc:V_};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class H_{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(e-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(e-1,"));\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j_=SR({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),K_={kernelName:se,backendName:"webgl",kernelFunc:j_},q_="return a - b;",X_=SR({opSnippet:q_,packedOpSnippet:q_,supportsComplex:!0,cpuKernelImpl:AE}),Y_={kernelName:aa,backendName:"webgl",kernelFunc:X_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Z_(t){const{inputs:e,backend:n,attrs:a}=t,{logits:s}=e,{dim:o}=a,r=_([o],s.shape),i=C_({inputs:{x:s},backend:n,attrs:{reductionIndices:r,keepDims:!1}}),c=Pi(i.shape,r),l=_R({inputs:{x:i},backend:n,attrs:{shape:c}}),u=X_({inputs:{a:s,b:l},backend:n}),h=gD({inputs:{x:u},backend:n}),d=UR({inputs:{x:h},backend:n,attrs:{axis:r,keepDims:!1}}),p=_R({inputs:{x:d},backend:n,attrs:{shape:c}}),f=j_({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const J_={kernelName:Hn,backendName:"webgl",kernelFunc:Z_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q_={kernelName:Qe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{logits:s}=e,{numSamples:o,seed:r,normalized:i}=a,c=i?s:Z_({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new H_(l,u,o),d=[[r]],p=n.runWebGLProgram(h,[c],"int32",d);return i||n.disposeIntermediateTensorInfo(c),p}},$_=HE+"\n  return -x;\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tO={kernelName:tn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;if(n.shouldExecuteOnCPU([a])){const t=n.texData.get(a.dataId),[e,s]=lE(t.values,a.shape,a.dtype);return n.makeTensorInfo(s,a.dtype,e)}let s;return s=at().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new aR(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new GE(a.shape,$_),n.runWebGLProgram(s,[a],a.dtype)}},eO=Su;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nO={kernelName:nn,backendName:"webgl",kernelFunc:function(t){ka("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:o}=e,{maxOutputSize:r,iouThreshold:i,scoreThreshold:c}=a,l=n.readSync(s.dataId),u=n.readSync(o.dataId),{selectedIndices:h}=eO(l,u,r,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},aO=Nu;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sO={kernelName:an,backendName:"webgl",kernelFunc:function(t){ka("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:o}=e,{maxOutputSize:r,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a,u=n.readSync(s.dataId),h=n.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=aO(u,h,r,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},oO=Tu;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rO={kernelName:sn,backendName:"webgl",kernelFunc:function(t){ka("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:o}=e,{maxOutputSize:r,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a,u=n.readSync(s.dataId),h=n.readSync(o.dataId),d=r,p=i,f=c,g=l,{selectedIndices:m,selectedScores:b}=oO(u,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iO{constructor(t,e,n,a){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cO={kernelName:rn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{indices:s}=e,{dtype:o,depth:r,onValue:i,offValue:c}=a,l=N(s.shape),u=new iO(l,r,i,c),h=_R({inputs:{x:s},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(u,[h],o);n.disposeIntermediateTensorInfo(h);const p=_R({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,r]}});return n.disposeIntermediateTensorInfo(d),p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lO(t){const{inputs:e,backend:n}=t,{x:a}=e;if("complex64"===a.dtype){const t=XA({inputs:{input:a},backend:n}),e=lO({inputs:{x:t},backend:n}),s=uF({inputs:{input:a},backend:n}),o=lO({inputs:{x:s},backend:n}),r=gR({inputs:{real:e,imag:o},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),r}return ND({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const uO={kernelName:pa,backendName:"webgl",kernelFunc:lO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hO={kernelName:on,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=XA({inputs:{input:s},backend:a}),n=t({inputs:{x:e},backend:a}),o=uF({inputs:{input:s},backend:a}),r=lO({inputs:{x:o},backend:a}),i=gR({inputs:{real:n,imag:r},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(r),i}return ND({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:a})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dO={kernelName:cn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{axis:s}=a;if(1===e.length)return bD({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const o=e[0].shape,r=e[0].dtype;e.forEach((t=>{C(o,t.shape,"All tensors passed to stack must have matching shapes"),I(r===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=pF({inputs:e.map((t=>{const e=bD({inputs:{input:t},backend:n,attrs:{dim:s}});return i.push(e),e})),backend:n,attrs:{axis:s}});return i.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pO{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,s=fT(a),o=e.map((t=>t[0])).join(","),r=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(s," start = ").concat(s,"(").concat(o,");\n      ").concat(s," end = ").concat(s,"(").concat(r,");\n\n      void main() {\n        ").concat(s," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(s," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(o,";\n        int end = ").concat(r,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fO{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,s=fT(a),o=e.map((t=>t[0])).join(","),r=e.map(((e,n)=>e[0]+t[n])).join(","),i=ME("rc",a),c=ME("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h=["".concat(s," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,g=1===a?2:4;f<g;f++)p+="\n        ".concat(h[f],"\n        if (").concat(d,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(s," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(s," start = ").concat(s,"(").concat(o,");\n      const ").concat(s," end = ").concat(s,"(").concat(r,");\n\n      void main() {\n        ").concat(s," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gO=t=>{const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{paddings:o,constantValue:r}=a;if(0===N(s.shape)){return ND({backend:n,attrs:{shape:o.map(((t,e)=>t[0]+s.shape[e]+t[1])),value:r,dtype:s.dtype}})}const i=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fO(s.shape,o,r):new pO(s.shape,o,r),c=[[r]];return n.runWebGLProgram(i,[s],s.dtype,c)},mO={kernelName:ln,backendName:"webgl",kernelFunc:gO},bO=SR({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+hR+"\n  return result;\n"}),xO={kernelName:un,backendName:"webgl",kernelFunc:bO};const yO={kernelName:dn,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:r}=a,i=s.shape.length,c=[],l=_(o,s.shape);let u=l;const h=Wi(u,i);let d,p=s;if(null!=h&&(p=GR({inputs:{x:s},backend:n,attrs:{perm:h}}),u=Vi(u.length,i),c.push(p)),Bi("prod",u,i),n.shouldExecuteOnCPU([p])){const t=n.texData.get(p.dataId).values,{outVals:e,outShape:a,outDtype:s}=hE(p.shape,p.dtype,t,u);d=n.makeTensorInfo(a,s,e)}else{const[t,e]=zi(p.shape,u),a=N(e),o=_R({inputs:{x:p},backend:n,attrs:{shape:[-1,a]}}),r=zR(o,Js(s.dtype),"prod",n);d=_R({inputs:{x:r},backend:n,attrs:{shape:t}}),c.push(o),c.push(r)}if(r){c.push(d);const t=Pi(d.shape,l);d=_R({inputs:{x:d},backend:n,attrs:{shape:t}})}return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kO={kernelName:pn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{paramsNestedSplits:s,paramsDenseValues:o,indices:r}=e,{outputRaggedRank:i}=a,c=s.map((t=>n.readSync(t.dataId))),l=s.map((t=>t.shape)),u=n.readSync(o.dataId),h=n.readSync(r.dataId),[d,p,f]=dE(c,l,u,o.shape,o.dtype,h,r.shape,i),g=d.map((t=>n.makeTensorInfo([t.length],"int32",t))),m=n.makeTensorInfo(f,o.dtype,p);return g.concat([m])}};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wO={kernelName:fn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{starts:a,limits:s,deltas:o}=e,r=n.readSync(a.dataId),i=n.readSync(s.dataId),c=n.readSync(o.dataId),[l,u]=pE(r,a.shape,a.dtype,i,s.shape,c,o.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vO={kernelName:gn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{shape:s,values:o,defaultValue:r,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=a,l=n.readSync(s.dataId),u=n.readSync(o.dataId),h=n.readSync(r.dataId),d=i.map((t=>n.readSync(t.dataId))),p=i.map((t=>t.shape)),[f,g]=fE(l,s.shape,u,o.shape,o.dtype,h,r.shape,d,p,c);return n.makeTensorInfo(f,o.dtype,g)}},IO=t=>{const{backend:e,attrs:n}=t,{start:a,stop:s,step:o,dtype:r}=n,i=gE(a,s,o,r);return e.makeTensorInfo([i.length],r,i)},CO={kernelName:mn,backendName:"webgl",kernelFunc:IO},SO=CR({opSnippet:"return 1.0 / x;"}),NO={kernelName:xn,backendName:"webgl",kernelFunc:SO},TO=CR({opSnippet:HE+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),EO={kernelName:yn,backendName:"webgl",kernelFunc:TO},RO=CR({opSnippet:HE+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),AO={kernelName:Sn,backendName:"webgl",kernelFunc:RO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class FO{constructor(t,e,n,a,s){this.variableNames=["A"],this.outputShape=[];const[o,r,i,c]=t;this.outputShape=[o,e,n,c];const l=[a&&e>1?r-1:r,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(r,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DO{constructor(t,e,n,a,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,r,i,c]=t;this.outputShape=[o,e,n,c];const l=[a&&e>1?r-1:r,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(r,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _O={kernelName:In,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:r,size:i}=a,[c,l]=i,u=at().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new DO(s.shape,c,l,o,r):new FO(s.shape,c,l,o,r);return n.runWebGLProgram(u,[s],"float32")}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OO{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,s]=e,[,o,r]=t,i=[n&&o>1?a-1:a,n&&r>1?s-1:s],c=[n&&o>1?o-1:o,n&&r>1?r-1:r],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(r,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(s-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LO={kernelName:Cn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s,dy:o}=e,{alignCorners:r}=a,i=new OO(o.shape,s.shape,r);return n.runWebGLProgram(i,[o],o.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MO{constructor(t,e,n,a,s){this.variableNames=["A"],this.outputShape=[];const[o,r,i,c]=t;this.outputShape=[o,e,n,c];const l=[a&&e>1?r-1:r,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(r,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zO{constructor(t,e,n,a,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,r,i,c]=t;this.outputShape=[o,e,n,c];const l=[a&&e>1?r-1:r,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(r,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PO={kernelName:wn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:r,size:i}=a,[c,l]=i,u=at().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zO(s.shape,c,l,o,r):new MO(s.shape,c,l,o,r);return n.runWebGLProgram(u,[s],s.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BO{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,s]=e,[,o,r]=t,i=[n&&o>1?a-1:a,n&&r>1?s-1:s],c=[n&&o>1?o-1:o,n&&r>1?r-1:r],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(r,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(s,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WO={kernelName:vn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s,dy:o}=e,{alignCorners:r}=a,i=new BO(o.shape,s.shape,r);return n.runWebGLProgram(i,[o],o.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UO{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=t,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(t[0]," - coord - 1));\n        }\n      "));const a=t.map(((n,a)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),s=fT(n);this.userCode="\n      void main() {\n        ".concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VO{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=t;const a=ME("rc",n),s="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),o="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),r=fT(n);var i;function c(n){const a=t.map(((a,s)=>function(n,a){return-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(s,n))),s=a.join(","),o=a.slice(-2).join(",");return"getChannel(getX(".concat(s,"), vec2(").concat(o,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(t[0]," - rc - 1),\n            ").concat(t[0]," - rc - 1);\n          if(").concat(s,"){\n              result.g = getChannel(getX(").concat(t[0]," - (rc  + 1) - 1),\n                ").concat(t[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(r," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat((i=a.slice(),c(i)),";\n          if(").concat(s,"){\n            result.g = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",c(t)}(a.slice()),";\n          }\n          if(").concat(o,") {\n            result.b = ").concat(function(t){return t[n-2]="("+t[n-2]+" + 1)",c(t)}(a.slice()),";\n            if(").concat(s,") {\n              result.a = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",c(t)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GO={kernelName:Nn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{dims:o}=a,r=s.shape.length,i=_(o,s.shape);if(0===r)return pR({inputs:{x:s},backend:n});const c=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new VO(s.shape,i):new UO(s.shape,i);return n.runWebGLProgram(c,[s],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HO{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],a=t[2];this.outputShape=t;let s="";s="number"==typeof e?"float outputValue = ".concat(e.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(e.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(s,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jO={kernelName:ma,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:a}=t,{radians:s,fillValue:o,center:r}=e,i=n,c=new HO(a.shape,o),[l,u]=Ph(r,a.shape[1],a.shape[2]),h=[[l,u,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(c,[a],a.dtype,h)}},KO=CR({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),qO={kernelName:Tn,backendName:"webgl",kernelFunc:KO},XO=CR({opSnippet:"return inversesqrt(x);",cpuKernelImpl:mE}),YO={kernelName:En,backendName:"webgl",kernelFunc:XO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ZO{constructor(t,e,n,a,s,o,r=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const c=fT(s.length),l=fT(o.length);let u="";1===n?u="i":2===n&&(u="i, j");const h="getIndices(".concat(u,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const p="getUpdates(".concat(d,")");let f="";i&&(f="coords[0], coords[1]");const g="getDefaultValue(".concat(f,")"),m=e>1?"strides[j]":"strides";this.userCode="\n        ".concat(c," strides = ").concat(c,"(").concat(s,");\n\n        void main() {\n          ").concat(l," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(t,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(e,"; j++) {\n              int index = round(").concat(h,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(p,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(g,", sum, float(found)));\n        }\n      ")}}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JO{constructor(t,e,n,a,s,o,r=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;const c=fT(s.length),l=fT(o.length);let u="";1===n?u="i":2===n&&(u="i, j");const h="getIndices(".concat(u,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const p="getUpdates(".concat(d,")");let f="";i&&(f="coords[0], coords[1]");const g="getDefaultValue(".concat(f,")"),m=e>1?"strides[j]":"strides",b=e>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(c," strides = ").concat(c,"(").concat(s,");\n\n        void main() {\n          ").concat(l," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(t,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(e,"; j+=2) {\n              ivec4 index = round(").concat(h,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(e,") {\n                flattenedIndex += index.yw * ").concat(b,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(p,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(g,", sum, found));\n        }\n      ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QO={kernelName:Rn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:s,updates:o}=e,{shape:r}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Ql(0,s,r),d=[h/l,l];if(0===h)return n.makeTensorInfo(r,s.dtype);const p=_R({inputs:{x:s},backend:n,attrs:{shape:[c,i]}}),f=_R({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let m;m=at().getBool("WEBGL_PACK")?new JO(c,i,p.shape.length,f.shape.length,u,d):new ZO(c,i,p.shape.length,f.shape.length,u,d);const b=n.runWebGLProgram(m,[f,p,g],f.dtype),x=_R({inputs:{x:b},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $O{constructor(t,e,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const s="for (int i = 0; i < ".concat(Math.ceil(Math.log2(e+1)),"; ++i) { if (left >= right) break;"),o=2===at().getNumber("WEBGL_VERSION")?"while (left < right) {":s,r="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(o,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(r," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tL={kernelName:Fn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sortedSequence:s,values:o}=e,{side:r}=a,i=new $O(s.shape[0],s.shape[1],o.shape[1],r),c=[[s.shape[1]]];return n.runWebGLProgram(i,[s,o],"int32",c)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eL{constructor(t,e,n){let a,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)s="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],r=[];for(let a=0;a<e.length;a++)r.push("".concat(n[a])),a<t&&o.push("".concat(n[a]));a=o.join(),s=r.join()}const o=fT(n);this.userCode="\n      void main() {\n        ".concat(o," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(s,"));\n        } else {\n          setOutput(getB(").concat(s,"));\n        }\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nL={kernelName:Dn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:a,t:s,e:o}=e,r=new eL(a.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(r,[a,s,o],Zs(s.dtype,o.dtype))}},aL=CR({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(Hh,";\n  float scale = ").concat(jh,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),sL={kernelName:_n,backendName:"webgl",kernelFunc:aL},oL=CR({opSnippet:IR+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:xE}),rL={kernelName:Pn,backendName:"webgl",kernelFunc:oL},iL=CR({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),cL={kernelName:zn,backendName:"webgl",kernelFunc:iL},lL=CR({opSnippet:IR+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(hR,"\n  return result;\n")}),uL={kernelName:Ln,backendName:"webgl",kernelFunc:lL},hL=CR({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),dL={kernelName:Mn,backendName:"webgl",kernelFunc:hL},pL=CR({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),fL={kernelName:Bn,backendName:"webgl",kernelFunc:pL},gL={kernelName:Vn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockShape:o,paddings:r}=a;I(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=o.reduce(((t,e)=>t*e)),c=[[0,0]];c.push(...r);for(let b=1+o.length;b<s.shape.length;++b)c.push([0,0]);const l=[],u=gO({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),h=Bh(u.shape,o,i,!1),d=Wh(h.length,o.length,!1),p=Uh(u.shape,o,i,!1),f=_R({inputs:{x:u},backend:n,attrs:{shape:h}}),g=GR({inputs:{x:f},backend:n,attrs:{perm:d}}),m=_R({inputs:{x:g},backend:n,attrs:{shape:p}});return l.push(u),l.push(f),l.push(g),l.forEach((t=>n.disposeIntermediateTensorInfo(t))),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mL={kernelName:jn,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n}=t,{indices:a,values:s,denseShape:o,defaultValue:r}=e;if(1!==o.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(o.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==s.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(s.shape));if(0!==r.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(r.shape));const i=n.readSync(a.dataId),c=n.readSync(s.dataId),l=n.readSync(o.dataId),u=n.readSync(r.dataId)[0],[h,d,p,f,g]=wE(i,a.shape,a.dtype,c,s.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([g.length],a.dtype,new Int32Array(g))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bL={kernelName:Kn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:a,inputShape:s,newShape:o}=e;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==s.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(s.shape));if(1!==o.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(o.shape));const r=Array.from(n.readSync(s.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(o.dataId)),[l,u,h]=vE(i,a.shape,a.dtype,r,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xL={kernelName:qn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:s,segmentIds:o}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(s.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(o.shape));const r=n.readSync(a.dataId),i=n.readSync(s.dataId),c=n.readSync(o.dataId),[l,u]=IE(r,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yL={kernelName:Xn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:s,segmentIds:o}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(s.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(o.shape));const r=n.readSync(a.dataId),i=n.readSync(s.dataId),c=n.readSync(o.dataId),[l,u]=IE(r,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kL={kernelName:Yn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sparseIndices:s,sparseValues:o,defaultValue:r}=e,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Ql(0,s,i),p=!1;if("string"===o.dtype){const t=n.bufferSync(s),e=n.bufferSync(o),a=ys(n.readSync(r.dataId)[0]),f=bE(t,e,i,d,u,l,c,h,a,p);return n.makeTensorInfo(i,f.dtype,f.values)}const f=new ZO(l,c,s.shape.length,o.shape.length,h,[d,1],p),g=n.runWebGLProgram(f,[o,s,r],o.dtype),m=_R({inputs:{x:g},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(g),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wL={kernelName:Gn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{numOrSizeSplits:o,axis:r}=a,i=_(r,s.shape)[0],c=md(s,o,i),l=s.shape.length,u=new Array(l).fill(0),h=s.shape.slice();return c.map((t=>{const e=[...h];e[i]=t;const a=WA({inputs:{x:s},backend:n,attrs:{begin:u,size:e}});return u[i]+=t,a}))}},vL="return sqrt(x);",IL=CR({opSnippet:vL,packedOpSnippet:vL,cpuKernelImpl:CE}),CL={kernelName:Wn,backendName:"webgl",kernelFunc:IL},SL={kernelName:Jn,backendName:"webgl",kernelFunc:CR({opSnippet:"return x * x;"})},NL="return (a - b) * (a - b);",TL=SR({opSnippet:NL,packedOpSnippet:NL}),EL={kernelName:Zn,backendName:"webgl",kernelFunc:TL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RL={kernelName:Qn,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const o=_d(n.readSync(s.dataId)),r=SE(o,"string",a);return n.makeTensorInfo(s.shape,"string",r)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AL={kernelName:fa,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:a}=t,s=HE+"\n    return x > 0.0 ? 1.0 : float(".concat(e.alpha,");\n  "),o=new GE(a.shape,s);return n.runWebGLProgram(o,[a],a.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FL{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,s=fT(n.length),o=fT(n.length);let r="";if(1===a)r="coords * strides + begin";else{let t=0;r=n.map(((e,a)=>(t++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(t-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(s," begin = ").concat(s,"(").concat(t,");\n      ").concat(s," strides = ").concat(s,"(").concat(e,");\n\n      void main() {\n        ").concat(o," coords = getOutputCoords();\n        setOutput(getX(").concat(r,"));\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DL={kernelName:$n,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{begin:o,end:r,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:x,end:y,strides:k}=vh(s.shape,o,r,i,c,l,u,h,d);let w;if(g)w=_R({inputs:{x:s},backend:n,attrs:{shape:f}});else if(m||b){I(s.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(s.shape.length)));const t=uh(x,y,k),e=WA({inputs:{x:s},backend:n,attrs:{begin:x,size:t}});w=_R({inputs:{x:e},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(e)}else{if(n.shouldExecuteOnCPU([s])){const t=n.readSync(s.dataId),e=ir(s.shape,s.dtype,t),a=NE(p,e,k,x);w=n.makeTensorInfo(f,s.dtype,a.values)}else{const t=new FL(x,k,p);w=n.runWebGLProgram(t,[s],s.dtype)}}const v=_R({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),v}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _L={kernelName:ta,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{separator:s,nGramWidths:o,leftPad:r,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=e,d=n.readSync(u.dataId),p=n.readSync(h.dataId),[f,g]=TE(d,p,s,o,r,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OL={kernelName:ea,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{skipEmpty:s}=a,{input:o,delimiter:r}=e;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error("Input must be a vector, got shape: ".concat(o.shape));if(0!==r.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(r.shape));const i=n.readSync(o.dataId),c=n.readSync(r.dataId)[0],[l,u,h]=EE(i,c,s),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LL={kernelName:na,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{numBuckets:s}=a,{input:o}=e;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const r=n.readSync(o.dataId),i=RE(r,s);return n.makeTensorInfo(o.shape,"int32",i)}},ML=CR({opSnippet:"return tan(x);"}),zL={kernelName:sa,backendName:"webgl",kernelFunc:ML},PL=CR({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),BL={kernelName:oa,backendName:"webgl",kernelFunc:PL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WL={kernelName:An,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:a}=t,{tensor:s,indices:o,updates:r}=e,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Ql(0,o,s.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(s.shape,o.dtype);const p=_R({inputs:{x:o},backend:n,attrs:{shape:[c,i]}}),f=_R({inputs:{x:r},backend:n,attrs:{shape:[c,l]}}),g=_R({inputs:{x:s},backend:n,attrs:{shape:d}}),m=new ZO(c,i,p.shape.length,f.shape.length,u,d,!1,!0),b=n.runWebGLProgram(m,[f,p,g],g.dtype),x=_R({inputs:{x:b},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),x}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UL{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.rank=n.length;const a=fT(this.rank),s=function(t){const e=t.length;if(e>5)throw Error("Tile for rank ".concat(e," is not yet supported"));if(1===e)return"imod(resRC, ".concat(t[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let s=0;s<t.length;s++)a.push("imod(".concat(n[s],", ").concat(t[s],")"));return a.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(s,"));\n      }\n    ")}}function VL(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{reps:o}=a;if("string"===s.dtype||s.shape.length>5){const t=n.readSync(s.dataId),e="string"===s.dtype?t.map((t=>ys(t))):t,a=ir(s.shape,s.dtype,e),r=FE(a,o);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const r=new UL(s.shape,o);return n.runWebGLProgram(r,[s],s.dtype)}const GL={kernelName:ra,backendName:"webgl",kernelFunc:VL};class HL{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class jL{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KL(t,e){null!==e&&t.disposeIntermediateTensorInfo(e)}function qL(t){let e=1;for(;e<t;)e*=2;return e}const XL={kernelName:ia,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{k:o,sorted:r}=a,i=at().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=at().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,u=l[l.length-1];if(n.shouldExecuteOnCPU([s])||u<i||o>c){const t=n.readSync(s.dataId),[e,a]=DE(t,l,s.dtype,o,r);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===o)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===u)return[s,ND({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=N(l)/u,g=_R({inputs:{x:p},attrs:{shape:[f,u]},backend:n});d&&KL(n,p);const m=qL(o),b=qL(u);let x=null;const y=()=>null===x?[g,g]:[g,x],k=(t,e,a)=>{const s=y(),o=new HL(a),r=[[u],[null===x?1:0],[Number.NEGATIVE_INFINITY],[t],[e]],i=x;x=n.runWebGLProgram(o,s,"int32",r),KL(n,i)};for(let S=1;S<m;S*=2){const t=2*S;for(let e=S;e>=1;e/=2)k(t,e,[f,b])}for(let S=b;S>m;S/=2){const t=y(),e=new jL([f,S/2]),a=[[u],[null===x?1:0],[m]],s=x;x=n.runWebGLProgram(e,t,"int32",a),KL(n,s);const o=m/2,r=2*o;for(let n=o;n>=1;n/=2)k(r,n,x.shape)}let w=x;x=WA({inputs:{x:x},backend:n,attrs:{begin:0,size:[f,o]}}),KL(n,w);let v=jD({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});KL(n,g);const I=l.slice(0,-1);I.push(o),w=x,x=_R({inputs:{x:x},attrs:{shape:I},backend:n}),KL(n,w);const C=v;return v=_R({inputs:{x:v},attrs:{shape:I},backend:n}),KL(n,C),[v,x]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YL{constructor(t,e,n,a,s,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const r="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(t," && 0 <= coordX && coordX < ").concat(e,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(s,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(s,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(e,"));\n                float mapY = mapCoord(inY, float(").concat(t,"));\n\n                if (").concat(r," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZL={kernelName:ca,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{image:s,transforms:o}=e,{interpolation:r,fillMode:i,fillValue:c,outputShape:l}=a,[u,h,d,p]=s.shape,[f,g]=null!=l?l:[h,d],m=new YL(h,d,r,i,c,[u,f,g,p]);return n.runWebGLProgram(m,[s,o],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JL={kernelName:ua,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{axis:s}=n,{x:o}=e;ZN(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const r=a.readSync(o.dataId),{outputValues:i,outputShape:c,indices:l}=OE(r,s,o.shape,o.dtype);return[a.makeTensorInfo(c,o.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QL={kernelName:ha,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{value:s}=e;let{axis:o}=a;o<0&&(o+=s.shape.length);const r=s,i=r.shape.length,c=s.shape[o],l=new Array(i-1);let u=0;for(let g=0;g<i;g++)g!==o&&(l[u++]=r.shape[g]);const h=[],d=new Array(i).fill(0),p=r.shape.slice();p[o]=1;const f=new Array(c);for(let g=0;g<f.length;g++){d[o]=g;const t=WA({inputs:{x:r},backend:n,attrs:{begin:d,size:p}}),e=_R({inputs:{x:t},backend:n,attrs:{shape:l}});f[g]=e,h.push(t)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $L{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,a=t.batchSize,s=t.inSize,o=t.numSegments,r=o*Math.ceil(s/n);this.outputShape=[a,r];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";s%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(s,") {\n          return initializationValue;\n        }\n      "));let h="";s%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(s,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(h,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(o,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(o,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tM=[qR,YR,JR,$R,nA,oA,rA,iA,pA,fA,mA,xA,kA,vA,CA,TA,EA,FA,DA,_A,MA,VA,GA,HA,jA,JA,tF,aF,mR,rF,fF,vF,TF,RF,AF,FF,DF,OF,MF,PF,jF,KF,qF,YF,QF,eD,nD,sD,rD,iD,lD,uD,dD,fD,mD,xD,wD,CD,TD,RD,DD,OD,zD,WD,UD,GD,KD,XD,ZD,fR,JD,hF,$D,e_,a_,yR,o_,i_,c_,u_,d_,f_,m_,x_,w_,I_,S_,T_,E_,R_,D_,__,O_,L_,M_,P_,U_,G_,Q_,DR,tO,nO,sO,rO,qA,cO,hO,dO,mO,xO,vR,yO,kO,wO,vO,CO,YA,K_,NO,EO,AO,OR,_O,LO,PO,WO,GO,jO,qO,YO,QO,tL,nL,sL,rL,cL,uL,dL,UA,J_,fL,gL,mL,bL,xL,yL,kL,wL,CL,SL,EL,RL,AL,DL,_L,OL,LL,Y_,VR,zL,BL,WL,GL,XL,ZL,HR,JL,QL,{kernelName:da,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,segmentIds:o}=e,{numSegments:r}=a,i=s.shape.length,c=[];let l=0;const u=Wi([l],i);let h=s;null!=u&&(h=GR({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(h),l=Vi(1,i)[0]);const d=Ad(h.shape,l,r),p=N([h.shape[l]]),f=_R({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});c.push(f);const g=Js(s.dtype),m=(t,e,a,s,o)=>{const r=t.shape[0],i=t.shape[1],l=Rd(i,o),u=new $L({windowSize:l,inSize:i,batchSize:r,numSegments:o},e),h=n.compileAndRun(u,[t,a],s);if(c.push(h),h.shape[1]===o)return h;const d=IO({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),p=VL({inputs:{x:d},backend:n,attrs:{reps:[i/l]}});c.push(d),c.push(p);return m(h,e,p,s,o)},b=_R({inputs:{x:m(f,"unsortedSegmentSum",o,g,r)},backend:n,attrs:{shape:d}});let x=b;if(null!=u){c.push(b);const t=Ui(u);x=GR({inputs:{x:x},backend:n,attrs:{perm:t}})}return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}},uO];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const sM of tM)Na(sM);class eM extends t{constructor(){super(...arguments),this.scanDocument=async()=>{try{const t=(await g.getPhoto({quality:90,allowEditing:!0,resultType:l.Uri})).webPath,e=document.createElement("img");return e.src=t||"",e.onload=()=>{this.detectEdges(e).then((t=>{var e;const n=document.getElementById("outputCanvas");n.width=t.width,n.height=t.height,null===(e=n.getContext("2d"))||void 0===e||e.drawImage(t,0,0)}))},{scannedImages:[t||""],status:a.Success}}catch(t){return console.error("Camera error:",t),{scannedImages:[],status:a.Cancel}}}}async detectEdges(t){const e=document.createElement("canvas"),n=e.getContext("2d");e.width=t.width,e.height=t.height,null==n||n.drawImage(t,0,0,e.width,e.height);const a=null==n?void 0:n.getImageData(0,0,e.width,e.height);if(!a)throw new Error("Could not get image data from canvas.");let s=oh(a);const o=cr(s.expandDims(0),"float32"),r=function(t,e,n){if(S(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const a=po(t,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ko(t,e,a,n)}([[[[-1]],[[-1]],[[-1]]],[[[-1]],[[8]],[[-1]]],[[[-1]],[[-1]],[[-1]]],[[[-1]],[[-1]],[[-1]]],[[[-1]],[[8]],[[-1]]],[[[-1]],[[-1]],[[-1]]],[[[-1]],[[-1]],[[-1]]],[[[-1]],[[8]],[[-1]]],[[[-1]],[[-1]],[[-1]]]],[3,3,3,1],"float32"),i=li(o,r,1,"same").squeeze();return await sh(i,e),s.dispose(),i.dispose(),r.dispose(),e}async checkPermissions(){return{camera:"granted"}}async requestPermissions(){return{camera:"granted"}}}export{eM as DocumentScannerWeb};
